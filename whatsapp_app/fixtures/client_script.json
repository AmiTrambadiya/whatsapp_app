[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-07-11 15:11:36.961006",
  "module": "Whatsapp App",
  "name": "Send Whatsapp Message From Opportunity List",
  "script": "frappe.listview_settings['Opportunity'].onload = function(listview) {\n     const currentUserRoles = frappe.user_roles;\n  const isAdmin = currentUserRoles.includes('Administrator');\n\n  const hasRequiredRole = !isAdmin && (currentUserRoles.includes('Vendor') || currentUserRoles.includes('Customer') || currentUserRoles.includes('Driver'));\n\n  if (!hasRequiredRole || isAdmin) {\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n      test(listview);\n    });\n  }\n};\n\n\nfunction test(listview) {\n  let names = [];\n  $.each(listview.get_checked_items(), function(key, value) {\n    names.push(value.name);\n  });\n  if (names.length === 0) {\n    frappe.throw(__(\"No rows selected.\"));\n  }\n\n  frappe.call({\n    method: 'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n    args: {\n      'doctype': doctype\n    },\n    callback: (r) => {\n      if (r.message) {\n        const template = r.message;\n\n        frappe.call({\n          method: 'frappe.client.get_list',\n          args: {\n            'doctype': 'Templates',\n            'filters': {\n              'name': ['in', template]\n            },\n            'fields': ['name', 'status','sample'],\n            'limit_start': 0,  \n            'limit_page_length': 0  \n          },\n\n          callback: function(response) {\n            if (response.message) {\n              const templateData = response.message;\n              const customerDoctype = doctype;\n              const customerFields = frappe.get_meta(customerDoctype).fields.filter(field => {\n                return field.fieldtype !== 'Column Break' && field.fieldtype !== 'Section Break';\n              }).map(field => {\n                return {\n                  fieldname: field.fieldname,\n                  label: field.label\n                };\n              });\n\n              const customerFieldLabels = customerFields.map(fieldname => {\n                const fieldMeta = frappe.get_meta(doctype).fields.find(field => field.fieldname === fieldname);\n                return fieldMeta ? fieldMeta.label : fieldname;\n              });\n\n\n              const d1 = new frappe.ui.Dialog({\n                title: 'Send Message',\n                fields: [\n                  {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    onchange: function() {\n                      const selectedValue = this.get_value();\n                      const previousValue = this.last_value;\n                      if (selectedValue && selectedValue !== previousValue) {\n                        this.last_value = selectedValue;\n                        const selectedTemplateData = templateData.find((template) => template.name === selectedValue);\n                        if (selectedTemplateData) {\n                          const dynamicVariables = extractDynamicVariables(selectedTemplateData.sample);\n\n                          const variableData = dynamicVariables.map(variable => ({\n                            variable_name: variable,\n                            variable_value: '',\n                            is_dynamic: 0,\n                            doctype_field: ''\n                          }));\n                          renderTable(variableData);\n                          } else {\n                            renderTable([]);\n                          }\n                      }\n                    }\n                  }\n                ],\n                primary_action_label: 'Send',\n\n                primary_action(values) {\n                  const selectTemplateValue = d1.get_value('select_template');\n\n                  if (!selectTemplateValue) {\n                    frappe.msgprint('Please select a template.');\n                    return;\n                  }\n                    \n                  const tableData = getTableData();\n                  const dataList = tableData.map(row => ({\n                    name: row.variable_name,\n                    is_dynamic: row.is_dynamic ? 1 : 0,\n                    value: row.is_dynamic ? row.doctype_field : row.variable_value\n                  }));\n\n                    if (dataList.length === 0) {\n                        frappe.msgprint('Nothing to send whatsapp message here!');\n                        return;\n                     }\n                  const hasEmptyValue = dataList.some(row => !row.value);\n                  if (hasEmptyValue) {\n                    frappe.msgprint('Please fill in the Variable Value fields.');\n                    return;\n                  }\n\n                  showConfirmDialog(listview);\n\n                  d1.hide();\n                }\n              });\n \n              const tableSection = $('<div>').appendTo(d1.body);\n\n              function renderTable(data) {\n                tableSection.empty();\n        \n                if (data.length === 0) {\n                        const noDataMessage = $('<p>').text('No dynamic variable is available in this template').appendTo(tableSection);\n                        return;\n                    }\n\n                const table = $('<table class=\"table table-bordered\" id=\"tabledata\">').appendTo(tableSection);\n                const thead = $('<thead>').appendTo(table);\n                const tbody = $('<tbody>').appendTo(table);\n\n                const headerRow = $('<tr>').appendTo(thead);\n                $('<th>').text('Variable Name').appendTo(headerRow);\n                $('<th>').text('Is Dynamic').appendTo(headerRow);\n                $('<th>').text('Variable Value').appendTo(headerRow);\n\n                data.forEach(row => {\n                  const variableName = row.variable_name;\n                  const variableValue = row.variable_value;\n                  const isDynamic = row.is_dynamic;\n                  const doctypeField = row.doctype_field;\n\n                  const rowElement = $('<tr>').appendTo(tbody);\n                  $('<td>').text(variableName).appendTo(rowElement);\n                  const dynamicCheckbox = $('<input type=\"checkbox\">').prop('checked', !!isDynamic).appendTo($('<td>').appendTo(rowElement));\n                  const variableValueInput = $('<td>').appendTo(rowElement);\n                  if (isDynamic) {\n                    const selectField = $('<select>').css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n\n                    customerFields.forEach(field => {\n                      $('<option>').text(field.label).val(field.fieldname).appendTo(selectField);\n                    });\n\n                    selectField.val(doctypeField);\n                  } else {\n                      $('<input type=\"text\">')\n                        .val(variableValue)\n                        .css({ width: '200px', height: '30px' }) \n                        .appendTo(variableValueInput);\n                    }\n\n                  dynamicCheckbox.on('change', function() {\n                    const isChecked = $(this).is(':checked');\n                    row.is_dynamic = isChecked ? 1 : 0;\n                    if (isChecked) {\n                      variableValueInput.empty();\n                      const selectField = $('<select>').css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n\n                      customerFields.forEach(field => {\n                        $('<option>').text(field.label).val(field.fieldname).appendTo(selectField);\n                      });\n\n                      selectField.val(doctypeField);\n                      row.doctype_field = doctypeField; \n                    } else {\n                      variableValueInput.empty();\n                      $('<input type=\"text\">').val(row.variable_value).css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n                      row.doctype_field = ''; \n                    }\n                  });\n\n                  variableValueInput.on('change', function() {\n                    const selectedValue = $(this).val();\n                    if (isDynamic) {\n                      row.doctype_field = selectedValue;\n                    } else {\n                      row.variable_value = selectedValue;\n                    }\n                  });\n                });\n              }\n\n           function showConfirmDialog(listview) {\n              const selectedCustomerNames = listview.get_checked_items().map(item => item.name);\n              const selectTemplateValue = d1.get_value('select_template');\n              const selectedTemplateData = templateData.find(template => template.name === selectTemplateValue);\n              const templateSample = selectedTemplateData ? selectedTemplateData.sample : '';\n              const tableData = getTableData();\n              const dataList = tableData.map(row => ({\n                              name: row.variable_name,\n                              is_dynamic: row.is_dynamic ? 1 : 0,\n                              value: row.is_dynamic ? row.doctype_field : row.variable_value\n              }));\n              console.log(selectedCustomerNames)\n            \n             const updatedTemplateSample = selectedTemplateData.sample.replace(/{{([^{}]+)}}/g, (match, variable) => {\n             const variableRow = dataList.find(row => row.name === variable);\n             if (variableRow && variableRow.is_dynamic) {\n                   return `{{ ${variableRow.value} }}`;\n                 } else if (variableRow) {\n                   return variableRow.value;\n                 } else {\n                   return match;\n                 }\n               });\n               \n   \n              frappe.call({\n                method: 'frappe.client.get_list',\n                args: {\n                  doctype: 'Opportunity',\n                  filters: { name: ['in', selectedCustomerNames] },\n                  fields: ['name', 'whatsapp', 'title'], // Include 'whatsapp_no' field\n                  limit_start: 0,\n                  limit_page_length: 0\n                },\n                callback: function(response) {                 \n                    \n                  if (response.message) {\n                    const selectedCustomers = response.message;\n                    const whatsappNos = selectedCustomers.map(customer => customer.whatsapp);\n            \n                    const confirmDialog = new frappe.ui.Dialog({\n                      title: 'Whatsapp Message',\n                      fields: [\n                        {\n                          fieldtype: 'HTML',\n                          options: `\n                            <div class=\"template-preview\">\n                              <h5>Template Sample</h5>\n                              <div class=\"sample-data\">${updatedTemplateSample.replace(/\\n/g, '<br>')}</div>\n                            </div>\n                            <table class=\"table table-bordered\">\n                              <thead>\n                                <tr>\n                                  <th><input type=\"checkbox\" id=\"select-all-checkbox\" style=\"vertical-align: middle;\"></th>\n                                  <th style=\"display: none;\">Names</th>\n                                  <th>Title</th>\n                                  <th>Whatsapp Number</th>\n                                  <th></th> \n                                </tr>\n                              </thead>\n                              <tbody>\n                                ${selectedCustomers.map((customer, index) => `\n                                  <tr>\n                                    <td><input type=\"checkbox\" class=\"row-checkbox\" style=\"vertical-align: middle;\" ${whatsappNos[index] ? 'checked' : ''} ${whatsappNos[index] ? '' : 'disabled'}></td>\n                                    <td style=\"display: none;\">${customer.name}</td>\n                                    <td>${customer.title}</td>\n                                    <td>${whatsappNos[index] ? whatsappNos[index] : 'Whatsapp number not found'}</td>\n                                    <td class=\"text-center\"><button class=\"btn btn-default delete-row-btn\" data-index=\"${index}\" style=\"background-color: #f4f5f6; color: #808080;\"><i class=\"fa fa-trash\" style=\"font-size: 16px;\"></i></button></td>\n                                  </tr>\n                                `).join('')}\n                              </tbody>\n                            </table>\n                          `,\n                        },\n                      ],\n                      primary_action_label: 'Confirm',\n                      primary_action() {\n                        const selectedCustomerName = Array.from(confirmDialog.body.querySelectorAll('input.row-checkbox:checked')).map(checkbox => {\n                          const row = checkbox.closest('tr');\n                          return row.querySelector('td:nth-child(2)').textContent.trim();\n                        });\n            \n                        if (selectedCustomerName.length === 0) {\n                          frappe.msgprint('Please select a opportunity to send the WhatsApp message.');\n                          return;\n                        }\n            \n                        const sendConfirmationDialog = new frappe.ui.Dialog({\n                          title: 'Confirmation',\n                          fields: [\n                            {\n                              fieldtype: 'HTML',\n                              options: `<div>Do you want to send the WhatsApp message?</div>`,\n                            },\n                          ],\n                          primary_action_label: 'Yes',\n                          secondary_action_label: 'No',\n                          primary_action() {\n                            const selectedCustomerNames = Array.from(confirmDialog.body.querySelectorAll('input.row-checkbox:checked')).map(checkbox => {\n                              const row = checkbox.closest('tr');\n                              return row.querySelector('td:nth-child(2)').textContent.trim();\n                            });\n            \n                            const tableData = getTableData();\n                            const dataList = tableData.map(row => ({\n                              name: row.variable_name,\n                              is_dynamic: row.is_dynamic ? 1 : 0,\n                              value: row.is_dynamic ? row.doctype_field : row.variable_value\n                            }));\n            \n                            frappe.call({\n                              method: 'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                              args: {\n                                'template_name': selectTemplateValue,\n                                'doctype': 'Opportunity',\n                                'name': selectedCustomerNames,\n                                'data': dataList,\n                              },\n                              freeze: true,\n                              callback: (r) => {\n                                frappe.msgprint('Message sent');\n                              },\n                              error: (r) => {\n                                frappe.msgprint('Something went wrong!');\n                              }\n                            });\n            \n                            sendConfirmationDialog.hide();\n                            confirmDialog.hide();\n                          },\n                          secondary_action() {\n                            sendConfirmationDialog.hide();\n                          },\n                        });\n            \n                        sendConfirmationDialog.show();\n                      },\n                    });\n            \n            \n                    confirmDialog.body.querySelectorAll('.delete-row-btn').forEach(button => {\n                      button.addEventListener('click', function() {\n                        const row = this.closest('tr');\n                        const index = parseInt(this.dataset.index);\n                        row.remove();\n                      });\n                    });\n            \n                   const checkboxes = confirmDialog.body.querySelectorAll('.row-checkbox:not([disabled])');\n                    const selectAllCheckbox = confirmDialog.body.querySelector('#select-all-checkbox');\n                \n                    selectAllCheckbox.addEventListener('change', function() {\n                      checkboxes.forEach(checkbox => {\n                        if (!checkbox.disabled) {\n                          checkbox.checked = this.checked;\n                        }\n                      });\n                    });\n                    \n                    checkboxes.forEach(checkbox => {\n                      checkbox.addEventListener('change', function() {\n                        const allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);\n                        selectAllCheckbox.checked = allChecked;\n                      });\n                    });\n                    \n                    confirmDialog.body.querySelectorAll('.eye-icon-btn').forEach(button => {\n                      button.addEventListener('click', function() {\n                        const customerDetailsDialog = new frappe.ui.Dialog({\n                          title: 'Whatsapp Message Preview',\n                          fields: [\n                            {\n                              fieldtype: 'HTML',\n                              options: `\n                                <div class=\"sample-data\">${updatedTemplateSample.replace(/\\n/g, '<br>')}</div>\n                              `,\n                            },\n                          ],\n                          primary_action_label: 'OK',\n                          primary_action() {\n                            customerDetailsDialog.hide();\n                          },\n                        });\n                        \n                        customerDetailsDialog.show();\n    \n                      });\n                    });\n                         \n                    confirmDialog.show();\n                      }\n                    },\n              });\n            }\n\n              function getTableData() {\n                const table = tableSection.find('#tabledata');\n                const data = [];\n\n                table.find('tbody tr').each((index, element) => {\n                  const variableName = $(element).find('td:nth-child(1)').text();\n                  const isDynamic = $(element).find('input[type=\"checkbox\"]').is(':checked');\n                  const doctypeField = $(element).find('select').val();\n                  const variableValueInput = $(element).find('input[type=\"text\"]');\n                  const variableValue = isDynamic ? doctypeField : variableValueInput.val();\n\n                  data.push({\n                    variable_name: variableName,\n                    variable_value: variableValue,\n                    is_dynamic: isDynamic ? 1 : 0,\n                    doctype_field: doctypeField\n                  });\n                });\n\n                return data;\n              }\n\n\n              d1.show();\n            }\n          },\n          error: (r) => {\n            frappe.msgprint('something went wrong!');\n          }\n        });\n      }\n    },\n    error: (r) => {\n      frappe.msgprint('something went wrong!');\n    }\n  });\n}\n\nfunction extractDynamicVariables(templateSample) {\n  const regex = /{{([^{}]+)}}/g; \n  const matches = [];\n  let match;\n\n  while ((match = regex.exec(templateSample)) !== null) {\n    matches.push(match[1]);\n  }\n\n  return matches;\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-07-11 15:09:31.864392",
  "module": "Whatsapp App",
  "name": "Send Whatsapp Message From Lead List",
  "script": "frappe.listview_settings['Lead'].onload = function(listview) {\n     const currentUserRoles = frappe.user_roles;\n  const isAdmin = currentUserRoles.includes('Administrator');\n\n  const hasRequiredRole = !isAdmin && (currentUserRoles.includes('Vendor') || currentUserRoles.includes('Customer') || currentUserRoles.includes('Driver'));\n\n  if (!hasRequiredRole || isAdmin) {\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n      test(listview);\n    });\n  }\n};\n\nfunction test(listview) {\n  let names = [];\n  $.each(listview.get_checked_items(), function(key, value) {\n    names.push(value.name);\n  });\n  if (names.length === 0) {\n    frappe.throw(__(\"No rows selected.\"));\n  }\n\n  frappe.call({\n    method: 'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n    args: {\n      'doctype': doctype\n    },\n    callback: (r) => {\n      if (r.message) {\n        const template = r.message;\n\n        frappe.call({\n          method: 'frappe.client.get_list',\n          args: {\n            'doctype': 'Templates',\n            'filters': {\n              'name': ['in', template]\n            },\n            'fields': ['name', 'status','sample'],\n            'limit_start': 0,  \n            'limit_page_length': 0  \n          },\n\n          callback: function(response) {\n            if (response.message) {\n              const templateData = response.message;\n              const customerDoctype = doctype;\n              const customerFields = frappe.get_meta(customerDoctype).fields.filter(field => {\n                return field.fieldtype !== 'Column Break' && field.fieldtype !== 'Section Break';\n              }).map(field => {\n                return {\n                  fieldname: field.fieldname,\n                  label: field.label\n                };\n              });\n\n              const customerFieldLabels = customerFields.map(fieldname => {\n                const fieldMeta = frappe.get_meta(doctype).fields.find(field => field.fieldname === fieldname);\n                return fieldMeta ? fieldMeta.label : fieldname;\n              });\n\n\n              const d1 = new frappe.ui.Dialog({\n                title: 'Send Message',\n                fields: [\n                  {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    onchange: function() {\n                      const selectedValue = this.get_value();\n                      const previousValue = this.last_value;\n                      if (selectedValue && selectedValue !== previousValue) {\n                        this.last_value = selectedValue;\n                        const selectedTemplateData = templateData.find((template) => template.name === selectedValue);\n                        if (selectedTemplateData) {\n                          const dynamicVariables = extractDynamicVariables(selectedTemplateData.sample);\n\n                          const variableData = dynamicVariables.map(variable => ({\n                            variable_name: variable,\n                            variable_value: '',\n                            is_dynamic: 0,\n                            doctype_field: ''\n                          }));\n                          renderTable(variableData);\n                          } else {\n                            renderTable([]);\n                          }\n                      }\n                    }\n                  }\n                ],\n                primary_action_label: 'Send',\n\n                primary_action(values) {\n                  const selectTemplateValue = d1.get_value('select_template');\n\n                  if (!selectTemplateValue) {\n                    frappe.msgprint('Please select a template.');\n                    return;\n                  }\n                    \n                  const tableData = getTableData();\n                  const dataList = tableData.map(row => ({\n                    name: row.variable_name,\n                    is_dynamic: row.is_dynamic ? 1 : 0,\n                    value: row.is_dynamic ? row.doctype_field : row.variable_value\n                  }));\n                  \n                  if (dataList.length === 0) {\n                        frappe.msgprint('Nothing to send whatsapp message here!');\n                        return;\n                     }\n\n                  const hasEmptyValue = dataList.some(row => !row.value);\n                  if (hasEmptyValue) {\n                    frappe.msgprint('Please fill in the Variable Value fields.');\n                    return;\n                  }\n\n                  showConfirmDialog(listview);\n\n                  d1.hide();\n                }\n              });\n \n              const tableSection = $('<div>').appendTo(d1.body);\n\n              function renderTable(data) {\n                tableSection.empty();\n                if (data.length === 0) {\n                    const noDataMessage = $('<p>').text('No dynamic variable is available in this template').appendTo(tableSection);\n                    return;\n                }\n\n\n                const table = $('<table class=\"table table-bordered\" id=\"tabledata\">').appendTo(tableSection);\n                const thead = $('<thead>').appendTo(table);\n                const tbody = $('<tbody>').appendTo(table);\n\n                const headerRow = $('<tr>').appendTo(thead);\n                $('<th>').text('Variable Name').appendTo(headerRow);\n                $('<th>').text('Is Dynamic').appendTo(headerRow);\n                $('<th>').text('Variable Value').appendTo(headerRow);\n\n                data.forEach(row => {\n                  const variableName = row.variable_name;\n                  const variableValue = row.variable_value;\n                  const isDynamic = row.is_dynamic;\n                  const doctypeField = row.doctype_field;\n\n                  const rowElement = $('<tr>').appendTo(tbody);\n                  $('<td>').text(variableName).appendTo(rowElement);\n                  const dynamicCheckbox = $('<input type=\"checkbox\">').prop('checked', !!isDynamic).appendTo($('<td>').appendTo(rowElement));\n                  const variableValueInput = $('<td>').appendTo(rowElement);\n                  if (isDynamic) {\n                    const selectField = $('<select>').css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n\n                    customerFields.forEach(field => {\n                      $('<option>').text(field.label).val(field.fieldname).appendTo(selectField);\n                    });\n\n                    selectField.val(doctypeField);\n                  } else {\n                      $('<input type=\"text\">')\n                        .val(variableValue)\n                        .css({ width: '200px', height: '30px' })  // Set the desired width and height\n                        .appendTo(variableValueInput);\n                    }\n\n                  dynamicCheckbox.on('change', function() {\n                    const isChecked = $(this).is(':checked');\n                    row.is_dynamic = isChecked ? 1 : 0;\n                    if (isChecked) {\n                      variableValueInput.empty();\n                      const selectField = $('<select>').css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n\n                      customerFields.forEach(field => {\n                        $('<option>').text(field.label).val(field.fieldname).appendTo(selectField);\n                      });\n\n                      selectField.val(doctypeField);\n                      row.doctype_field = doctypeField; // Store the selected fieldname\n                    } else {\n                      variableValueInput.empty();\n                      $('<input type=\"text\">').val(row.variable_value).css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n                      row.doctype_field = ''; // Clear the stored fieldname\n                    }\n                  });\n\n                  variableValueInput.on('change', function() {\n                    const selectedValue = $(this).val();\n                    if (isDynamic) {\n                      row.doctype_field = selectedValue;\n                    } else {\n                      row.variable_value = selectedValue;\n                    }\n                  });\n                });\n              }\n\n          function showConfirmDialog(listview) {\n  const selectedCustomerNames = listview.get_checked_items().map(item => item.title); // Use item.title instead of item.name\n  const selectTemplateValue = d1.get_value('select_template');\n  const selectedTemplateData = templateData.find(template => template.name === selectTemplateValue);\n  const templateSample = selectedTemplateData ? selectedTemplateData.sample : '';\n  const tableData = getTableData();\n  const dataList = tableData.map(row => ({\n    name: row.variable_name,\n    is_dynamic: row.is_dynamic ? 1 : 0,\n    value: row.is_dynamic ? row.doctype_field : row.variable_value\n  }));\n  console.log(selectedCustomerNames);\n\n  const updatedTemplateSample = selectedTemplateData.sample.replace(/{{([^{}]+)}}/g, (match, variable) => {\n    const variableRow = dataList.find(row => row.name === variable);\n    if (variableRow && variableRow.is_dynamic) {\n      return `{{ ${variableRow.value} }}`;\n    } else if (variableRow) {\n      return variableRow.value;\n    } else {\n      return match;\n    }\n  });\n\n  frappe.call({\n    method: 'frappe.client.get_list',\n    args: {\n      doctype: 'Lead',\n      filters: { title: ['in', selectedCustomerNames] }, // Use 'title' instead of 'name' in the filters\n      fields: ['name', 'whatsapp_no','title'], // Include 'whatsapp_no' field\n      limit_start: 0,\n      limit_page_length: 0\n    },\n    callback: function(response) {\n      if (response.message) {\n        const selectedCustomers = response.message;\n        const whatsappNos = selectedCustomers.map(customer => customer.whatsapp_no);\n\n        const confirmDialog = new frappe.ui.Dialog({\n          title: 'Whatsapp Message',\n          fields: [\n            {\n              fieldtype: 'HTML',\n              options: `\n                <div class=\"template-preview\">\n                  <h5>Template Sample</h5>\n                  <div class=\"sample-data\">${updatedTemplateSample.replace(/\\n/g, '<br>')}</div>\n                </div>\n                <table class=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th><input type=\"checkbox\" id=\"select-all-checkbox\" style=\"vertical-align: middle;\"></th>\n                      <th style=\"display: none;\">Names</th>\n                      <th>Title</th>\n                      <th>Whatsapp Number</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    ${selectedCustomers\n                      .map(\n                        (customer, index) => `\n                      <tr>\n                        <td><input type=\"checkbox\" class=\"row-checkbox\" style=\"vertical-align: middle;\" ${\n                          whatsappNos[index] ? 'checked' : ''\n                        } ${whatsappNos[index] ? '' : 'disabled'}></td>\n                        <td style=\"display: none;\">${customer.name}</td>\n                        <td>${customer.title}</td>\n                        <td>${whatsappNos[index] ? whatsappNos[index] : 'Whatsapp number not found'}</td>\n                        <td class=\"text-center\"><button class=\"btn btn-default delete-row-btn\" data-index=\"${index}\" style=\"background-color: #f4f5f6; color: #808080;\"><i class=\"fa fa-trash\" style=\"font-size: 16px;\"></i></button></td>\n                      </tr>\n                    `\n                      )\n                      .join('')}\n                  </tbody>\n                </table>\n              `,\n            },\n          ],\n          primary_action_label: 'Confirm',\n          primary_action() {\n            const selectedCustomerName = Array.from(confirmDialog.body.querySelectorAll('input.row-checkbox:checked')).map(\n              checkbox => {\n                const row = checkbox.closest('tr');\n                return row.querySelector('td:nth-child(2)').textContent.trim();\n              }\n            );\n\n            if (selectedCustomerName.length === 0) {\n              frappe.msgprint('Please select a lead to send the WhatsApp message.');\n              return;\n            }\n\n            const sendConfirmationDialog = new frappe.ui.Dialog({\n              title: 'Confirmation',\n              fields: [\n                {\n                  fieldtype: 'HTML',\n                  options: `<div>Do you want to send the WhatsApp message?</div>`,\n                },\n              ],\n              primary_action_label: 'Yes',\n              secondary_action_label: 'No',\n              primary_action() {\n                const selectedCustomerNames = Array.from(confirmDialog.body.querySelectorAll('input.row-checkbox:checked')).map(\n                  checkbox => {\n                    const row = checkbox.closest('tr');\n                    return row.querySelector('td:nth-child(2)').textContent.trim();\n                  }\n                );\n\n                const tableData = getTableData();\n                const dataList = tableData.map(row => ({\n                  name: row.variable_name,\n                  is_dynamic: row.is_dynamic ? 1 : 0,\n                  value: row.is_dynamic ? row.doctype_field : row.variable_value\n                }));\n\n                frappe.call({\n                  method: 'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                  args: {\n                    template_name: selectTemplateValue,\n                    doctype: 'Lead',\n                    name: selectedCustomerNames, \n                    data: dataList,\n                  },\n                  freeze: true,\n                  callback: r => {\n                    frappe.msgprint('Message sent');\n                  },\n                  error: r => {\n                    frappe.msgprint('Something went wrong!');\n                  }\n                });\n\n                sendConfirmationDialog.hide();\n                confirmDialog.hide();\n              },\n              secondary_action() {\n                sendConfirmationDialog.hide();\n              },\n            });\n\n            sendConfirmationDialog.show();\n          },\n        });\n\n        confirmDialog.body.querySelectorAll('.delete-row-btn').forEach(button => {\n          button.addEventListener('click', function() {\n            const row = this.closest('tr');\n            const index = parseInt(this.dataset.index);\n            row.remove();\n          });\n        });\n\n        const checkboxes = confirmDialog.body.querySelectorAll('.row-checkbox:not([disabled])');\n        const selectAllCheckbox = confirmDialog.body.querySelector('#select-all-checkbox');\n\n        selectAllCheckbox.addEventListener('change', function() {\n          checkboxes.forEach(checkbox => {\n            if (!checkbox.disabled) {\n              checkbox.checked = this.checked;\n            }\n          });\n        });\n\n        checkboxes.forEach(checkbox => {\n          checkbox.addEventListener('change', function() {\n            const allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);\n            selectAllCheckbox.checked = allChecked;\n          });\n        });\n\n        confirmDialog.body.querySelectorAll('.eye-icon-btn').forEach(button => {\n          button.addEventListener('click', function() {\n            const customerDetailsDialog = new frappe.ui.Dialog({\n              title: 'Whatsapp Message Preview',\n              fields: [\n                {\n                  fieldtype: 'HTML',\n                  options: `\n                    <div class=\"sample-data\">${updatedTemplateSample.replace(/\\n/g, '<br>')}</div>\n                  `,\n                },\n              ],\n              primary_action_label: 'OK',\n              primary_action() {\n                customerDetailsDialog.hide();\n              },\n            });\n\n            customerDetailsDialog.show();\n          });\n        });\n\n        confirmDialog.show();\n      }\n    },\n  });\n}\n\n              function getTableData() {\n                const table = tableSection.find('#tabledata');\n                const data = [];\n\n                table.find('tbody tr').each((index, element) => {\n                  const variableName = $(element).find('td:nth-child(1)').text();\n                  const isDynamic = $(element).find('input[type=\"checkbox\"]').is(':checked');\n                  const doctypeField = $(element).find('select').val();\n                  const variableValueInput = $(element).find('input[type=\"text\"]');\n                  const variableValue = isDynamic ? doctypeField : variableValueInput.val();\n\n                  data.push({\n                    variable_name: variableName,\n                    variable_value: variableValue,\n                    is_dynamic: isDynamic ? 1 : 0,\n                    doctype_field: doctypeField\n                  });\n                });\n\n                return data;\n              }\n\n\n              d1.show();\n            }\n          },\n          error: (r) => {\n            frappe.msgprint('something went wrong!');\n          }\n        });\n      }\n    },\n    error: (r) => {\n      frappe.msgprint('something went wrong!');\n    }\n  });\n}\n\nfunction extractDynamicVariables(templateSample) {\n  const regex = /{{([^{}]+)}}/g; \n  const matches = [];\n  let match;\n\n  while ((match = regex.exec(templateSample)) !== null) {\n    matches.push(match[1]);\n  }\n\n  return matches;\n}\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-07-11 15:10:10.196774",
  "module": "Whatsapp App",
  "name": "Send Whatsapp Message From Supplier List",
  "script": "frappe.listview_settings['Supplier'].onload = function(listview) {\n   const currentUserRoles = frappe.user_roles;\n  const isAdmin = currentUserRoles.includes('Administrator');\n  const hasRequiredRole = !isAdmin && (currentUserRoles.includes('Vendor') || currentUserRoles.includes('Customer') || currentUserRoles.includes('Driver'));\n\n  if (!hasRequiredRole || isAdmin) {\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n      test(listview);\n    });\n  }\n};\n\nfunction test(listview) {\n  let names = [];\n  $.each(listview.get_checked_items(), function(key, value) {\n    names.push(value.name);\n  });\n  if (names.length === 0) {\n    frappe.throw(__(\"No rows selected.\"));\n  }\n\n  frappe.call({\n    method: 'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n    args: {\n      'doctype': doctype\n    },\n    callback: (r) => {\n      if (r.message) {\n        const template = r.message;\n\n        frappe.call({\n          method: 'frappe.client.get_list',\n          args: {\n            'doctype': 'Templates',\n            'filters': {\n              'name': ['in', template]\n            },\n            'fields': ['name', 'status','sample'],\n            'limit_start': 0,  \n            'limit_page_length': 0  \n          },\n\n          callback: function(response) {\n            if (response.message) {\n              const templateData = response.message;\n              const customerDoctype = doctype;\n              const customerFields = frappe.get_meta(customerDoctype).fields.filter(field => {\n                return field.fieldtype !== 'Column Break' && field.fieldtype !== 'Section Break';\n              }).map(field => {\n                return {\n                  fieldname: field.fieldname,\n                  label: field.label\n                };\n              });\n\n              const customerFieldLabels = customerFields.map(fieldname => {\n                const fieldMeta = frappe.get_meta(doctype).fields.find(field => field.fieldname === fieldname);\n                return fieldMeta ? fieldMeta.label : fieldname;\n              });\n\n\n              const d1 = new frappe.ui.Dialog({\n                title: 'Send Message',\n                fields: [\n                  {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    onchange: function() {\n                      const selectedValue = this.get_value();\n                      const previousValue = this.last_value;\n                      if (selectedValue && selectedValue !== previousValue) {\n                        this.last_value = selectedValue;\n                        const selectedTemplateData = templateData.find((template) => template.name === selectedValue);\n                        if (selectedTemplateData) {\n                          const dynamicVariables = extractDynamicVariables(selectedTemplateData.sample);\n\n                          const variableData = dynamicVariables.map(variable => ({\n                            variable_name: variable,\n                            variable_value: '',\n                            is_dynamic: 0,\n                            doctype_field: ''\n                          }));\n                          renderTable(variableData);\n                          } else {\n                            renderTable([]);\n                          }\n                      }\n                    }\n                  }\n                ],\n                primary_action_label: 'Send',\n\n                primary_action(values) {\n                  const selectTemplateValue = d1.get_value('select_template');\n\n                  if (!selectTemplateValue) {\n                    frappe.msgprint('Please select a template.');\n                    return;\n                  }\n                    \n                  const tableData = getTableData();\n                  const dataList = tableData.map(row => ({\n                    name: row.variable_name,\n                    is_dynamic: row.is_dynamic ? 1 : 0,\n                    value: row.is_dynamic ? row.doctype_field : row.variable_value\n                  }));\n\n                  if (dataList.length === 0) {\n                        frappe.msgprint('Nothing to send whatsapp message here!');\n                        return;\n                     }\n\n                  const hasEmptyValue = dataList.some(row => !row.value);\n                  if (hasEmptyValue) {\n                    frappe.msgprint('Please fill in the Variable Value fields.');\n                    return;\n                  }\n\n                  showConfirmDialog(listview);\n\n                  d1.hide();\n                }\n              });\n \n              const tableSection = $('<div>').appendTo(d1.body);\n\n              function renderTable(data) {\n                tableSection.empty();\n                if (data.length === 0) {\n                    const noDataMessage = $('<p>').text('No dynamic variable is available in this template').appendTo(tableSection);\n                    return;\n                }\n\n                const table = $('<table class=\"table table-bordered\" id=\"tabledata\">').appendTo(tableSection);\n                const thead = $('<thead>').appendTo(table);\n                const tbody = $('<tbody>').appendTo(table);\n\n                const headerRow = $('<tr>').appendTo(thead);\n                $('<th>').text('Variable Name').appendTo(headerRow);\n                $('<th>').text('Is Dynamic').appendTo(headerRow);\n                $('<th>').text('Variable Value').appendTo(headerRow);\n\n                data.forEach(row => {\n                  const variableName = row.variable_name;\n                  const variableValue = row.variable_value;\n                  const isDynamic = row.is_dynamic;\n                  const doctypeField = row.doctype_field;\n\n                  const rowElement = $('<tr>').appendTo(tbody);\n                  $('<td>').text(variableName).appendTo(rowElement);\n                  const dynamicCheckbox = $('<input type=\"checkbox\">').prop('checked', !!isDynamic).appendTo($('<td>').appendTo(rowElement));\n                  const variableValueInput = $('<td>').appendTo(rowElement);\n                  if (isDynamic) {\n                    const selectField = $('<select>').css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n\n                    customerFields.forEach(field => {\n                      $('<option>').text(field.label).val(field.fieldname).appendTo(selectField);\n                    });\n\n                    selectField.val(doctypeField);\n                  } else {\n                      $('<input type=\"text\">')\n                        .val(variableValue)\n                        .css({ width: '200px', height: '30px' })  // Set the desired width and height\n                        .appendTo(variableValueInput);\n                    }\n\n                  dynamicCheckbox.on('change', function() {\n                    const isChecked = $(this).is(':checked');\n                    row.is_dynamic = isChecked ? 1 : 0;\n                    if (isChecked) {\n                      variableValueInput.empty();\n                      const selectField = $('<select>').css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n\n                      customerFields.forEach(field => {\n                        $('<option>').text(field.label).val(field.fieldname).appendTo(selectField);\n                      });\n\n                      selectField.val(doctypeField);\n                      row.doctype_field = doctypeField; // Store the selected fieldname\n                    } else {\n                      variableValueInput.empty();\n                      $('<input type=\"text\">').val(row.variable_value).css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n                      row.doctype_field = ''; // Clear the stored fieldname\n                    }\n                  });\n\n                  variableValueInput.on('change', function() {\n                    const selectedValue = $(this).val();\n                    if (isDynamic) {\n                      row.doctype_field = selectedValue;\n                    } else {\n                      row.variable_value = selectedValue;\n                    }\n                  });\n                });\n              }\n\n           function showConfirmDialog(listview) {\n              const selectedCustomerNames = listview.get_checked_items().map(item => item.name);\n              const selectTemplateValue = d1.get_value('select_template');\n              const selectedTemplateData = templateData.find(template => template.name === selectTemplateValue);\n              const templateSample = selectedTemplateData ? selectedTemplateData.sample : '';\n              const tableData = getTableData();\n              const dataList = tableData.map(row => ({\n                              name: row.variable_name,\n                              is_dynamic: row.is_dynamic ? 1 : 0,\n                              value: row.is_dynamic ? row.doctype_field : row.variable_value\n              }));\n              console.log(selectedCustomerNames)\n            \n             const updatedTemplateSample = selectedTemplateData.sample.replace(/{{([^{}]+)}}/g, (match, variable) => {\n             const variableRow = dataList.find(row => row.name === variable);\n             if (variableRow && variableRow.is_dynamic) {\n                   return `{{ ${variableRow.value} }}`;\n                 } else if (variableRow) {\n                   return variableRow.value;\n                 } else {\n                   return match;\n                 }\n               });\n               \n   \n              frappe.call({\n                method: 'frappe.client.get_list',\n                args: {\n                  doctype: 'Supplier',\n                  filters: { name: ['in', selectedCustomerNames] },\n                  fields: ['name', 'whatsapp_no', 'supplier_name'], // Include 'whatsapp_no' field\n                  limit_start: 0,\n                  limit_page_length: 0\n                },\n                callback: function(response) {                 \n                    \n                  if (response.message) {\n                    const selectedCustomers = response.message;\n                    const whatsappNos = selectedCustomers.map(customer => customer.whatsapp_no);\n            \n                    const confirmDialog = new frappe.ui.Dialog({\n                      title: 'Whatsapp Message',\n                      fields: [\n                        {\n                          fieldtype: 'HTML',\n                          options: `\n                            <div class=\"template-preview\">\n                              <h5>Template Sample</h5>\n                              <div class=\"sample-data\">${updatedTemplateSample.replace(/\\n/g, '<br>')}</div>\n                            </div>\n                            <table class=\"table table-bordered\">\n                              <thead>\n                                <tr>\n                                  <th><input type=\"checkbox\" id=\"select-all-checkbox\" style=\"vertical-align: middle;\"></th>\n                                  <th style=\"display: none;\">Names</th>\n                                  <th>Supplier Name</th>\n                                  <th>Whatsapp Number</th>\n                                  <th></th> \n                                </tr>\n                              </thead>\n                              <tbody>\n                                ${selectedCustomers.map((customer, index) => `\n                                  <tr>\n                                    <td><input type=\"checkbox\" class=\"row-checkbox\" style=\"vertical-align: middle;\" ${whatsappNos[index] ? 'checked' : ''} ${whatsappNos[index] ? '' : 'disabled'}></td>\n                                    <td style=\"display: none;\">${customer.name}</td>\n                                    <td>${customer.supplier_name}</td>\n                                    <td>${whatsappNos[index] ? whatsappNos[index] : 'Whatsapp number not found'}</td>\n                                    <td class=\"text-center\"><button class=\"btn btn-default delete-row-btn\" data-index=\"${index}\" style=\"background-color: #f4f5f6; color: #808080;\"><i class=\"fa fa-trash\" style=\"font-size: 16px;\"></i></button></td>\n                                  </tr>\n                                `).join('')}\n                              </tbody>\n                            </table>\n                          `,\n                        },\n                      ],\n                      primary_action_label: 'Confirm',\n                      primary_action() {\n                        const selectedCustomerName = Array.from(confirmDialog.body.querySelectorAll('input.row-checkbox:checked')).map(checkbox => {\n                          const row = checkbox.closest('tr');\n                          return row.querySelector('td:nth-child(2)').textContent.trim();\n                        });\n            \n                        if (selectedCustomerName.length === 0) {\n                          frappe.msgprint('Please select a supplier to send the WhatsApp message.');\n                          return;\n                        }\n            \n                        const sendConfirmationDialog = new frappe.ui.Dialog({\n                          title: 'Confirmation',\n                          fields: [\n                            {\n                              fieldtype: 'HTML',\n                              options: `<div>Do you want to send the WhatsApp message?</div>`,\n                            },\n                          ],\n                          primary_action_label: 'Yes',\n                          secondary_action_label: 'No',\n                          primary_action() {\n                            const selectedCustomerNames = Array.from(confirmDialog.body.querySelectorAll('input.row-checkbox:checked')).map(checkbox => {\n                              const row = checkbox.closest('tr');\n                              return row.querySelector('td:nth-child(2)').textContent.trim();\n                            });\n            \n                            const tableData = getTableData();\n                            const dataList = tableData.map(row => ({\n                              name: row.variable_name,\n                              is_dynamic: row.is_dynamic ? 1 : 0,\n                              value: row.is_dynamic ? row.doctype_field : row.variable_value\n                            }));\n            \n                            frappe.call({\n                              method: 'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                              args: {\n                                'template_name': selectTemplateValue,\n                                'doctype': 'Supplier',\n                                'name': selectedCustomerNames,\n                                'data': dataList,\n                              },\n                              freeze: true,\n                              callback: (r) => {\n                                frappe.msgprint('Message sent');\n                              },\n                              error: (r) => {\n                                frappe.msgprint('Something went wrong!');\n                              }\n                            });\n            \n                            sendConfirmationDialog.hide();\n                            confirmDialog.hide();\n                          },\n                          secondary_action() {\n                            sendConfirmationDialog.hide();\n                          },\n                        });\n            \n                        sendConfirmationDialog.show();\n                      },\n                    });\n            \n            \n                    confirmDialog.body.querySelectorAll('.delete-row-btn').forEach(button => {\n                      button.addEventListener('click', function() {\n                        const row = this.closest('tr');\n                        const index = parseInt(this.dataset.index);\n                        row.remove();\n                      });\n                    });\n            \n                   const checkboxes = confirmDialog.body.querySelectorAll('.row-checkbox:not([disabled])');\n                    const selectAllCheckbox = confirmDialog.body.querySelector('#select-all-checkbox');\n                \n                    selectAllCheckbox.addEventListener('change', function() {\n                      checkboxes.forEach(checkbox => {\n                        if (!checkbox.disabled) {\n                          checkbox.checked = this.checked;\n                        }\n                      });\n                    });\n                    \n                    checkboxes.forEach(checkbox => {\n                      checkbox.addEventListener('change', function() {\n                        const allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);\n                        selectAllCheckbox.checked = allChecked;\n                      });\n                    });\n                    \n                    confirmDialog.body.querySelectorAll('.eye-icon-btn').forEach(button => {\n                      button.addEventListener('click', function() {\n                        const customerDetailsDialog = new frappe.ui.Dialog({\n                          title: 'Whatsapp Message Preview',\n                          fields: [\n                            {\n                              fieldtype: 'HTML',\n                              options: `\n                                <div class=\"sample-data\">${updatedTemplateSample.replace(/\\n/g, '<br>')}</div>\n                              `,\n                            },\n                          ],\n                          primary_action_label: 'OK',\n                          primary_action() {\n                            customerDetailsDialog.hide();\n                          },\n                        });\n                        \n                        customerDetailsDialog.show();\n    \n                      });\n                    });\n                         \n                    confirmDialog.show();\n                      }\n                    },\n              });\n            }\n\n              function getTableData() {\n                const table = tableSection.find('#tabledata');\n                const data = [];\n\n                table.find('tbody tr').each((index, element) => {\n                  const variableName = $(element).find('td:nth-child(1)').text();\n                  const isDynamic = $(element).find('input[type=\"checkbox\"]').is(':checked');\n                  const doctypeField = $(element).find('select').val();\n                  const variableValueInput = $(element).find('input[type=\"text\"]');\n                  const variableValue = isDynamic ? doctypeField : variableValueInput.val();\n\n                  data.push({\n                    variable_name: variableName,\n                    variable_value: variableValue,\n                    is_dynamic: isDynamic ? 1 : 0,\n                    doctype_field: doctypeField\n                  });\n                });\n\n                return data;\n              }\n\n\n              d1.show();\n            }\n          },\n          error: (r) => {\n            frappe.msgprint('something went wrong!');\n          }\n        });\n      }\n    },\n    error: (r) => {\n      frappe.msgprint('something went wrong!');\n    }\n  });\n}\n\nfunction extractDynamicVariables(templateSample) {\n  const regex = /{{([^{}]+)}}/g; \n  const matches = [];\n  let match;\n\n  while ((match = regex.exec(templateSample)) !== null) {\n    matches.push(match[1]);\n  }\n\n  return matches;\n}\n\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Raw Data",
  "enabled": 1,
  "modified": "2023-07-11 15:19:28.868370",
  "module": "Whatsapp App",
  "name": "Raw Data ListView Button",
  "script": "frappe.listview_settings['Raw Data'] = {\n  onload: function(listview) {\n    const currentUserRoles = frappe.user_roles;\n    const isAdmin = currentUserRoles.includes('Administrator');\n    const hasRequiredRole = !isAdmin && (currentUserRoles.includes('Vendor') || currentUserRoles.includes('Customer') || currentUserRoles.includes('Driver'));\n\n    if (!hasRequiredRole || isAdmin) {\n      listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n        test(listview);\n      });\n    }\n  }\n};\n\n\n\nfunction test(listview) {\n  let names = [];\n  $.each(listview.get_checked_items(), function(key, value) {\n    names.push(value.name);\n  });\n  if (names.length === 0) {\n    frappe.throw(__(\"No rows selected.\"));\n  }\n\n  frappe.call({\n    method: 'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n    args: {\n      'doctype': doctype\n    },\n    callback: (r) => {\n      if (r.message) {\n        const template = r.message;\n\n        frappe.call({\n          method: 'frappe.client.get_list',\n          args: {\n            'doctype': 'Templates',\n            'filters': {\n              'name': ['in', template]\n            },\n            'fields': ['name', 'status','sample'],\n            'limit_start': 0,  \n            'limit_page_length': 0  \n          },\n\n          callback: function(response) {\n            if (response.message) {\n              const templateData = response.message;\n              const customerDoctype = doctype;\n              const customerFields = frappe.get_meta(customerDoctype).fields.filter(field => {\n                return field.fieldtype !== 'Column Break' && field.fieldtype !== 'Section Break';\n              }).map(field => {\n                return {\n                  fieldname: field.fieldname,\n                  label: field.label\n                };\n              });\n\n              const customerFieldLabels = customerFields.map(fieldname => {\n                const fieldMeta = frappe.get_meta(doctype).fields.find(field => field.fieldname === fieldname);\n                return fieldMeta ? fieldMeta.label : fieldname;\n              });\n\n\n              const d1 = new frappe.ui.Dialog({\n                title: 'Send Message',\n                fields: [\n                  {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    onchange: function() {\n                      const selectedValue = this.get_value();\n                      const previousValue = this.last_value;\n                      if (selectedValue && selectedValue !== previousValue) {\n                        this.last_value = selectedValue;\n                        const selectedTemplateData = templateData.find((template) => template.name === selectedValue);\n                        if (selectedTemplateData) {\n                          const dynamicVariables = extractDynamicVariables(selectedTemplateData.sample);\n\n                          const variableData = dynamicVariables.map(variable => ({\n                            variable_name: variable,\n                            variable_value: '',\n                            is_dynamic: 0,\n                            doctype_field: ''\n                          }));\n                          renderTable(variableData);\n                          } else {\n                            renderTable([]);\n                          }\n                      }\n                    }\n                  }\n                ],\n                primary_action_label: 'Send',\n\n                primary_action(values) {\n                  const selectTemplateValue = d1.get_value('select_template');\n\n                  if (!selectTemplateValue) {\n                    frappe.msgprint('Please select a template.');\n                    return;\n                  }\n                    \n                  const tableData = getTableData();\n                  const dataList = tableData.map(row => ({\n                    name: row.variable_name,\n                    is_dynamic: row.is_dynamic ? 1 : 0,\n                    value: row.is_dynamic ? row.doctype_field : row.variable_value\n                  }));\n                  \n                  if (dataList.length === 0) {\n                        frappe.msgprint('Nothing to send whatsapp message here!');\n                        return;\n                     }\n\n                  const hasEmptyValue = dataList.some(row => !row.value);\n                  if (hasEmptyValue) {\n                    frappe.msgprint('Please fill in the Variable Value fields.');\n                    return;\n                  }\n\n                  showConfirmDialog(listview);\n\n                  d1.hide();\n                }\n              });\n \n              const tableSection = $('<div>').appendTo(d1.body);\n\n              function renderTable(data) {\n                tableSection.empty();\n                \n                if (data.length === 0) {\n                        const noDataMessage = $('<p>').text('No dynamic variable is available in this template').appendTo(tableSection);\n                        return;\n                    }\n\n                const table = $('<table class=\"table table-bordered\" id=\"tabledata\">').appendTo(tableSection);\n                const thead = $('<thead>').appendTo(table);\n                const tbody = $('<tbody>').appendTo(table);\n\n                const headerRow = $('<tr>').appendTo(thead);\n                $('<th>').text('Variable Name').appendTo(headerRow);\n                $('<th>').text('Is Dynamic').appendTo(headerRow);\n                $('<th>').text('Variable Value').appendTo(headerRow);\n\n                data.forEach(row => {\n                  const variableName = row.variable_name;\n                  const variableValue = row.variable_value;\n                  const isDynamic = row.is_dynamic;\n                  const doctypeField = row.doctype_field;\n\n                  const rowElement = $('<tr>').appendTo(tbody);\n                  $('<td>').text(variableName).appendTo(rowElement);\n                  const dynamicCheckbox = $('<input type=\"checkbox\">').prop('checked', !!isDynamic).appendTo($('<td>').appendTo(rowElement));\n                  const variableValueInput = $('<td>').appendTo(rowElement);\n                  if (isDynamic) {\n                    const selectField = $('<select>').css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n\n                    customerFields.forEach(field => {\n                      $('<option>').text(field.label).val(field.fieldname).appendTo(selectField);\n                    });\n\n                    selectField.val(doctypeField);\n                  } else {\n                      $('<input type=\"text\">')\n                        .val(variableValue)\n                        .css({ width: '200px', height: '30px' })  // Set the desired width and height\n                        .appendTo(variableValueInput);\n                    }\n\n                  dynamicCheckbox.on('change', function() {\n                    const isChecked = $(this).is(':checked');\n                    row.is_dynamic = isChecked ? 1 : 0;\n                    if (isChecked) {\n                      variableValueInput.empty();\n                      const selectField = $('<select>').css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n\n                      customerFields.forEach(field => {\n                        $('<option>').text(field.label).val(field.fieldname).appendTo(selectField);\n                      });\n\n                      selectField.val(doctypeField);\n                      row.doctype_field = doctypeField; // Store the selected fieldname\n                    } else {\n                      variableValueInput.empty();\n                      $('<input type=\"text\">').val(row.variable_value).css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n                      row.doctype_field = ''; // Clear the stored fieldname\n                    }\n                  });\n\n                  variableValueInput.on('change', function() {\n                    const selectedValue = $(this).val();\n                    if (isDynamic) {\n                      row.doctype_field = selectedValue;\n                    } else {\n                      row.variable_value = selectedValue;\n                    }\n                  });\n                });\n              }\n\n           function showConfirmDialog(listview) {\n              const selectedCustomerNames = listview.get_checked_items().map(item => item.name);\n              const selectTemplateValue = d1.get_value('select_template');\n              const selectedTemplateData = templateData.find(template => template.name === selectTemplateValue);\n              const templateSample = selectedTemplateData ? selectedTemplateData.sample : '';\n              const tableData = getTableData();\n              const dataList = tableData.map(row => ({\n                              name: row.variable_name,\n                              is_dynamic: row.is_dynamic ? 1 : 0,\n                              value: row.is_dynamic ? row.doctype_field : row.variable_value\n              }));\n              console.log(selectedCustomerNames)\n            \n             const updatedTemplateSample = selectedTemplateData.sample.replace(/{{([^{}]+)}}/g, (match, variable) => {\n             const variableRow = dataList.find(row => row.name === variable);\n             if (variableRow && variableRow.is_dynamic) {\n                   return `{{ ${variableRow.value} }}`;\n                 } else if (variableRow) {\n                   return variableRow.value;\n                 } else {\n                   return match;\n                 }\n               });\n               \n   \n              frappe.call({\n                method: 'frappe.client.get_list',\n                args: {\n                  doctype: 'Raw Data',\n                  filters: { name: ['in', selectedCustomerNames] },\n                  fields: ['name', 'whatsapp_no', 'organization_name'], // Include 'whatsapp_no' field\n                  limit_start: 0,\n                  limit_page_length: 0\n                },\n                callback: function(response) {                 \n                    \n                  if (response.message) {\n                    const selectedCustomers = response.message;\n                    const whatsappNos = selectedCustomers.map(customer => customer.whatsapp_no);\n            \n                    const confirmDialog = new frappe.ui.Dialog({\n                      title: 'Whatsapp Message',\n                      fields: [\n                        {\n                          fieldtype: 'HTML',\n                          options: `\n                            <div class=\"template-preview\">\n                              <h5>Template Sample</h5>\n                              <div class=\"sample-data\">${updatedTemplateSample.replace(/\\n/g, '<br>')}</div>\n                            </div>\n                            <table class=\"table table-bordered\">\n                              <thead>\n                                <tr>\n                                  <th><input type=\"checkbox\" id=\"select-all-checkbox\" style=\"vertical-align: middle;\"></th>\n                                  <th style=\"display: none;\">Names</th>\n                                  <th>Organization Name</th>\n                                  <th>Whatsapp Number</th>\n                                  <th></th> \n                                </tr>\n                              </thead>\n                              <tbody>\n                                ${selectedCustomers.map((customer, index) => `\n                                  <tr>\n                                    <td><input type=\"checkbox\" class=\"row-checkbox\" style=\"vertical-align: middle;\" ${whatsappNos[index] ? 'checked' : ''} ${whatsappNos[index] ? '' : 'disabled'}></td>\n                                    <td style=\"display: none;\">${customer.name}</td>\n                                    <td>${customer.organization_name}</td>\n                                    <td>${whatsappNos[index] ? whatsappNos[index] : 'Whatsapp number not found'}</td>\n                                    <td class=\"text-center\"><button class=\"btn btn-default delete-row-btn\" data-index=\"${index}\" style=\"background-color: #f4f5f6; color: #808080;\"><i class=\"fa fa-trash\" style=\"font-size: 16px;\"></i></button></td>\n                                  </tr>\n                                `).join('')}\n                              </tbody>\n                            </table>\n                          `,\n                        },\n                      ],\n                      primary_action_label: 'Confirm',\n                      primary_action() {\n                        const selectedCustomerName = Array.from(confirmDialog.body.querySelectorAll('input.row-checkbox:checked')).map(checkbox => {\n                          const row = checkbox.closest('tr');\n                          return row.querySelector('td:nth-child(2)').textContent.trim();\n                        });\n            \n                        if (selectedCustomerName.length === 0) {\n                          frappe.msgprint('Please select a Raw Data to send the WhatsApp message.');\n                          return;\n                        }\n            \n                        const sendConfirmationDialog = new frappe.ui.Dialog({\n                          title: 'Confirmation',\n                          fields: [\n                            {\n                              fieldtype: 'HTML',\n                              options: `<div>Do you want to send the WhatsApp message?</div>`,\n                            },\n                          ],\n                          primary_action_label: 'Yes',\n                          secondary_action_label: 'No',\n                          primary_action() {\n                            const selectedCustomerNames = Array.from(confirmDialog.body.querySelectorAll('input.row-checkbox:checked')).map(checkbox => {\n                              const row = checkbox.closest('tr');\n                              return row.querySelector('td:nth-child(2)').textContent.trim();\n                            });\n            \n                            const tableData = getTableData();\n                            const dataList = tableData.map(row => ({\n                              name: row.variable_name,\n                              is_dynamic: row.is_dynamic ? 1 : 0,\n                              value: row.is_dynamic ? row.doctype_field : row.variable_value\n                            }));\n            \n                            frappe.call({\n                              method: 'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                              args: {\n                                'template_name': selectTemplateValue,\n                                'doctype': 'Raw Data',\n                                'name': selectedCustomerNames,\n                                'data': dataList,\n                              },\n                              freeze: true,\n                              callback: (r) => {\n                                frappe.msgprint('Message sent');\n                              },\n                              error: (r) => {\n                                frappe.msgprint('Something went wrong!');\n                              }\n                            });\n            \n                            sendConfirmationDialog.hide();\n                            confirmDialog.hide();\n                          },\n                          secondary_action() {\n                            sendConfirmationDialog.hide();\n                          },\n                        });\n            \n                        sendConfirmationDialog.show();\n                      },\n                    });\n            \n            \n                    confirmDialog.body.querySelectorAll('.delete-row-btn').forEach(button => {\n                      button.addEventListener('click', function() {\n                        const row = this.closest('tr');\n                        const index = parseInt(this.dataset.index);\n                        row.remove();\n                      });\n                    });\n            \n                   const checkboxes = confirmDialog.body.querySelectorAll('.row-checkbox:not([disabled])');\n                    const selectAllCheckbox = confirmDialog.body.querySelector('#select-all-checkbox');\n                \n                    selectAllCheckbox.addEventListener('change', function() {\n                      checkboxes.forEach(checkbox => {\n                        if (!checkbox.disabled) {\n                          checkbox.checked = this.checked;\n                        }\n                      });\n                    });\n                    \n                    checkboxes.forEach(checkbox => {\n                      checkbox.addEventListener('change', function() {\n                        const allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);\n                        selectAllCheckbox.checked = allChecked;\n                      });\n                    });\n                    \n                    confirmDialog.body.querySelectorAll('.eye-icon-btn').forEach(button => {\n                      button.addEventListener('click', function() {\n                        const customerDetailsDialog = new frappe.ui.Dialog({\n                          title: 'Whatsapp Message Preview',\n                          fields: [\n                            {\n                              fieldtype: 'HTML',\n                              options: `\n                                <div class=\"sample-data\">${updatedTemplateSample.replace(/\\n/g, '<br>')}</div>\n                              `,\n                            },\n                          ],\n                          primary_action_label: 'OK',\n                          primary_action() {\n                            customerDetailsDialog.hide();\n                          },\n                        });\n                        \n                        customerDetailsDialog.show();\n    \n                      });\n                    });\n                         \n                    confirmDialog.show();\n                      }\n                    },\n              });\n            }\n\n              function getTableData() {\n                const table = tableSection.find('#tabledata');\n                const data = [];\n\n                table.find('tbody tr').each((index, element) => {\n                  const variableName = $(element).find('td:nth-child(1)').text();\n                  const isDynamic = $(element).find('input[type=\"checkbox\"]').is(':checked');\n                  const doctypeField = $(element).find('select').val();\n                  const variableValueInput = $(element).find('input[type=\"text\"]');\n                  const variableValue = isDynamic ? doctypeField : variableValueInput.val();\n\n                  data.push({\n                    variable_name: variableName,\n                    variable_value: variableValue,\n                    is_dynamic: isDynamic ? 1 : 0,\n                    doctype_field: doctypeField\n                  });\n                });\n\n                return data;\n              }\n\n\n              d1.show();\n            }\n          },\n          error: (r) => {\n            frappe.msgprint('something went wrong!');\n          }\n        });\n      }\n    },\n    error: (r) => {\n      frappe.msgprint('something went wrong!');\n    }\n  });\n}\n\nfunction extractDynamicVariables(templateSample) {\n  const regex = /{{([^{}]+)}}/g; \n  const matches = [];\n  let match;\n\n  while ((match = regex.exec(templateSample)) !== null) {\n    matches.push(match[1]);\n  }\n\n  return matches;\n}\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 0,
  "modified": "2023-07-11 17:13:08.203571",
  "module": "Whatsapp App",
  "name": "Send Whatsapp Message From Customer List",
  "script": "    frappe.listview_settings['Customer'].onload = function(listview) {\n         const currentUserRoles = frappe.user_roles;\n      const isAdmin = currentUserRoles.includes('Administrator');\n    \n      const hasRequiredRole = !isAdmin && (currentUserRoles.includes('Vendor') || currentUserRoles.includes('Customer') || currentUserRoles.includes('Driver'));\n    \n      if (!hasRequiredRole || isAdmin) {\n        listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n          test(listview);\n        });\n      }\n    };\n    \n    \n    function test(listview) {\n      let names = [];\n      $.each(listview.get_checked_items(), function(key, value) {\n        names.push(value.name);\n      });\n      if (names.length === 0) {\n        frappe.throw(__(\"No rows selected.\"));\n      }\n    \n      frappe.call({\n        method: 'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n        args: {\n          'doctype': doctype\n        },\n        callback: (r) => {\n          if (r.message) {\n            const template = r.message;\n    \n            frappe.call({\n              method: 'frappe.client.get_list',\n              args: {\n                'doctype': 'Templates',\n                'filters': {\n                  'name': ['in', template]\n                },\n                'fields': ['name', 'status','sample'],\n                'limit_start': 0,  \n                'limit_page_length': 0  \n              },\n    \n              callback: function(response) {\n                if (response.message) {\n                  const templateData = response.message;\n                  const customerDoctype = doctype;\n                  const customerFields = frappe.get_meta(customerDoctype).fields.filter(field => {\n                    return field.fieldtype !== 'Column Break' && field.fieldtype !== 'Section Break';\n                  }).map(field => {\n                    return {\n                      fieldname: field.fieldname,\n                      label: field.label\n                    };\n                  });\n    \n                  const customerFieldLabels = customerFields.map(fieldname => {\n                    const fieldMeta = frappe.get_meta(doctype).fields.find(field => field.fieldname === fieldname);\n                    return fieldMeta ? fieldMeta.label : fieldname;\n                  });\n    \n    \n                  const d1 = new frappe.ui.Dialog({\n                    title: 'Send Message',\n                    fields: [\n                      {\n                        label: 'Select Template',\n                        fieldname: 'select_template',\n                        fieldtype: 'Select',\n                        options: template,\n                        onchange: function() {\n                          const selectedValue = this.get_value();\n                          const previousValue = this.last_value;\n                          if (selectedValue && selectedValue !== previousValue) {\n                            this.last_value = selectedValue;\n                            const selectedTemplateData = templateData.find((template) => template.name === selectedValue);\n                            if (selectedTemplateData) {\n                              const dynamicVariables = extractDynamicVariables(selectedTemplateData.sample);\n    \n                              const variableData = dynamicVariables.map(variable => ({\n                                variable_name: variable,\n                                variable_value: '',\n                                is_dynamic: 0,\n                                doctype_field: ''\n                              }));\n                              renderTable(variableData);\n                              } else {\n                                renderTable([]);\n                              }\n                          }\n                        }\n                      }\n                    ],\n                    primary_action_label: 'Send',\n    \n                    primary_action(values) {\n                      const selectTemplateValue = d1.get_value('select_template');\n    \n                      if (!selectTemplateValue) {\n                        frappe.msgprint('Please select a template.');\n                        return;\n                      }\n                        \n                      const tableData = getTableData();\n                      const dataList = tableData.map(row => ({\n                        name: row.variable_name,\n                        is_dynamic: row.is_dynamic ? 1 : 0,\n                        value: row.is_dynamic ? row.doctype_field : row.variable_value\n                      }));\n                      \n                     if (dataList.length === 0) {\n                        frappe.msgprint('Nothing to send whatsapp message here!');\n                        return;\n                     }\n    \n                      const hasEmptyValue = dataList.some(row => !row.value);\n                      if (hasEmptyValue) {\n                        frappe.msgprint('Please fill in the Variable Value fields.');\n                        return;\n                      }\n    \n                      showConfirmDialog(listview);\n    \n                      d1.hide();\n                    }\n                  });\n     \n                  const tableSection = $('<div>').appendTo(d1.body);\n    \n                  function renderTable(data) {\n                    tableSection.empty();\n                    if (data.length === 0) {\n                        const noDataMessage = $('<p>').text('No dynamic variable is available in this template').appendTo(tableSection);\n                        return;\n                    }\n    \n                    const table = $('<table class=\"table table-bordered\" id=\"tabledata\">').appendTo(tableSection);\n                    const thead = $('<thead>').appendTo(table);\n                    const tbody = $('<tbody>').appendTo(table);\n    \n                    const headerRow = $('<tr>').appendTo(thead);\n                    $('<th>').text('Variable Name').appendTo(headerRow);\n                    $('<th>').text('Is Dynamic').appendTo(headerRow);\n                    $('<th>').text('Variable Value').appendTo(headerRow);\n    \n                    data.forEach(row => {\n                      const variableName = row.variable_name;\n                      const variableValue = row.variable_value;\n                      const isDynamic = row.is_dynamic;\n                      const doctypeField = row.doctype_field;\n    \n                      const rowElement = $('<tr>').appendTo(tbody);\n                      $('<td>').text(variableName).appendTo(rowElement);\n                      const dynamicCheckbox = $('<input type=\"checkbox\">').prop('checked', !!isDynamic).appendTo($('<td>').appendTo(rowElement));\n                      const variableValueInput = $('<td>').appendTo(rowElement);\n                      if (isDynamic) {\n                        const selectField = $('<select>').css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n    \n                        customerFields.forEach(field => {\n                          $('<option>').text(field.label).val(field.fieldname).appendTo(selectField);\n                        });\n    \n                        selectField.val(doctypeField);\n                      } else {\n                          $('<input type=\"text\">')\n                            .val(variableValue)\n                            .css({ width: '200px', height: '30px' })  // Set the desired width and height\n                            .appendTo(variableValueInput);\n                        }\n    \n                      dynamicCheckbox.on('change', function() {\n                        const isChecked = $(this).is(':checked');\n                        row.is_dynamic = isChecked ? 1 : 0;\n                        if (isChecked) {\n                          variableValueInput.empty();\n                          const selectField = $('<select>').css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n    \n                          customerFields.forEach(field => {\n                            $('<option>').text(field.label).val(field.fieldname).appendTo(selectField);\n                          });\n    \n                          selectField.val(doctypeField);\n                          row.doctype_field = doctypeField; // Store the selected fieldname\n                        } else {\n                          variableValueInput.empty();\n                          $('<input type=\"text\">').val(row.variable_value).css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n                          row.doctype_field = ''; // Clear the stored fieldname\n                        }\n                      });\n    \n                      variableValueInput.on('change', function() {\n                        const selectedValue = $(this).val();\n                        if (isDynamic) {\n                          row.doctype_field = selectedValue;\n                        } else {\n                          row.variable_value = selectedValue;\n                        }\n                      });\n                    });\n                  }\n    \n               function showConfirmDialog(listview) {\n                  const selectedCustomerNames = listview.get_checked_items().map(item => item.name);\n                  const selectTemplateValue = d1.get_value('select_template');\n                  const selectedTemplateData = templateData.find(template => template.name === selectTemplateValue);\n                  const templateSample = selectedTemplateData ? selectedTemplateData.sample : '';\n                  const tableData = getTableData();\n                  const dataList = tableData.map(row => ({\n                                  name: row.variable_name,\n                                  is_dynamic: row.is_dynamic ? 1 : 0,\n                                  value: row.is_dynamic ? row.doctype_field : row.variable_value\n                  }));\n                \n                 const updatedTemplateSample = selectedTemplateData.sample.replace(/{{([^{}]+)}}/g, (match, variable) => {\n                 const variableRow = dataList.find(row => row.name === variable);\n                 if (variableRow && variableRow.is_dynamic) {\n                       return `{{ ${variableRow.value} }}`;\n                     } else if (variableRow) {\n                       return variableRow.value;\n                     } else {\n                       return match;\n                     }\n                   });\n                   \n       \n                  frappe.call({\n                    method: 'frappe.client.get_list',\n                    args: {\n                      doctype: 'Customer',\n                      filters: { name: ['in', selectedCustomerNames] },\n                      fields: ['name', 'whatsapp_no', 'customer_name'], // Include 'whatsapp_no' field\n                      limit_start: 0,\n                      limit_page_length: 0\n                    },\n                    callback: function(response) {                 \n                        \n                      if (response.message) {\n                        const selectedCustomers = response.message;\n                        const whatsappNos = selectedCustomers.map(customer => customer.whatsapp_no);\n                \n                        const confirmDialog = new frappe.ui.Dialog({\n                          title: 'Whatsapp Message',\n                          fields: [\n                            {\n                              fieldtype: 'HTML',\n                              options: `\n                                <div class=\"template-preview\">\n                                  <h5>Template Sample</h5>\n                                  <div class=\"sample-data\">${updatedTemplateSample.replace(/\\n/g, '<br>')}</div>\n                                </div>\n                                <table class=\"table table-bordered\">\n                                  <thead>\n                                    <tr>\n                                      <th><input type=\"checkbox\" id=\"select-all-checkbox\" style=\"vertical-align: middle;\"></th>\n                                      <th style=\"display: none;\">Names</th>\n                                      <th>Customer Name</th>\n                                      <th>Whatsapp Number</th>\n                                      <th></th> \n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    ${selectedCustomers.map((customer, index) => `\n                                      <tr>\n                                        <td><input type=\"checkbox\" class=\"row-checkbox\" style=\"vertical-align: middle;\" ${whatsappNos[index] ? 'checked' : ''} ${whatsappNos[index] ? '' : 'disabled'}></td>\n                                        <td style=\"display: none;\">${customer.name}</td>\n                                        <td>${customer.customer_name}</td>\n                                        <td>${whatsappNos[index] ? whatsappNos[index] : 'Whatsapp number not found'}</td>\n                                        <td class=\"text-center\"><button class=\"btn btn-default delete-row-btn\" data-index=\"${index}\" style=\"background-color: #f4f5f6; color: #808080;\"><i class=\"fa fa-trash\" style=\"font-size: 16px;\"></i></button></td>\n                                      </tr>\n                                    `).join('')}\n                                  </tbody>\n                                </table>\n                              `,\n                            },\n                          ],\n                          primary_action_label: 'Confirm',\n                          primary_action() {\n                            const selectedCustomerName = Array.from(confirmDialog.body.querySelectorAll('input.row-checkbox:checked')).map(checkbox => {\n                              const row = checkbox.closest('tr');\n                              return row.querySelector('td:nth-child(2)').textContent.trim();\n                            });\n                \n                            if (selectedCustomerName.length === 0) {\n                              frappe.msgprint('Please select a customer to send the WhatsApp message.');\n                              return;\n                            }\n                \n                            const sendConfirmationDialog = new frappe.ui.Dialog({\n                              title: 'Confirmation',\n                              fields: [\n                                {\n                                  fieldtype: 'HTML',\n                                  options: `<div>Do you want to send the WhatsApp message?</div>`,\n                                },\n                              ],\n                              primary_action_label: 'Yes',\n                              secondary_action_label: 'No',\n                              primary_action() {\n                                const selectedCustomerNames = Array.from(confirmDialog.body.querySelectorAll('input.row-checkbox:checked')).map(checkbox => {\n                                  const row = checkbox.closest('tr');\n                                  return row.querySelector('td:nth-child(2)').textContent.trim();\n                                });\n                \n                                const tableData = getTableData();\n                                const dataList = tableData.map(row => ({\n                                  name: row.variable_name,\n                                  is_dynamic: row.is_dynamic ? 1 : 0,\n                                  value: row.is_dynamic ? row.doctype_field : row.variable_value\n                                }));\n                \n                                frappe.call({\n                                  method: 'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                                  args: {\n                                    'template_name': selectTemplateValue,\n                                    'doctype': 'Customer',\n                                    'name': selectedCustomerNames,\n                                    'data': dataList,\n                                  },\n                                  freeze: true,\n                                  callback: (r) => {\n                                    frappe.msgprint('Message sent');\n                                  },\n                                  error: (r) => {\n                                    frappe.msgprint('Something went wrong!');\n                                  }\n                                });\n                \n                                sendConfirmationDialog.hide();\n                                confirmDialog.hide();\n                              },\n                              secondary_action() {\n                                sendConfirmationDialog.hide();\n                              },\n                            });\n                \n                            sendConfirmationDialog.show();\n                          },\n                        });\n                \n                \n                        confirmDialog.body.querySelectorAll('.delete-row-btn').forEach(button => {\n                          button.addEventListener('click', function() {\n                            const row = this.closest('tr');\n                            const index = parseInt(this.dataset.index);\n                            row.remove();\n                          });\n                        });\n                \n                       const checkboxes = confirmDialog.body.querySelectorAll('.row-checkbox:not([disabled])');\n                        const selectAllCheckbox = confirmDialog.body.querySelector('#select-all-checkbox');\n                    \n                        selectAllCheckbox.addEventListener('change', function() {\n                          checkboxes.forEach(checkbox => {\n                            if (!checkbox.disabled) {\n                              checkbox.checked = this.checked;\n                            }\n                          });\n                        });\n                        \n                        checkboxes.forEach(checkbox => {\n                          checkbox.addEventListener('change', function() {\n                            const allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);\n                            selectAllCheckbox.checked = allChecked;\n                          });\n                        });\n                        \n                        \n                        \n                        confirmDialog.show();\n                          }\n                        },\n                  });\n                }\n    \n                  function getTableData() {\n                    const table = tableSection.find('#tabledata');\n                    const data = [];\n    \n                    table.find('tbody tr').each((index, element) => {\n                      const variableName = $(element).find('td:nth-child(1)').text();\n                      const isDynamic = $(element).find('input[type=\"checkbox\"]').is(':checked');\n                      const doctypeField = $(element).find('select').val();\n                      const variableValueInput = $(element).find('input[type=\"text\"]');\n                      const variableValue = isDynamic ? doctypeField : variableValueInput.val();\n    \n                      data.push({\n                        variable_name: variableName,\n                        variable_value: variableValue,\n                        is_dynamic: isDynamic ? 1 : 0,\n                        doctype_field: doctypeField\n                      });\n                    });\n    \n                    return data;\n                  }\n    \n    \n                  d1.show();\n                }\n              },\n              error: (r) => {\n                frappe.msgprint('something went wrong!');\n              }\n            });\n          }\n        },\n        error: (r) => {\n          frappe.msgprint('something went wrong!');\n        }\n      });\n    }\n    \n    function extractDynamicVariables(templateSample) {\n      const regex = /{{([^{}]+)}}/g; \n      const matches = [];\n      let match;\n    \n      while ((match = regex.exec(templateSample)) !== null) {\n        matches.push(match[1]);\n      }\n    \n      return matches;\n    }\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-07-11 15:43:19.115864",
  "module": "Whatsapp App",
  "name": "Customer chat box",
  "script": "frappe.ui.form.on(\"Customer\", {\n    onload: function (frm) {\n        var f_name = cur_frm.doc.customer_name;\n\n        var container = $('<div class=\"custom-container\">').appendTo(frm.wrapper);\n\n        container.css({\n            width: \"30%\",\n            height: \"65%\",\n            backgroundColor: \"#ece5dd\",\n            position: \"fixed\",\n            top: \"50%\",\n            right: \"80px\",\n            transform: \"translateY(-50%)\",\n            borderRadius: \"5px\",\n            boxShadow: \"0 0 5px rgba(0, 0, 0, 0.4)\",\n            zIndex: 9999,\n            display: \"none\",\n        });\n\n        var headingDiv = $(\"<div>\")\n            .css(\"background-color\", \"#128c7e\")\n            .appendTo(container);\n\n        var closeButtonElement = $(\"<button>\")\n            .css(\"float\", \"right\")\n            .appendTo(headingDiv);\n\n        var closeIconElement = $(\"<i>\")\n            .addClass(\"fa fa-close\")\n            .css(\"font-size\", \"30px\");\n\n        closeButtonElement.prepend(closeIconElement);\n\n        closeButtonElement.css({\n            float: \"right\",\n            backgroundColor: \"#128c7e\",\n            marginRight: \"10px\",\n            marginTop: \"10px\",\n            color: \"#FFF\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n        var heading = $(\"<h3>\")\n            .css(\"padding-left\", \"10px\")\n            .css(\"color\", \"white\")\n            .css(\"margin-bottom\", \"0px\")\n            .css(\"background-color\", \"#128c7e\")\n            .css(\"padding-top\", \"15px\")\n            .css(\"padding-bottom\", \"15px\")\n            .text(f_name)\n            .appendTo(headingDiv);\n\n        var messagesDiv = $(\"<div>\")\n            .css(\"overflow-y\", \"scroll\")\n            .css(\"background-color\", \"#ece5dd\")\n            .css(\"height\", \"83%\")\n            .appendTo(container);\n\n        var statusElement;\n        var expiredMessageAdded = false;\n\n        var allElement = $(\"<div>\")\n            .css(\"height\", \"40px\")\n            .css(\"padding-top\", \"5px\")\n            .css(\"background-color\", \"#ece5dd\")\n            .css(\"display\", \"flex\")\n            .css(\"flex-direction\", \"row\")\n            .appendTo(container);\n\n\n        var buttonElement1 = $(\"<button>\").text(\"Template\");\n\n        buttonElement1.css({\n            height: \"25px\",\n            backgroundColor: \"#128c7e\",\n            marginLeft: \"5px\",\n            marginTop: \"4px\",\n            color: \"#FFF\",\n            padding: \"2px 4px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n        var inputElement = $(\"<input>\")\n            .attr(\"type\", \"text\")\n            .attr(\"placeholder\", \" Type a message...\");\n\n        inputElement.css({\n            marginLeft: \"5px\",\n            marginRight: \"5px\",\n            border: \"none\",\n            marginTop: \"5px\",\n            height: \"25px\",\n            borderRadius: \"4px\",\n            width: \"auto\",\n            flex: \"1\"\n        });\n\n        var buttonElement = $(\"<button>\");\n\n        var iconElement = $(\"<i>\")\n            .addClass(\"fa fa-paper-plane\");\n\n        buttonElement.prepend(iconElement);\n\n        buttonElement.css({\n            height: \"30px\",\n            backgroundColor: \"#128c7e\",\n            marginTop: \"2px\",\n            marginRight: \"10px\",\n            color: \"#FFF\",\n            padding: \"4px 8px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n\n        var showButtonClicked = true;\n\n        var currentUserRoles = frappe.user_roles;\n        var isAdmin = currentUserRoles.includes(\"Administrator\");\n\n        var hasRequiredRole =\n            !isAdmin &&\n            (currentUserRoles.includes(\"Vendor\") ||\n                currentUserRoles.includes(\"Customer\") ||\n                currentUserRoles.includes(\"Driver\"));\n\n        if (!hasRequiredRole || isAdmin) {\n            if (frm.doc.whatsapp_no) {\n                frm.add_custom_button(\n                    '<i class=\"fa fa-whatsapp\" aria-hidden=\"true\" style=\"font-size:24px;color:#25d366\" ></i>',\n                    function () {\n                        // var doctype = cur_frm.doctype;\n                        var phone = cur_frm.doc.whatsapp_no;\n                        var availableLog;\n                        frappe.call({\n                            method: \"frappe.client.get_list\",\n                            args: {\n                                doctype: \"wati call message log\",\n                                filters: {\n                                    name: phone,\n                                },\n                                fields: [\"name\"]\n                            },\n                            callback: function (response) {\n\n                                var message = response.message;\n                                var doctype = cur_frm.doctype;\n                                if (message && message.length > 0) {\n                                    var ans = message[0];\n                                    var ans_name = ans.name;\n\n\n                                    frappe.call({\n                                        method:\n                                            \"whatsapp_app.whatsapp_app.doctype.api.get_template_sample\",\n                                        args: {\n                                            phone: phone,\n                                        },\n                                        async: false,\n                                        callback: function (response) { },\n                                    });\n                                    frappe.call({\n                                        method: \"whatsapp_app.whatsapp_app.doctype.api.get_img\",\n                                        args: {\n                                            phone: phone,\n                                        },\n                                        async: false,\n                                        callback: function (response) { },\n                                    });\n                                    frappe.call({\n                                        method: \"frappe.client.get_list\",\n                                        args: {\n                                            doctype: \"wati call message log\",\n                                            filters: {\n                                                name: phone,\n                                            },\n                                            fields: [\"name\", \"data\"],\n                                        },\n                                        callback: function (response) {\n                                            if (response.message) {\n                                                var dataObj = response.message;\n                                                if (dataObj && dataObj.length > 0) {\n                                                    var dataValue = dataObj[0].data;\n\n                                                    var parsedData = JSON.parse(dataValue);\n                                                    var result = parsedData.data;\n\n                                                    var desiredDictionaries = [];\n                                                    var tempName;\n                                                    var tempImg;\n\n                                                    for (var i = 0; i < result.length; i++) {\n                                                        var dictionary = result[i];\n\n                                                        if (\n                                                            dictionary.message &&\n                                                            dictionary.message.hasOwnProperty(\"isOwner\")\n                                                        ) {\n                                                            desiredDictionaries.push(dictionary.message);\n                                                        } else if (\n                                                            dictionary.hasOwnProperty(\"owner\") &&\n                                                            !dictionary.owner\n                                                        ) {\n                                                            desiredDictionaries.push(dictionary);\n                                                        } else if (\n                                                            dictionary.hasOwnProperty(\"modified_sample\")\n                                                        ) {\n                                                            tempName = dictionary.modified_sample;\n\n                                                            var timedate = dictionary.send_time;\n                                                            tempImg = dictionary.templateImg;\n\n                                                            frappe.call({\n                                                                method:\n                                                                    \"whatsapp_app.whatsapp_app.doctype.api.get_image\",\n                                                                args: {\n                                                                    filename: tempImg,\n                                                                },\n                                                                async: false,\n                                                                callback: function (response) { },\n                                                            });\n\n                                                            desiredDictionaries.push({\n                                                                tempName: tempName,\n                                                                timedate: timedate,\n                                                                tempImg: tempImg,\n                                                            });\n                                                        }\n                                                    }\n\n                                                    var texts = desiredDictionaries.map(function (\n                                                        dictionary\n                                                    ) {\n                                                        if (\n                                                            typeof dictionary === \"object\" &&\n                                                            dictionary.hasOwnProperty(\"text\")\n                                                        ) {\n                                                            var text = dictionary.text;\n                                                        } else if (\n                                                            typeof dictionary === \"object\" &&\n                                                            dictionary.hasOwnProperty(\"tempName\") &&\n                                                            dictionary.hasOwnProperty(\"timedate\") &&\n                                                            dictionary.hasOwnProperty(\"tempImg\")\n                                                        ) {\n                                                        } else {\n                                                            return dictionary;\n                                                        }\n                                                    });\n\n                                                    container.empty();\n                                                    headingDiv.appendTo(container);\n                                                    messagesDiv.appendTo(container);\n\n                                                    messagesDiv.empty();\n\n                                                    allElement.appendTo(container);\n\n                                                    for (var j = 0; j < texts.length; j++) {\n                                                        var text = texts[j];\n                                                        var created = \"\";\n\n                                                        if (desiredDictionaries[j].hasOwnProperty(\"text\")) {\n                                                            text = desiredDictionaries[j].text;\n                                                            if (\n                                                                desiredDictionaries[j].hasOwnProperty(\"created\")\n                                                            ) {\n                                                                var datetimeString = desiredDictionaries[j].created;\n                                                                var dateObj = new Date(datetimeString);\n\n                                                                var day = dateObj.getUTCDate();\n                                                                var month = dateObj.getUTCMonth() + 1;\n                                                                var year = dateObj.getUTCFullYear();\n\n                                                                var hours = dateObj.getUTCHours();\n                                                                var minutes = dateObj.getUTCMinutes();\n                                                                var seconds = dateObj.getUTCSeconds();\n\n                                                                if (day < 10) {\n                                                                    day = \"0\" + day;\n                                                                }\n                                                                if (month < 10) {\n                                                                    month = \"0\" + month;\n                                                                }\n                                                                if (hours < 10) {\n                                                                    hours = \"0\" + hours;\n                                                                }\n                                                                if (minutes < 10) {\n                                                                    minutes = \"0\" + minutes;\n                                                                }\n                                                                if (seconds < 10) {\n                                                                    seconds = \"0\" + seconds;\n                                                                }\n\n                                                                created =\n                                                                    day +\n                                                                    \"-\" +\n                                                                    month +\n                                                                    \"-\" +\n                                                                    year +\n                                                                    \" \" +\n                                                                    hours +\n                                                                    \":\" +\n                                                                    minutes +\n                                                                    \":\" +\n                                                                    seconds;\n                                                            }\n                                                        }\n\n                                                        var textElement = $(\"<p>\")\n                                                            .css(\n                                                                \"padding-right\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"100px\"\n                                                                    : \"10px\"\n                                                            )\n                                                            .css(\n                                                                \"padding-left\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"10px\"\n                                                                    : \"100px\"\n                                                            )\n                                                            .css(\n                                                                \"text-align\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"left\"\n                                                                    : \"right\"\n                                                            )\n                                                            .appendTo(messagesDiv);\n\n                                                        var textContent = $(\"<div>\")\n                                                            .css(\n                                                                \"background-color\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"#fff\"\n                                                                    : \"#dcf8c6\"\n                                                            )\n                                                            .css(\"padding\", \"10px\")\n                                                            .css(\"padding-bottom\", \"20px\")\n                                                            .css(\"border-radius\", \"10px\")\n                                                            .text(text)\n                                                            .appendTo(textElement);\n\n                                                        if (desiredDictionaries[j].tempImg) {\n                                                            var tempImgElement = $(\"<img>\")\n                                                                .attr(\n                                                                    \"src\",\n                                                                    \"http://migoostage.frappe.cloud/files/\" +\n                                                                    desiredDictionaries[j].tempImg\n                                                                )\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var tempNameElement = $(\"<p>\")\n                                                            .text(desiredDictionaries[j].tempName)\n                                                            .appendTo(textContent);\n\n                                                        var timedateElement = $(\"<p>\")\n                                                            .text(desiredDictionaries[j].timedate)\n                                                            .css(\"color\", \"#808080\")\n                                                            .css(\"font-size\", \"12px\")\n                                                            .appendTo(textContent);\n\n                                                        if (created !== \"\") {\n                                                            var createdElement = $(\"<div>\")\n                                                                .text(created)\n                                                                .css(\"color\", \"#808080\")\n                                                                .css(\"font-size\", \"12px\")\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var imageSrc = \"/files/icons8-done-30.png\";\n\n                                                        if (desiredDictionaries[j].owner !== false) {\n                                                            var imageElement = $(\"<img>\")\n                                                                .attr(\"src\", imageSrc)\n                                                                .css(\"width\", \"20px\")\n                                                                .css(\"float\", \"right\")\n                                                                .attr(\"class\", \"img1\")\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var b_tick;\n                                                        frappe.call({\n                                                            method: \"frappe.client.get_list\",\n                                                            args: {\n                                                                doctype: \"wati call message log\",\n                                                                filters: {\n                                                                    name: phone,\n                                                                    client_read: 1,\n                                                                },\n                                                                fields: [\"name\"],\n                                                            },\n                                                            callback: function (response) {\n                                                                b_tick = response.message[0].name;\n\n                                                                if (b_tick) {\n                                                                    imageSrc = \"/files/icons8-double-tick-50.png\";\n                                                                    $(\".img1\").attr(\"src\", imageSrc);\n                                                                }\n                                                            },\n                                                        });\n                                                    }\n\n                                                    setTimeout(function () {\n                                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                                    }, 0);\n                                                }\n\n                                                closeButtonElement.on(\"click\", function () {\n                                                    container.hide();\n                                                });\n\n                                                if (showButtonClicked) {\n                                                    container.show();\n                                                    showButtonClicked = true;\n                                                }\n                                            }\n\n                                            frappe.call({\n                                                method:\n                                                    \"whatsapp_app.whatsapp_app.doctype.api.check_status\",\n                                                args: {\n                                                    number: phone,\n                                                },\n                                                callback: function (response) {\n                                                    if (response.message === \"yes\") {\n                                                        buttonElement1.appendTo(allElement);\n                                                        inputElement.appendTo(allElement);\n                                                        buttonElement.appendTo(allElement);\n                                                    } else {\n                                                        if (!expiredMessageAdded) {\n                                                            statusElement = $(\"<p>\")\n                                                                .css(\"color\", \"black\")\n                                                                .css(\"margin-top\", \"5px\")\n                                                                .css(\"width\", \"100%\")\n                                                                .css(\"text-align\", \"center\")\n                                                                .text(\"The chat has been expired\")\n                                                                .appendTo(allElement);\n                                        \n                                                            expiredMessageAdded = true; \n                                                        }\n                                                        buttonElement1.prependTo(allElement);\n                                                        buttonElement.appendTo(allElement);\n                                                    }\n                                                },\n                                            });\n\n                                            buttonElement1.click(function () {\n                                                var names = cur_frm.doc.name;\n                                                frappe.call({\n                                                    method:\n                                                        \"whatsapp_app.whatsapp_app.doctype.api.get_template_list\",\n                                                    args: {\n                                                        doctype: doctype,\n                                                    },\n                                                    callback: (r) => {\n                                                        if (r.message) {\n                                                            const template = r.message;\n\n                                                            frappe.call({\n                                                                method: \"frappe.client.get_list\",\n                                                                args: {\n                                                                    doctype: \"Templates\",\n                                                                    filters: {\n                                                                        name: [\"in\", template],\n                                                                    },\n                                                                    fields: [\"name\", \"status\", \"sample\"],\n                                                                    limit_start: 0,\n                                                                    limit_page_length: 0,\n                                                                },\n\n                                                                callback: function (response) {\n                                                                    if (response.message) {\n                                                                        const templateData = response.message;\n                                                                        const customerDoctype = doctype;\n                                                                        const customerFields = frappe\n                                                                            .get_meta(customerDoctype)\n                                                                            .fields.filter((field) => {\n                                                                                return (\n                                                                                    field.fieldtype !== \"Column Break\" &&\n                                                                                    field.fieldtype !== \"Section Break\"\n                                                                                );\n                                                                            })\n                                                                            .map((field) => {\n                                                                                return {\n                                                                                    fieldname: field.fieldname,\n                                                                                    label: field.label,\n                                                                                };\n                                                                            });\n\n                                                                        const customerFieldLabels = customerFields.map(\n                                                                            (fieldname) => {\n                                                                                const fieldMeta = frappe\n                                                                                    .get_meta(doctype)\n                                                                                    .fields.find(\n                                                                                        (field) => field.fieldname === fieldname\n                                                                                    );\n                                                                                return fieldMeta\n                                                                                    ? fieldMeta.label\n                                                                                    : fieldname;\n                                                                            }\n                                                                        );\n\n                                                                        const d1 = new frappe.ui.Dialog({\n                                                                            title: \"Send Message\",\n                                                                            fields: [\n                                                                                {\n                                                                                    label: \"Select Template\",\n                                                                                    fieldname: \"select_template\",\n                                                                                    fieldtype: \"Select\",\n                                                                                    options: template,\n                                                                                    onchange: function () {\n                                                                                        const selectedValue = this.get_value();\n                                                                                        const previousValue = this.last_value;\n                                                                                        if (\n                                                                                            selectedValue &&\n                                                                                            selectedValue !== previousValue\n                                                                                        ) {\n                                                                                            this.last_value = selectedValue;\n                                                                                            const selectedTemplateData =\n                                                                                                templateData.find(\n                                                                                                    (template) =>\n                                                                                                        template.name === selectedValue\n                                                                                                );\n                                                                                            if (selectedTemplateData) {\n                                                                                                const dynamicVariables =\n                                                                                                    extractDynamicVariables(\n                                                                                                        selectedTemplateData.sample\n                                                                                                    );\n\n                                                                                                const variableData =\n                                                                                                    dynamicVariables.map(\n                                                                                                        (variable) => ({\n                                                                                                            variable_name: variable,\n                                                                                                            variable_value: \"\",\n                                                                                                            is_dynamic: 0,\n                                                                                                            doctype_field: \"\",\n                                                                                                        })\n                                                                                                    );\n\n                                                                                                renderTable(variableData);\n                                                                                            }\n                                                                                        }\n                                                                                    },\n                                                                                },\n                                                                            ],\n                                                                            primary_action_label: \"Send\",\n\n                                                                            primary_action(values) {\n                                                                                const tableData = getTableData();\n                                                                                const dataList = tableData.map((row) => ({\n                                                                                    name: row.variable_name,\n                                                                                    is_dynamic: row.is_dynamic ? 1 : 0,\n                                                                                    value: row.is_dynamic\n                                                                                        ? row.doctype_field\n                                                                                        : row.variable_value,\n                                                                                }));\n\n                                                                                const hasEmptyValue = dataList.some(\n                                                                                    (row) => !row.value\n                                                                                );\n                                                                                if (hasEmptyValue) {\n                                                                                    frappe.msgprint(\n                                                                                        \"Please fill in all the Variable Value fields.\"\n                                                                                    );\n                                                                                    return;\n                                                                                }\n\n                                                                                var currentDateTime =\n                                                                                    frappe.datetime.now_datetime();\n                                                                                var formattedDateTime = moment(\n                                                                                    currentDateTime\n                                                                                ).format(\"DD-MM-YYYY HH:mm:ss\");\n\n                                                                                console.log(formattedDateTime);\n\n                                                                                frappe.call({\n                                                                                    method:\n                                                                                        \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                                                    args: {\n                                                                                        template_name:\n                                                                                            values[\"select_template\"],\n                                                                                        doctype: doctype,\n                                                                                        name: names,\n                                                                                        data: dataList,\n                                                                                        current_date: formattedDateTime,\n                                                                                        number: phone,\n                                                                                    },\n                                                                                    freeze: true,\n                                                                                    callback: (r) => {\n                                                                                        var textElement = $(\"<p>\")\n                                                                                            .css(\"padding-right\", \"10px\")\n                                                                                            .css(\"padding-left\", \"120px\")\n                                                                                            .css(\"text-align\", \"right\");\n                                                                                        var spanElement = $(\"<div>\")\n                                                                                            .css(\"background-color\", \"#dcf8c6\")\n                                                                                            .css(\"padding\", \"10px\")\n                                                                                            .css(\"padding-bottom\", \"20px\")\n                                                                                            .css(\"border-radius\", \"10px\");\n\n                                                                                        frappe.call({\n                                                                                            method: \"frappe.client.get_list\",\n                                                                                            args: {\n                                                                                                doctype: \"Comment\",\n\n                                                                                                fields: [\"name\", \"content\"],\n                                                                                                limit: 1,\n                                                                                                order_by: \"creation desc\",\n                                                                                            },\n                                                                                            callback: function (response) {\n                                                                                                console.log(response);\n                                                                                                if (\n                                                                                                    response &&\n                                                                                                    response.message &&\n                                                                                                    response.message[0]\n                                                                                                ) {\n                                                                                                    var lastComment =\n                                                                                                        response.message[0];\n                                                                                                    var lastCommentContent =\n                                                                                                        lastComment.content;\n                                                                                                    var tempElement =\n                                                                                                        document.createElement(\"div\");\n                                                                                                    tempElement.innerHTML =\n                                                                                                        lastCommentContent;\n                                                                                                    var extractedText =\n                                                                                                        tempElement.querySelector(\n                                                                                                            \"a\"\n                                                                                                        ).innerText;\n                                                                                                    console.log(extractedText);\n                                                                                                    spanElement.text(extractedText);\n                                                                                                }\n                                                                                            },\n                                                                                        });\n                                                                                        spanElement.appendTo(textElement);\n                                                                                        textElement.appendTo(messagesDiv);\n                                                                                    },\n                                                                                    error: (r) => {\n                                                                                        frappe.msgprint(\n                                                                                            \"something went wrong!\"\n                                                                                        );\n                                                                                    },\n                                                                                });\n\n                                                                                d1.hide();\n                                                                            },\n                                                                        });\n\n                                                                        const tableSection = $(\"<div>\").appendTo(\n                                                                            d1.body\n                                                                        );\n\n                                                                        function renderTable(data) {\n                                                                            tableSection.empty();\n\n                                                                            const table = $(\n                                                                                '<table class=\"table table-bordered\" id=\"tabledata\">'\n                                                                            ).appendTo(tableSection);\n                                                                            const thead = $(\"<thead>\").appendTo(table);\n                                                                            const tbody = $(\"<tbody>\").appendTo(table);\n\n                                                                            const headerRow = $(\"<tr>\").appendTo(thead);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Variable Name\")\n                                                                                .appendTo(headerRow);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Is Dynamic\")\n                                                                                .appendTo(headerRow);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Variable Value\")\n                                                                                .appendTo(headerRow);\n\n                                                                            data.forEach((row) => {\n                                                                                const variableName = row.variable_name;\n                                                                                const variableValue = row.variable_value;\n                                                                                const isDynamic = row.is_dynamic;\n                                                                                const doctypeField = row.doctype_field;\n\n                                                                                const rowElement =\n                                                                                    $(\"<tr>\").appendTo(tbody);\n                                                                                $(\"<td>\")\n                                                                                    .text(variableName)\n                                                                                    .appendTo(rowElement);\n                                                                                const dynamicCheckbox = $(\n                                                                                    '<input type=\"checkbox\">'\n                                                                                )\n                                                                                    .prop(\"checked\", !!isDynamic)\n                                                                                    .appendTo($(\"<td>\").appendTo(rowElement));\n                                                                                const variableValueInput =\n                                                                                    $(\"<td>\").appendTo(rowElement);\n                                                                                if (isDynamic) {\n                                                                                    const selectField = $(\"<select>\")\n                                                                                        .css({ width: \"200px\", height: \"30px\" })\n                                                                                        .appendTo(variableValueInput);\n\n                                                                                    customerFields.forEach((field) => {\n                                                                                        $(\"<option>\")\n                                                                                            .text(field.label)\n                                                                                            .val(field.fieldname)\n                                                                                            .appendTo(selectField);\n                                                                                    });\n\n                                                                                    selectField.val(doctypeField);\n                                                                                } else {\n                                                                                    $('<input type=\"text\">')\n                                                                                        .val(variableValue)\n                                                                                        .css({ width: \"200px\", height: \"30px\" })\n                                                                                        .appendTo(variableValueInput);\n                                                                                }\n\n                                                                                dynamicCheckbox.on(\"change\", function () {\n                                                                                    const isChecked = $(this).is(\":checked\");\n                                                                                    row.is_dynamic = isChecked ? 1 : 0;\n                                                                                    if (isChecked) {\n                                                                                        variableValueInput.empty();\n                                                                                        const selectField = $(\"<select>\")\n                                                                                            .css({\n                                                                                                width: \"200px\",\n                                                                                                height: \"30px\",\n                                                                                            })\n                                                                                            .appendTo(variableValueInput);\n\n                                                                                        customerFields.forEach((field) => {\n                                                                                            $(\"<option>\")\n                                                                                                .text(field.label)\n                                                                                                .val(field.fieldname)\n                                                                                                .appendTo(selectField);\n                                                                                        });\n\n                                                                                        selectField.val(doctypeField);\n                                                                                        row.doctype_field = doctypeField;\n                                                                                    } else {\n                                                                                        variableValueInput.empty();\n                                                                                        $('<input type=\"text\">')\n                                                                                            .val(row.variable_value)\n                                                                                            .css({\n                                                                                                width: \"200px\",\n                                                                                                height: \"30px\",\n                                                                                            })\n                                                                                            .appendTo(variableValueInput);\n                                                                                        row.doctype_field = \"\";\n                                                                                    }\n                                                                                });\n\n                                                                                variableValueInput.on(\n                                                                                    \"change\",\n                                                                                    function () {\n                                                                                        const selectedValue = $(this).val();\n                                                                                        if (isDynamic) {\n                                                                                            row.doctype_field = selectedValue;\n                                                                                        } else {\n                                                                                            row.variable_value = selectedValue;\n                                                                                        }\n                                                                                    }\n                                                                                );\n                                                                            });\n                                                                        }\n\n                                                                        function getTableData() {\n                                                                            const table = tableSection.find(\"#tabledata\");\n                                                                            const data = [];\n\n                                                                            table\n                                                                                .find(\"tbody tr\")\n                                                                                .each((index, element) => {\n                                                                                    const variableName = $(element)\n                                                                                        .find(\"td:nth-child(1)\")\n                                                                                        .text();\n                                                                                    const isDynamic = $(element)\n                                                                                        .find('input[type=\"checkbox\"]')\n                                                                                        .is(\":checked\");\n                                                                                    const doctypeField = $(element)\n                                                                                        .find(\"select\")\n                                                                                        .val();\n                                                                                    const variableValueInput =\n                                                                                        $(element).find('input[type=\"text\"]');\n                                                                                    const variableValue = isDynamic\n                                                                                        ? doctypeField\n                                                                                        : variableValueInput.val();\n\n                                                                                    data.push({\n                                                                                        variable_name: variableName,\n                                                                                        variable_value: variableValue,\n                                                                                        is_dynamic: isDynamic ? 1 : 0,\n                                                                                        doctype_field: doctypeField,\n                                                                                    });\n                                                                                });\n\n                                                                            return data;\n                                                                        }\n\n                                                                        d1.show();\n                                                                    }\n                                                                },\n                                                                error: (r) => {\n                                                                    frappe.msgprint(\"something went wrong!\");\n                                                                },\n                                                            });\n                                                        }\n                                                    },\n                                                    error: (r) => {\n                                                        frappe.msgprint(\"something went wrong!\");\n                                                    },\n                                                });\n                                                function extractDynamicVariables(templateSample) {\n                                                    const regex = /{{([^{}]+)}}/g;\n                                                    const matches = [];\n                                                    let match;\n\n                                                    while ((match = regex.exec(templateSample)) !== null) {\n                                                        matches.push(match[1]);\n                                                    }\n\n                                                    return matches;\n                                                }\n                                            });\n\n                                            buttonElement.click(function () {\n                                                var message = inputElement.val();\n\n                                                if (message) {\n                                                    var currentDateTime = frappe.datetime.now_datetime();\n                                                    var formattedDateTime = moment(currentDateTime).format(\n                                                        \"DD-MM-YYYY HH:mm:ss\"\n                                                    );\n                                                    frappe.call({\n                                                        method:\n                                                            \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                        args: {\n                                                            number: phone,\n                                                            message: message,\n                                                            current_date: formattedDateTime,\n                                                        },\n                                                        callback: function (response) {\n                                                            console.log(response.message);\n                                                            inputElement.val(\"\");\n\n                                                            var textElement = $(\"<p>\")\n                                                                .css(\"padding-right\", \"10px\")\n                                                                .css(\"padding-left\", \"120px\")\n                                                                .css(\"text-align\", \"right\");\n                                                            var spanElement = $(\"<div>\")\n                                                                .css(\"background-color\", \"#dcf8c6\")\n                                                                .css(\"padding\", \"10px\")\n                                                                .css(\"padding-bottom\", \"20px\")\n                                                                .css(\"border-radius\", \"10px\");\n\n                                                            spanElement.text(message);\n                                                            spanElement.appendTo(textElement);\n                                                            textElement.appendTo(messagesDiv);\n                                                        },\n                                                    });\n                                                }\n                                            });\n                                        },\n                                    });\n\n\n\n                                } else {\n\n                                    container.empty();\n                                    headingDiv.appendTo(container);\n                                    messagesDiv.appendTo(container);\n\n                                    messagesDiv.empty();\n                                    allElement.appendTo(container);\n\n                                    setTimeout(function () {\n                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    }, 0);\n\n                                    closeButtonElement.on(\"click\", function () {\n                                        container.hide();\n                                    });\n\n                                    if (showButtonClicked) {\n                                        container.show();\n                                        showButtonClicked = true;\n                                    }\n\n\n                                    frappe.call({\n                                        method:\n                                            \"whatsapp_app.whatsapp_app.doctype.api.check_status\",\n                                        args: {\n                                            number: phone,\n                                        },\n                                        callback: function (response) {\n                                            if (response.message === \"yes\") {\n                                                buttonElement1.appendTo(allElement);\n                                                inputElement.appendTo(allElement);\n                                                buttonElement.appendTo(allElement);\n                                            } else {\n                                                if (!expiredMessageAdded) {\n                                                    statusElement = $(\"<p>\")\n                                                        .css(\"color\", \"black\")\n                                                        .css(\"margin-top\", \"5px\")\n                                                        .css(\"width\", \"100%\")\n                                                        .css(\"text-align\", \"center\")\n                                                        .text(\"The chat has been expired\")\n                                                        .appendTo(allElement);\n                                \n                                                    expiredMessageAdded = true; \n                                                }\n                                                buttonElement1.prependTo(allElement);\n                                                buttonElement.appendTo(allElement);\n                                            }\n                                        },\n                                    });\n\n                                    buttonElement1.click(function () {\n                                        \n                                        container.children().css('opacity', '0.6');\n                                        \n                                        var names = cur_frm.doc.name;\n                                        frappe.call({\n                                            method:\n                                                \"whatsapp_app.whatsapp_app.doctype.api.get_template_list\",\n                                            args: {\n                                                doctype: doctype,\n                                            },\n                                            callback: (r) => {\n                                                if (r.message) {\n                                                    const template = r.message;\n\n                                                    frappe.call({\n                                                        method: \"frappe.client.get_list\",\n                                                        args: {\n                                                            doctype: \"Templates\",\n                                                            filters: {\n                                                                name: [\"in\", template],\n                                                            },\n                                                            fields: [\"name\", \"status\", \"sample\"],\n                                                            limit_start: 0,\n                                                            limit_page_length: 0,\n                                                        },\n\n                                                        callback: function (response) {\n                                                            if (response.message) {\n                                                                const templateData = response.message;\n                                                                const customerDoctype = doctype;\n                                                                const customerFields = frappe\n                                                                    .get_meta(customerDoctype)\n                                                                    .fields.filter((field) => {\n                                                                        return (\n                                                                            field.fieldtype !== \"Column Break\" &&\n                                                                            field.fieldtype !== \"Section Break\"\n                                                                        );\n                                                                    })\n                                                                    .map((field) => {\n                                                                        return {\n                                                                            fieldname: field.fieldname,\n                                                                            label: field.label,\n                                                                        };\n                                                                    });\n\n                                                                const customerFieldLabels = customerFields.map(\n                                                                    (fieldname) => {\n                                                                        const fieldMeta = frappe\n                                                                            .get_meta(doctype)\n                                                                            .fields.find(\n                                                                                (field) => field.fieldname === fieldname\n                                                                            );\n                                                                        return fieldMeta\n                                                                            ? fieldMeta.label\n                                                                            : fieldname;\n                                                                    }\n                                                                );\n\n                                                                const d1 = new frappe.ui.Dialog({\n                                                                    title: \"Send Message\",\n                                                                    fields: [\n                                                                        {\n                                                                            label: \"Select Template\",\n                                                                            fieldname: \"select_template\",\n                                                                            fieldtype: \"Select\",\n                                                                            options: template,\n                                                                            onchange: function () {\n                                                                                const selectedValue = this.get_value();\n                                                                                const previousValue = this.last_value;\n                                                                                if (\n                                                                                    selectedValue &&\n                                                                                    selectedValue !== previousValue\n                                                                                ) {\n                                                                                    this.last_value = selectedValue;\n                                                                                    const selectedTemplateData =\n                                                                                        templateData.find(\n                                                                                            (template) =>\n                                                                                                template.name === selectedValue\n                                                                                        );\n                                                                                    if (selectedTemplateData) {\n                                                                                        const dynamicVariables =\n                                                                                            extractDynamicVariables(\n                                                                                                selectedTemplateData.sample\n                                                                                            );\n\n                                                                                        const variableData =\n                                                                                            dynamicVariables.map(\n                                                                                                (variable) => ({\n                                                                                                    variable_name: variable,\n                                                                                                    variable_value: \"\",\n                                                                                                    is_dynamic: 0,\n                                                                                                    doctype_field: \"\",\n                                                                                                })\n                                                                                            );\n\n                                                                                        renderTable(variableData);\n                                                                                    }\n                                                                                }\n                                                                            },\n                                                                        },\n                                                                    ],\n                                                                    primary_action_label: \"Send\",\n\n                                                                    primary_action(values) {\n                                                                        const tableData = getTableData();\n                                                                        const dataList = tableData.map((row) => ({\n                                                                            name: row.variable_name,\n                                                                            is_dynamic: row.is_dynamic ? 1 : 0,\n                                                                            value: row.is_dynamic\n                                                                                ? row.doctype_field\n                                                                                : row.variable_value,\n                                                                        }));\n\n                                                                        const hasEmptyValue = dataList.some(\n                                                                            (row) => !row.value\n                                                                        );\n                                                                        if (hasEmptyValue) {\n                                                                            frappe.msgprint(\n                                                                                \"Please fill in all the Variable Value fields.\"\n                                                                            );\n                                                                            return;\n                                                                        }\n\n                                                                        var currentDateTime =\n                                                                            frappe.datetime.now_datetime();\n                                                                        var formattedDateTime = moment(\n                                                                            currentDateTime\n                                                                        ).format(\"DD-MM-YYYY HH:mm:ss\");\n\n                                                                        console.log(formattedDateTime);\n\n                                                                        frappe.call({\n                                                                            method:\n                                                                                \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                                            args: {\n                                                                                template_name:\n                                                                                    values[\"select_template\"],\n                                                                                doctype: doctype,\n                                                                                name: names,\n                                                                                data: dataList,\n                                                                                current_date: formattedDateTime,\n                                                                                number: phone,\n                                                                            },\n                                                                            freeze: true,\n                                                                            callback: (r) => {\n                                                                                var textElement = $(\"<p>\")\n                                                                                    .css(\"padding-right\", \"10px\")\n                                                                                    .css(\"padding-left\", \"120px\")\n                                                                                    .css(\"text-align\", \"right\");\n                                                                                var spanElement = $(\"<div>\")\n                                                                                    .css(\"background-color\", \"#dcf8c6\")\n                                                                                    .css(\"padding\", \"10px\")\n                                                                                    .css(\"padding-bottom\", \"20px\")\n                                                                                    .css(\"border-radius\", \"10px\");\n\n                                                                                frappe.call({\n                                                                                    method: \"frappe.client.get_list\",\n                                                                                    args: {\n                                                                                        doctype: \"Comment\",\n\n                                                                                        fields: [\"name\", \"content\"],\n                                                                                        limit: 1,\n                                                                                        order_by: \"creation desc\",\n                                                                                    },\n                                                                                    callback: function (response) {\n                                                                                        console.log(response);\n                                                                                        if (\n                                                                                            response &&\n                                                                                            response.message &&\n                                                                                            response.message[0]\n                                                                                        ) {\n                                                                                            var lastComment =\n                                                                                                response.message[0];\n                                                                                            var lastCommentContent =\n                                                                                                lastComment.content;\n                                                                                            var tempElement =\n                                                                                                document.createElement(\"div\");\n                                                                                            tempElement.innerHTML =\n                                                                                                lastCommentContent;\n                                                                                            var extractedText =\n                                                                                                tempElement.querySelector(\n                                                                                                    \"a\"\n                                                                                                ).innerText;\n                                                                                            console.log(extractedText);\n                                                                                            spanElement.text(extractedText);\n                                                                                        }\n                                                                                    },\n                                                                                });\n                                                                                spanElement.appendTo(textElement);\n                                                                                textElement.appendTo(messagesDiv);\n                                                                            },\n                                                                            error: (r) => {\n                                                                                frappe.msgprint(\n                                                                                    \"something went wrong!\"\n                                                                                );\n                                                                            },\n                                                                        });\n\n                                                                        d1.hide();\n                                                                    },\n                                                                });\n\n                                                                const tableSection = $(\"<div>\").appendTo(\n                                                                    d1.body\n                                                                );\n\n                                                                function renderTable(data) {\n                                                                    tableSection.empty();\n\n                                                                    const table = $(\n                                                                        '<table class=\"table table-bordered\" id=\"tabledata\">'\n                                                                    ).appendTo(tableSection);\n                                                                    const thead = $(\"<thead>\").appendTo(table);\n                                                                    const tbody = $(\"<tbody>\").appendTo(table);\n\n                                                                    const headerRow = $(\"<tr>\").appendTo(thead);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Variable Name\")\n                                                                        .appendTo(headerRow);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Is Dynamic\")\n                                                                        .appendTo(headerRow);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Variable Value\")\n                                                                        .appendTo(headerRow);\n\n                                                                    data.forEach((row) => {\n                                                                        const variableName = row.variable_name;\n                                                                        const variableValue = row.variable_value;\n                                                                        const isDynamic = row.is_dynamic;\n                                                                        const doctypeField = row.doctype_field;\n\n                                                                        const rowElement =\n                                                                            $(\"<tr>\").appendTo(tbody);\n                                                                        $(\"<td>\")\n                                                                            .text(variableName)\n                                                                            .appendTo(rowElement);\n                                                                        const dynamicCheckbox = $(\n                                                                            '<input type=\"checkbox\">'\n                                                                        )\n                                                                            .prop(\"checked\", !!isDynamic)\n                                                                            .appendTo($(\"<td>\").appendTo(rowElement));\n                                                                        const variableValueInput =\n                                                                            $(\"<td>\").appendTo(rowElement);\n                                                                        if (isDynamic) {\n                                                                            const selectField = $(\"<select>\")\n                                                                                .css({ width: \"200px\", height: \"30px\" })\n                                                                                .appendTo(variableValueInput);\n\n                                                                            customerFields.forEach((field) => {\n                                                                                $(\"<option>\")\n                                                                                    .text(field.label)\n                                                                                    .val(field.fieldname)\n                                                                                    .appendTo(selectField);\n                                                                            });\n\n                                                                            selectField.val(doctypeField);\n                                                                        } else {\n                                                                            $('<input type=\"text\">')\n                                                                                .val(variableValue)\n                                                                                .css({ width: \"200px\", height: \"30px\" })\n                                                                                .appendTo(variableValueInput);\n                                                                        }\n\n                                                                        dynamicCheckbox.on(\"change\", function () {\n                                                                            const isChecked = $(this).is(\":checked\");\n                                                                            row.is_dynamic = isChecked ? 1 : 0;\n                                                                            if (isChecked) {\n                                                                                variableValueInput.empty();\n                                                                                const selectField = $(\"<select>\")\n                                                                                    .css({\n                                                                                        width: \"200px\",\n                                                                                        height: \"30px\",\n                                                                                    })\n                                                                                    .appendTo(variableValueInput);\n\n                                                                                customerFields.forEach((field) => {\n                                                                                    $(\"<option>\")\n                                                                                        .text(field.label)\n                                                                                        .val(field.fieldname)\n                                                                                        .appendTo(selectField);\n                                                                                });\n\n                                                                                selectField.val(doctypeField);\n                                                                                row.doctype_field = doctypeField;\n                                                                            } else {\n                                                                                variableValueInput.empty();\n                                                                                $('<input type=\"text\">')\n                                                                                    .val(row.variable_value)\n                                                                                    .css({\n                                                                                        width: \"200px\",\n                                                                                        height: \"30px\",\n                                                                                    })\n                                                                                    .appendTo(variableValueInput);\n                                                                                row.doctype_field = \"\";\n                                                                            }\n                                                                        });\n\n                                                                        variableValueInput.on(\n                                                                            \"change\",\n                                                                            function () {\n                                                                                const selectedValue = $(this).val();\n                                                                                if (isDynamic) {\n                                                                                    row.doctype_field = selectedValue;\n                                                                                } else {\n                                                                                    row.variable_value = selectedValue;\n                                                                                }\n                                                                            }\n                                                                        );\n                                                                    });\n                                                                }\n\n                                                                function getTableData() {\n                                                                    const table = tableSection.find(\"#tabledata\");\n                                                                    const data = [];\n\n                                                                    table\n                                                                        .find(\"tbody tr\")\n                                                                        .each((index, element) => {\n                                                                            const variableName = $(element)\n                                                                                .find(\"td:nth-child(1)\")\n                                                                                .text();\n                                                                            const isDynamic = $(element)\n                                                                                .find('input[type=\"checkbox\"]')\n                                                                                .is(\":checked\");\n                                                                            const doctypeField = $(element)\n                                                                                .find(\"select\")\n                                                                                .val();\n                                                                            const variableValueInput =\n                                                                                $(element).find('input[type=\"text\"]');\n                                                                            const variableValue = isDynamic\n                                                                                ? doctypeField\n                                                                                : variableValueInput.val();\n\n                                                                            data.push({\n                                                                                variable_name: variableName,\n                                                                                variable_value: variableValue,\n                                                                                is_dynamic: isDynamic ? 1 : 0,\n                                                                                doctype_field: doctypeField,\n                                                                            });\n                                                                        });\n\n                                                                    return data;\n                                                                }\n\n                                                                d1.show();\n                                                            }\n                                                        },\n                                                        error: (r) => {\n                                                            frappe.msgprint(\"something went wrong!\");\n                                                        },\n                                                    });\n                                                }\n                                            },\n                                            error: (r) => {\n                                                frappe.msgprint(\"something went wrong!\");\n                                            },\n                                        });\n                                        function extractDynamicVariables(templateSample) {\n                                            const regex = /{{([^{}]+)}}/g;\n                                            const matches = [];\n                                            let match;\n\n                                            while ((match = regex.exec(templateSample)) !== null) {\n                                                matches.push(match[1]);\n                                            }\n\n                                            return matches;\n                                        }\n                                    });\n                                    buttonElement.click(function () {\n                                        var message = inputElement.val();\n\n                                        if (message) {\n                                            var currentDateTime = frappe.datetime.now_datetime();\n                                            var formattedDateTime = moment(currentDateTime).format(\n                                                \"DD-MM-YYYY HH:mm:ss\"\n                                            );\n                                            frappe.call({\n                                                method:\n                                                    \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                args: {\n                                                    number: phone,\n                                                    message: message,\n                                                    current_date: formattedDateTime,\n                                                },\n                                                callback: function (response) {\n                                                    console.log(response.message);\n                                                    inputElement.val(\"\");\n\n                                                    var textElement = $(\"<p>\")\n                                                        .css(\"padding-right\", \"10px\")\n                                                        .css(\"padding-left\", \"120px\")\n                                                        .css(\"text-align\", \"right\");\n                                                    var spanElement = $(\"<div>\")\n                                                        .css(\"background-color\", \"#dcf8c6\")\n                                                        .css(\"padding\", \"10px\")\n                                                        .css(\"padding-bottom\", \"20px\")\n                                                        .css(\"border-radius\", \"10px\");\n\n                                                    spanElement.text(message);\n                                                    spanElement.appendTo(textElement);\n                                                    textElement.appendTo(messagesDiv);\n                                                },\n                                            });\n                                        }\n                                    });\n                                }\n\n\n\n                            }\n                        });\n                    }\n                );\n            }\n        }\n\n        function adjustContainerStyles() {\n            if (window.innerWidth < 499) {\n                container.css({\n                    width: \"80%\",\n                    right: \"10%\",\n                });\n            } else if (window.innerWidth >= 499 && window.innerWidth < 530) {\n                container.css({\n                    width: \"40%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 530 && window.innerWidth < 800) {\n                container.css({\n                    width: \"40%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 800 && window.innerWidth < 798) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 798 && window.innerWidth < 838) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 838 && window.innerWidth < 1300) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n                inputElement.css({\n                    width: \"40%\",\n                });\n            } else {\n                container.css({\n                    width: \"20%\",\n                    right: \"80px\",\n                    height: \"65%\",\n                });\n            }\n        }\n\n        $(window).resize(adjustContainerStyles);\n\n        adjustContainerStyles();\n    },\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-07-11 15:43:25.366028",
  "module": "Whatsapp App",
  "name": "Item chat box",
  "script": "frappe.ui.form.on(\"Item\", {\n    onload: function (frm) {\n        var f_name = cur_frm.doc.supplier_name;\n\n        var container = $('<div class=\"custom-container\">').appendTo(frm.wrapper);\n\n        container.css({\n            width: \"30%\",\n            height: \"65%\",\n            backgroundColor: \"#ece5dd\",\n            position: \"fixed\",\n            top: \"50%\",\n            right: \"80px\",\n            transform: \"translateY(-50%)\",\n            borderRadius: \"5px\",\n            boxShadow: \"0 0 5px rgba(0, 0, 0, 0.4)\",\n            zIndex: 9999,\n            display: \"none\",\n        });\n\n        var headingDiv = $(\"<div>\")\n            .css(\"background-color\", \"#128c7e\")\n            .appendTo(container);\n\n        var closeButtonElement = $(\"<button>\")\n            .css(\"float\", \"right\")\n            .appendTo(headingDiv);\n\n        var closeIconElement = $(\"<i>\")\n            .addClass(\"fa fa-close\")\n            .css(\"font-size\", \"30px\");\n\n        closeButtonElement.prepend(closeIconElement);\n\n        closeButtonElement.css({\n            float: \"right\",\n            backgroundColor: \"#128c7e\",\n            marginRight: \"10px\",\n            marginTop: \"10px\",\n            color: \"#FFF\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n        var heading = $(\"<h3>\")\n            .css(\"padding-left\", \"10px\")\n            .css(\"color\", \"white\")\n            .css(\"margin-bottom\", \"0px\")\n            .css(\"background-color\", \"#128c7e\")\n            .css(\"padding-top\", \"15px\")\n            .css(\"padding-bottom\", \"15px\")\n            .text(f_name)\n            .appendTo(headingDiv);\n\n        var messagesDiv = $(\"<div>\")\n            .css(\"overflow-y\", \"scroll\")\n            .css(\"background-color\", \"#ece5dd\")\n            .css(\"height\", \"83%\")\n            .appendTo(container);\n\n        var statusElement;\n        var expiredMessageAdded = false;\n    \n        var allElement = $(\"<div>\")\n            .css(\"height\", \"40px\")\n            .css(\"padding-top\", \"5px\")\n            .css(\"background-color\", \"#ece5dd\")\n            .css(\"display\", \"flex\")\n            .css(\"flex-direction\", \"row\")\n            .appendTo(container);\n\n\n        var buttonElement1 = $(\"<button>\").text(\"Template\");\n\n        buttonElement1.css({\n            height: \"25px\",\n            backgroundColor: \"#128c7e\",\n            marginLeft: \"5px\",\n            marginTop: \"4px\",\n            color: \"#FFF\",\n            padding: \"2px 4px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n        var inputElement = $(\"<input>\")\n            .attr(\"type\", \"text\")\n            .attr(\"placeholder\", \" Type a message...\");\n\n        inputElement.css({\n            marginLeft: \"5px\",\n            marginRight: \"5px\",\n            border: \"none\",\n            marginTop: \"5px\",\n            height: \"25px\",\n            borderRadius: \"4px\",\n            width: \"auto\",\n            flex: \"1\"\n        });\n\n        var buttonElement = $(\"<button>\");\n\n        var iconElement = $(\"<i>\")\n            .addClass(\"fa fa-paper-plane\");\n\n        buttonElement.prepend(iconElement);\n\n        buttonElement.css({\n            height: \"30px\",\n            backgroundColor: \"#128c7e\",\n            marginTop: \"2px\",\n            marginRight: \"10px\",\n            color: \"#FFF\",\n            padding: \"4px 8px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n\n        var showButtonClicked = true;\n\n        var currentUserRoles = frappe.user_roles;\n        var isAdmin = currentUserRoles.includes(\"Administrator\");\n\n        var hasRequiredRole =\n            !isAdmin &&\n            (currentUserRoles.includes(\"Vendor\") ||\n                currentUserRoles.includes(\"Customer\") ||\n                currentUserRoles.includes(\"Driver\"));\n\n        if (!hasRequiredRole || isAdmin) {\n            if (frm.doc.whatsapp_no) {\n                frm.add_custom_button(\n                    '<i class=\"fa fa-whatsapp\" aria-hidden=\"true\" style=\"font-size:24px;color:#25d366\" ></i>',\n                    function () {\n                        // var doctype = cur_frm.doctype;\n                        var phone = cur_frm.doc.whatsapp_no;\n                        var availableLog;\n                        frappe.call({\n                            method: \"frappe.client.get_list\",\n                            args: {\n                                doctype: \"wati call message log\",\n                                filters: {\n                                    name: phone,\n                                },\n                                fields: [\"name\"]\n                            },\n                            callback: function (response) {\n\n                                var message = response.message;\n                                var doctype = cur_frm.doctype;\n                                if (message && message.length > 0) {\n                                    var ans = message[0];\n                                    var ans_name = ans.name;\n\n\n                                    frappe.call({\n                                        method:\n                                            \"whatsapp_app.whatsapp_app.doctype.api.get_template_sample\",\n                                        args: {\n                                            phone: phone,\n                                        },\n                                        async: false,\n                                        callback: function (response) { },\n                                    });\n                                    frappe.call({\n                                        method: \"whatsapp_app.whatsapp_app.doctype.api.get_img\",\n                                        args: {\n                                            phone: phone,\n                                        },\n                                        async: false,\n                                        callback: function (response) { },\n                                    });\n                                    frappe.call({\n                                        method: \"frappe.client.get_list\",\n                                        args: {\n                                            doctype: \"wati call message log\",\n                                            filters: {\n                                                name: phone,\n                                            },\n                                            fields: [\"name\", \"data\"],\n                                        },\n                                        callback: function (response) {\n                                            if (response.message) {\n                                                var dataObj = response.message;\n                                                if (dataObj && dataObj.length > 0) {\n                                                    var dataValue = dataObj[0].data;\n\n                                                    var parsedData = JSON.parse(dataValue);\n                                                    var result = parsedData.data;\n\n                                                    var desiredDictionaries = [];\n                                                    var tempName;\n                                                    var tempImg;\n\n                                                    for (var i = 0; i < result.length; i++) {\n                                                        var dictionary = result[i];\n\n                                                        if (\n                                                            dictionary.message &&\n                                                            dictionary.message.hasOwnProperty(\"isOwner\")\n                                                        ) {\n                                                            desiredDictionaries.push(dictionary.message);\n                                                        } else if (\n                                                            dictionary.hasOwnProperty(\"owner\") &&\n                                                            !dictionary.owner\n                                                        ) {\n                                                            desiredDictionaries.push(dictionary);\n                                                        } else if (\n                                                            dictionary.hasOwnProperty(\"modified_sample\")\n                                                        ) {\n                                                            tempName = dictionary.modified_sample;\n\n                                                            var timedate = dictionary.send_time;\n                                                            tempImg = dictionary.templateImg;\n\n                                                            frappe.call({\n                                                                method:\n                                                                    \"whatsapp_app.whatsapp_app.doctype.api.get_image\",\n                                                                args: {\n                                                                    filename: tempImg,\n                                                                },\n                                                                async: false,\n                                                                callback: function (response) { },\n                                                            });\n\n                                                            desiredDictionaries.push({\n                                                                tempName: tempName,\n                                                                timedate: timedate,\n                                                                tempImg: tempImg,\n                                                            });\n                                                        }\n                                                    }\n\n                                                    var texts = desiredDictionaries.map(function (\n                                                        dictionary\n                                                    ) {\n                                                        if (\n                                                            typeof dictionary === \"object\" &&\n                                                            dictionary.hasOwnProperty(\"text\")\n                                                        ) {\n                                                            var text = dictionary.text;\n                                                        } else if (\n                                                            typeof dictionary === \"object\" &&\n                                                            dictionary.hasOwnProperty(\"tempName\") &&\n                                                            dictionary.hasOwnProperty(\"timedate\") &&\n                                                            dictionary.hasOwnProperty(\"tempImg\")\n                                                        ) {\n                                                        } else {\n                                                            return dictionary;\n                                                        }\n                                                    });\n\n                                                    container.empty();\n                                                    headingDiv.appendTo(container);\n                                                    messagesDiv.appendTo(container);\n\n                                                    messagesDiv.empty();\n\n                                                    allElement.appendTo(container);\n\n                                                    for (var j = 0; j < texts.length; j++) {\n                                                        var text = texts[j];\n                                                        var created = \"\";\n\n                                                        if (desiredDictionaries[j].hasOwnProperty(\"text\")) {\n                                                            text = desiredDictionaries[j].text;\n                                                            if (\n                                                                desiredDictionaries[j].hasOwnProperty(\"created\")\n                                                            ) {\n                                                                var datetimeString = desiredDictionaries[j].created;\n                                                                var dateObj = new Date(datetimeString);\n\n                                                                var day = dateObj.getUTCDate();\n                                                                var month = dateObj.getUTCMonth() + 1;\n                                                                var year = dateObj.getUTCFullYear();\n\n                                                                var hours = dateObj.getUTCHours();\n                                                                var minutes = dateObj.getUTCMinutes();\n                                                                var seconds = dateObj.getUTCSeconds();\n\n                                                                if (day < 10) {\n                                                                    day = \"0\" + day;\n                                                                }\n                                                                if (month < 10) {\n                                                                    month = \"0\" + month;\n                                                                }\n                                                                if (hours < 10) {\n                                                                    hours = \"0\" + hours;\n                                                                }\n                                                                if (minutes < 10) {\n                                                                    minutes = \"0\" + minutes;\n                                                                }\n                                                                if (seconds < 10) {\n                                                                    seconds = \"0\" + seconds;\n                                                                }\n\n                                                                created =\n                                                                    day +\n                                                                    \"-\" +\n                                                                    month +\n                                                                    \"-\" +\n                                                                    year +\n                                                                    \" \" +\n                                                                    hours +\n                                                                    \":\" +\n                                                                    minutes +\n                                                                    \":\" +\n                                                                    seconds;\n                                                            }\n                                                        }\n\n                                                        var textElement = $(\"<p>\")\n                                                            .css(\n                                                                \"padding-right\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"100px\"\n                                                                    : \"10px\"\n                                                            )\n                                                            .css(\n                                                                \"padding-left\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"10px\"\n                                                                    : \"100px\"\n                                                            )\n                                                            .css(\n                                                                \"text-align\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"left\"\n                                                                    : \"right\"\n                                                            )\n                                                            .appendTo(messagesDiv);\n\n                                                        var textContent = $(\"<div>\")\n                                                            .css(\n                                                                \"background-color\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"#fff\"\n                                                                    : \"#dcf8c6\"\n                                                            )\n                                                            .css(\"padding\", \"10px\")\n                                                            .css(\"padding-bottom\", \"20px\")\n                                                            .css(\"border-radius\", \"10px\")\n                                                            .text(text)\n                                                            .appendTo(textElement);\n\n                                                        if (desiredDictionaries[j].tempImg) {\n                                                            var tempImgElement = $(\"<img>\")\n                                                                .attr(\n                                                                    \"src\",\n                                                                    \"https://migoostage.frappe.cloud/files/\" +\n                                                                    desiredDictionaries[j].tempImg\n                                                                )\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var tempNameElement = $(\"<p>\")\n                                                            .text(desiredDictionaries[j].tempName)\n                                                            .appendTo(textContent);\n\n                                                        var timedateElement = $(\"<p>\")\n                                                            .text(desiredDictionaries[j].timedate)\n                                                            .css(\"color\", \"#808080\")\n                                                            .css(\"font-size\", \"12px\")\n                                                            .appendTo(textContent);\n\n                                                        if (created !== \"\") {\n                                                            var createdElement = $(\"<div>\")\n                                                                .text(created)\n                                                                .css(\"color\", \"#808080\")\n                                                                .css(\"font-size\", \"12px\")\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var imageSrc = \"/files/icons8-done-30.png\";\n\n                                                        if (desiredDictionaries[j].owner !== false) {\n                                                            var imageElement = $(\"<img>\")\n                                                                .attr(\"src\", imageSrc)\n                                                                .css(\"width\", \"20px\")\n                                                                .css(\"float\", \"right\")\n                                                                .attr(\"class\", \"img1\")\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var b_tick;\n                                                        frappe.call({\n                                                            method: \"frappe.client.get_list\",\n                                                            args: {\n                                                                doctype: \"wati call message log\",\n                                                                filters: {\n                                                                    name: phone,\n                                                                    client_read: 1,\n                                                                },\n                                                                fields: [\"name\"],\n                                                            },\n                                                            callback: function (response) {\n                                                                b_tick = response.message[0].name;\n\n                                                                if (b_tick) {\n                                                                    imageSrc = \"/files/icons8-double-tick-50.png\";\n                                                                    $(\".img1\").attr(\"src\", imageSrc);\n                                                                }\n                                                            },\n                                                        });\n                                                    }\n\n                                                    setTimeout(function () {\n                                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                                    }, 0);\n                                                }\n\n                                                closeButtonElement.on(\"click\", function () {\n                                                    container.hide();\n                                                });\n\n                                                if (showButtonClicked) {\n                                                    container.show();\n                                                    showButtonClicked = true;\n                                                }\n                                            }\n\n                                            frappe.call({\n                                                method:\n                                                    \"whatsapp_app.whatsapp_app.doctype.api.check_status\",\n                                                args: {\n                                                    number: phone,\n                                                },\n                                                callback: function (response) {\n                                                    if (response.message === \"yes\") {\n                                                        buttonElement1.appendTo(allElement);\n                                                        inputElement.appendTo(allElement);\n                                                        buttonElement.appendTo(allElement);\n                                                    } else {\n                                                        if (!expiredMessageAdded) {\n                                                            statusElement = $(\"<p>\")\n                                                                .css(\"color\", \"black\")\n                                                                .css(\"margin-top\", \"5px\")\n                                                                .css(\"width\", \"100%\")\n                                                                .css(\"text-align\", \"center\")\n                                                                .text(\"The chat has been expired\")\n                                                                .appendTo(allElement);\n                                        \n                                                            expiredMessageAdded = true; \n                                                        }\n                                                        buttonElement1.prependTo(allElement);\n                                                        buttonElement.appendTo(allElement);\n                                                    }\n                                                },\n                                            });\n\n                                            buttonElement1.click(function () {\n                                                var names = cur_frm.doc.name;\n                                                frappe.call({\n                                                    method:\n                                                        \"whatsapp_app.whatsapp_app.doctype.api.get_template_list\",\n                                                    args: {\n                                                        doctype: doctype,\n                                                    },\n                                                    callback: (r) => {\n                                                        if (r.message) {\n                                                            const template = r.message;\n\n                                                            frappe.call({\n                                                                method: \"frappe.client.get_list\",\n                                                                args: {\n                                                                    doctype: \"Templates\",\n                                                                    filters: {\n                                                                        name: [\"in\", template],\n                                                                    },\n                                                                    fields: [\"name\", \"status\", \"sample\"],\n                                                                    limit_start: 0,\n                                                                    limit_page_length: 0,\n                                                                },\n\n                                                                callback: function (response) {\n                                                                    if (response.message) {\n                                                                        const templateData = response.message;\n                                                                        const customerDoctype = doctype;\n                                                                        const customerFields = frappe\n                                                                            .get_meta(customerDoctype)\n                                                                            .fields.filter((field) => {\n                                                                                return (\n                                                                                    field.fieldtype !== \"Column Break\" &&\n                                                                                    field.fieldtype !== \"Section Break\"\n                                                                                );\n                                                                            })\n                                                                            .map((field) => {\n                                                                                return {\n                                                                                    fieldname: field.fieldname,\n                                                                                    label: field.label,\n                                                                                };\n                                                                            });\n\n                                                                        const customerFieldLabels = customerFields.map(\n                                                                            (fieldname) => {\n                                                                                const fieldMeta = frappe\n                                                                                    .get_meta(doctype)\n                                                                                    .fields.find(\n                                                                                        (field) => field.fieldname === fieldname\n                                                                                    );\n                                                                                return fieldMeta\n                                                                                    ? fieldMeta.label\n                                                                                    : fieldname;\n                                                                            }\n                                                                        );\n\n                                                                        const d1 = new frappe.ui.Dialog({\n                                                                            title: \"Send Message\",\n                                                                            fields: [\n                                                                                {\n                                                                                    label: \"Select Template\",\n                                                                                    fieldname: \"select_template\",\n                                                                                    fieldtype: \"Select\",\n                                                                                    options: template,\n                                                                                    onchange: function () {\n                                                                                        const selectedValue = this.get_value();\n                                                                                        const previousValue = this.last_value;\n                                                                                        if (\n                                                                                            selectedValue &&\n                                                                                            selectedValue !== previousValue\n                                                                                        ) {\n                                                                                            this.last_value = selectedValue;\n                                                                                            const selectedTemplateData =\n                                                                                                templateData.find(\n                                                                                                    (template) =>\n                                                                                                        template.name === selectedValue\n                                                                                                );\n                                                                                            if (selectedTemplateData) {\n                                                                                                const dynamicVariables =\n                                                                                                    extractDynamicVariables(\n                                                                                                        selectedTemplateData.sample\n                                                                                                    );\n\n                                                                                                const variableData =\n                                                                                                    dynamicVariables.map(\n                                                                                                        (variable) => ({\n                                                                                                            variable_name: variable,\n                                                                                                            variable_value: \"\",\n                                                                                                            is_dynamic: 0,\n                                                                                                            doctype_field: \"\",\n                                                                                                        })\n                                                                                                    );\n\n                                                                                                renderTable(variableData);\n                                                                                            }\n                                                                                        }\n                                                                                    },\n                                                                                },\n                                                                            ],\n                                                                            primary_action_label: \"Send\",\n\n                                                                            primary_action(values) {\n                                                                                const tableData = getTableData();\n                                                                                const dataList = tableData.map((row) => ({\n                                                                                    name: row.variable_name,\n                                                                                    is_dynamic: row.is_dynamic ? 1 : 0,\n                                                                                    value: row.is_dynamic\n                                                                                        ? row.doctype_field\n                                                                                        : row.variable_value,\n                                                                                }));\n\n                                                                                const hasEmptyValue = dataList.some(\n                                                                                    (row) => !row.value\n                                                                                );\n                                                                                if (hasEmptyValue) {\n                                                                                    frappe.msgprint(\n                                                                                        \"Please fill in all the Variable Value fields.\"\n                                                                                    );\n                                                                                    return;\n                                                                                }\n\n                                                                                var currentDateTime =\n                                                                                    frappe.datetime.now_datetime();\n                                                                                var formattedDateTime = moment(\n                                                                                    currentDateTime\n                                                                                ).format(\"DD-MM-YYYY HH:mm:ss\");\n\n                                                                                console.log(formattedDateTime);\n\n                                                                                frappe.call({\n                                                                                    method:\n                                                                                        \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                                                    args: {\n                                                                                        template_name:\n                                                                                            values[\"select_template\"],\n                                                                                        doctype: doctype,\n                                                                                        name: names,\n                                                                                        data: dataList,\n                                                                                        current_date: formattedDateTime,\n                                                                                        number: phone,\n                                                                                    },\n                                                                                    freeze: true,\n                                                                                    callback: (r) => {\n                                                                                        var textElement = $(\"<p>\")\n                                                                                            .css(\"padding-right\", \"10px\")\n                                                                                            .css(\"padding-left\", \"120px\")\n                                                                                            .css(\"text-align\", \"right\");\n                                                                                        var spanElement = $(\"<div>\")\n                                                                                            .css(\"background-color\", \"#dcf8c6\")\n                                                                                            .css(\"padding\", \"10px\")\n                                                                                            .css(\"padding-bottom\", \"20px\")\n                                                                                            .css(\"border-radius\", \"10px\");\n\n                                                                                        frappe.call({\n                                                                                            method: \"frappe.client.get_list\",\n                                                                                            args: {\n                                                                                                doctype: \"Comment\",\n\n                                                                                                fields: [\"name\", \"content\"],\n                                                                                                limit: 1,\n                                                                                                order_by: \"creation desc\",\n                                                                                            },\n                                                                                            callback: function (response) {\n                                                                                                console.log(response);\n                                                                                                if (\n                                                                                                    response &&\n                                                                                                    response.message &&\n                                                                                                    response.message[0]\n                                                                                                ) {\n                                                                                                    var lastComment =\n                                                                                                        response.message[0];\n                                                                                                    var lastCommentContent =\n                                                                                                        lastComment.content;\n                                                                                                    var tempElement =\n                                                                                                        document.createElement(\"div\");\n                                                                                                    tempElement.innerHTML =\n                                                                                                        lastCommentContent;\n                                                                                                    var extractedText =\n                                                                                                        tempElement.querySelector(\n                                                                                                            \"a\"\n                                                                                                        ).innerText;\n                                                                                                    console.log(extractedText);\n                                                                                                    spanElement.text(extractedText);\n                                                                                                }\n                                                                                            },\n                                                                                        });\n                                                                                        spanElement.appendTo(textElement);\n                                                                                        textElement.appendTo(messagesDiv);\n                                                                                    },\n                                                                                    error: (r) => {\n                                                                                        frappe.msgprint(\n                                                                                            \"something went wrong!\"\n                                                                                        );\n                                                                                    },\n                                                                                });\n\n                                                                                d1.hide();\n                                                                            },\n                                                                        });\n\n                                                                        const tableSection = $(\"<div>\").appendTo(\n                                                                            d1.body\n                                                                        );\n\n                                                                        function renderTable(data) {\n                                                                            tableSection.empty();\n\n                                                                            const table = $(\n                                                                                '<table class=\"table table-bordered\" id=\"tabledata\">'\n                                                                            ).appendTo(tableSection);\n                                                                            const thead = $(\"<thead>\").appendTo(table);\n                                                                            const tbody = $(\"<tbody>\").appendTo(table);\n\n                                                                            const headerRow = $(\"<tr>\").appendTo(thead);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Variable Name\")\n                                                                                .appendTo(headerRow);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Is Dynamic\")\n                                                                                .appendTo(headerRow);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Variable Value\")\n                                                                                .appendTo(headerRow);\n\n                                                                            data.forEach((row) => {\n                                                                                const variableName = row.variable_name;\n                                                                                const variableValue = row.variable_value;\n                                                                                const isDynamic = row.is_dynamic;\n                                                                                const doctypeField = row.doctype_field;\n\n                                                                                const rowElement =\n                                                                                    $(\"<tr>\").appendTo(tbody);\n                                                                                $(\"<td>\")\n                                                                                    .text(variableName)\n                                                                                    .appendTo(rowElement);\n                                                                                const dynamicCheckbox = $(\n                                                                                    '<input type=\"checkbox\">'\n                                                                                )\n                                                                                    .prop(\"checked\", !!isDynamic)\n                                                                                    .appendTo($(\"<td>\").appendTo(rowElement));\n                                                                                const variableValueInput =\n                                                                                    $(\"<td>\").appendTo(rowElement);\n                                                                                if (isDynamic) {\n                                                                                    const selectField = $(\"<select>\")\n                                                                                        .css({ width: \"200px\", height: \"30px\" })\n                                                                                        .appendTo(variableValueInput);\n\n                                                                                    customerFields.forEach((field) => {\n                                                                                        $(\"<option>\")\n                                                                                            .text(field.label)\n                                                                                            .val(field.fieldname)\n                                                                                            .appendTo(selectField);\n                                                                                    });\n\n                                                                                    selectField.val(doctypeField);\n                                                                                } else {\n                                                                                    $('<input type=\"text\">')\n                                                                                        .val(variableValue)\n                                                                                        .css({ width: \"200px\", height: \"30px\" })\n                                                                                        .appendTo(variableValueInput);\n                                                                                }\n\n                                                                                dynamicCheckbox.on(\"change\", function () {\n                                                                                    const isChecked = $(this).is(\":checked\");\n                                                                                    row.is_dynamic = isChecked ? 1 : 0;\n                                                                                    if (isChecked) {\n                                                                                        variableValueInput.empty();\n                                                                                        const selectField = $(\"<select>\")\n                                                                                            .css({\n                                                                                                width: \"200px\",\n                                                                                                height: \"30px\",\n                                                                                            })\n                                                                                            .appendTo(variableValueInput);\n\n                                                                                        customerFields.forEach((field) => {\n                                                                                            $(\"<option>\")\n                                                                                                .text(field.label)\n                                                                                                .val(field.fieldname)\n                                                                                                .appendTo(selectField);\n                                                                                        });\n\n                                                                                        selectField.val(doctypeField);\n                                                                                        row.doctype_field = doctypeField;\n                                                                                    } else {\n                                                                                        variableValueInput.empty();\n                                                                                        $('<input type=\"text\">')\n                                                                                            .val(row.variable_value)\n                                                                                            .css({\n                                                                                                width: \"200px\",\n                                                                                                height: \"30px\",\n                                                                                            })\n                                                                                            .appendTo(variableValueInput);\n                                                                                        row.doctype_field = \"\";\n                                                                                    }\n                                                                                });\n\n                                                                                variableValueInput.on(\n                                                                                    \"change\",\n                                                                                    function () {\n                                                                                        const selectedValue = $(this).val();\n                                                                                        if (isDynamic) {\n                                                                                            row.doctype_field = selectedValue;\n                                                                                        } else {\n                                                                                            row.variable_value = selectedValue;\n                                                                                        }\n                                                                                    }\n                                                                                );\n                                                                            });\n                                                                        }\n\n                                                                        function getTableData() {\n                                                                            const table = tableSection.find(\"#tabledata\");\n                                                                            const data = [];\n\n                                                                            table\n                                                                                .find(\"tbody tr\")\n                                                                                .each((index, element) => {\n                                                                                    const variableName = $(element)\n                                                                                        .find(\"td:nth-child(1)\")\n                                                                                        .text();\n                                                                                    const isDynamic = $(element)\n                                                                                        .find('input[type=\"checkbox\"]')\n                                                                                        .is(\":checked\");\n                                                                                    const doctypeField = $(element)\n                                                                                        .find(\"select\")\n                                                                                        .val();\n                                                                                    const variableValueInput =\n                                                                                        $(element).find('input[type=\"text\"]');\n                                                                                    const variableValue = isDynamic\n                                                                                        ? doctypeField\n                                                                                        : variableValueInput.val();\n\n                                                                                    data.push({\n                                                                                        variable_name: variableName,\n                                                                                        variable_value: variableValue,\n                                                                                        is_dynamic: isDynamic ? 1 : 0,\n                                                                                        doctype_field: doctypeField,\n                                                                                    });\n                                                                                });\n\n                                                                            return data;\n                                                                        }\n\n                                                                        d1.show();\n                                                                    }\n                                                                },\n                                                                error: (r) => {\n                                                                    frappe.msgprint(\"something went wrong!\");\n                                                                },\n                                                            });\n                                                        }\n                                                    },\n                                                    error: (r) => {\n                                                        frappe.msgprint(\"something went wrong!\");\n                                                    },\n                                                });\n                                                function extractDynamicVariables(templateSample) {\n                                                    const regex = /{{([^{}]+)}}/g;\n                                                    const matches = [];\n                                                    let match;\n\n                                                    while ((match = regex.exec(templateSample)) !== null) {\n                                                        matches.push(match[1]);\n                                                    }\n\n                                                    return matches;\n                                                }\n                                            });\n\n                                            buttonElement.click(function () {\n                                                var message = inputElement.val();\n\n                                                if (message) {\n                                                    var currentDateTime = frappe.datetime.now_datetime();\n                                                    var formattedDateTime = moment(currentDateTime).format(\n                                                        \"DD-MM-YYYY HH:mm:ss\"\n                                                    );\n                                                    frappe.call({\n                                                        method:\n                                                            \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                        args: {\n                                                            number: phone,\n                                                            message: message,\n                                                            current_date: formattedDateTime,\n                                                        },\n                                                        callback: function (response) {\n                                                            console.log(response.message);\n                                                            inputElement.val(\"\");\n\n                                                            var textElement = $(\"<p>\")\n                                                                .css(\"padding-right\", \"10px\")\n                                                                .css(\"padding-left\", \"120px\")\n                                                                .css(\"text-align\", \"right\");\n                                                            var spanElement = $(\"<div>\")\n                                                                .css(\"background-color\", \"#dcf8c6\")\n                                                                .css(\"padding\", \"10px\")\n                                                                .css(\"padding-bottom\", \"20px\")\n                                                                .css(\"border-radius\", \"10px\");\n\n                                                            spanElement.text(message);\n                                                            spanElement.appendTo(textElement);\n                                                            textElement.appendTo(messagesDiv);\n                                                        },\n                                                    });\n                                                }\n                                            });\n                                        },\n                                    });\n\n\n\n                                } else {\n\n                                    container.empty();\n                                    headingDiv.appendTo(container);\n                                    messagesDiv.appendTo(container);\n\n                                    messagesDiv.empty();\n                                    allElement.appendTo(container);\n\n                                    setTimeout(function () {\n                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    }, 0);\n\n                                    closeButtonElement.on(\"click\", function () {\n                                        container.hide();\n                                    });\n\n                                    if (showButtonClicked) {\n                                        container.show();\n                                        showButtonClicked = true;\n                                    }\n\n\n                                    frappe.call({\n                                        method:\n                                            \"whatsapp_app.whatsapp_app.doctype.api.check_status\",\n                                        args: {\n                                            number: phone,\n                                        },\n                                        callback: function (response) {\n                                            if (response.message === \"yes\") {\n                                                buttonElement1.appendTo(allElement);\n                                                inputElement.appendTo(allElement);\n                                                buttonElement.appendTo(allElement);\n                                            } else {\n                                                if (!expiredMessageAdded) {\n                                                    statusElement = $(\"<p>\")\n                                                        .css(\"color\", \"black\")\n                                                        .css(\"margin-top\", \"5px\")\n                                                        .css(\"width\", \"100%\")\n                                                        .css(\"text-align\", \"center\")\n                                                        .text(\"The chat has been expired\")\n                                                        .appendTo(allElement);\n                                \n                                                    expiredMessageAdded = true; \n                                                }\n                                                buttonElement1.prependTo(allElement);\n                                                buttonElement.appendTo(allElement);\n                                            }\n                                        },\n                                    });\n\n                                    buttonElement1.click(function () {\n                                        \n                                        container.children().css('opacity', '0.6');\n                                        \n                                        var names = cur_frm.doc.name;\n                                        frappe.call({\n                                            method:\n                                                \"whatsapp_app.whatsapp_app.doctype.api.get_template_list\",\n                                            args: {\n                                                doctype: doctype,\n                                            },\n                                            callback: (r) => {\n                                                if (r.message) {\n                                                    const template = r.message;\n\n                                                    frappe.call({\n                                                        method: \"frappe.client.get_list\",\n                                                        args: {\n                                                            doctype: \"Templates\",\n                                                            filters: {\n                                                                name: [\"in\", template],\n                                                            },\n                                                            fields: [\"name\", \"status\", \"sample\"],\n                                                            limit_start: 0,\n                                                            limit_page_length: 0,\n                                                        },\n\n                                                        callback: function (response) {\n                                                            if (response.message) {\n                                                                const templateData = response.message;\n                                                                const customerDoctype = doctype;\n                                                                const customerFields = frappe\n                                                                    .get_meta(customerDoctype)\n                                                                    .fields.filter((field) => {\n                                                                        return (\n                                                                            field.fieldtype !== \"Column Break\" &&\n                                                                            field.fieldtype !== \"Section Break\"\n                                                                        );\n                                                                    })\n                                                                    .map((field) => {\n                                                                        return {\n                                                                            fieldname: field.fieldname,\n                                                                            label: field.label,\n                                                                        };\n                                                                    });\n\n                                                                const customerFieldLabels = customerFields.map(\n                                                                    (fieldname) => {\n                                                                        const fieldMeta = frappe\n                                                                            .get_meta(doctype)\n                                                                            .fields.find(\n                                                                                (field) => field.fieldname === fieldname\n                                                                            );\n                                                                        return fieldMeta\n                                                                            ? fieldMeta.label\n                                                                            : fieldname;\n                                                                    }\n                                                                );\n\n                                                                const d1 = new frappe.ui.Dialog({\n                                                                    title: \"Send Message\",\n                                                                    fields: [\n                                                                        {\n                                                                            label: \"Select Template\",\n                                                                            fieldname: \"select_template\",\n                                                                            fieldtype: \"Select\",\n                                                                            options: template,\n                                                                            onchange: function () {\n                                                                                const selectedValue = this.get_value();\n                                                                                const previousValue = this.last_value;\n                                                                                if (\n                                                                                    selectedValue &&\n                                                                                    selectedValue !== previousValue\n                                                                                ) {\n                                                                                    this.last_value = selectedValue;\n                                                                                    const selectedTemplateData =\n                                                                                        templateData.find(\n                                                                                            (template) =>\n                                                                                                template.name === selectedValue\n                                                                                        );\n                                                                                    if (selectedTemplateData) {\n                                                                                        const dynamicVariables =\n                                                                                            extractDynamicVariables(\n                                                                                                selectedTemplateData.sample\n                                                                                            );\n\n                                                                                        const variableData =\n                                                                                            dynamicVariables.map(\n                                                                                                (variable) => ({\n                                                                                                    variable_name: variable,\n                                                                                                    variable_value: \"\",\n                                                                                                    is_dynamic: 0,\n                                                                                                    doctype_field: \"\",\n                                                                                                })\n                                                                                            );\n\n                                                                                        renderTable(variableData);\n                                                                                    }\n                                                                                }\n                                                                            },\n                                                                        },\n                                                                    ],\n                                                                    primary_action_label: \"Send\",\n\n                                                                    primary_action(values) {\n                                                                        const tableData = getTableData();\n                                                                        const dataList = tableData.map((row) => ({\n                                                                            name: row.variable_name,\n                                                                            is_dynamic: row.is_dynamic ? 1 : 0,\n                                                                            value: row.is_dynamic\n                                                                                ? row.doctype_field\n                                                                                : row.variable_value,\n                                                                        }));\n\n                                                                        const hasEmptyValue = dataList.some(\n                                                                            (row) => !row.value\n                                                                        );\n                                                                        if (hasEmptyValue) {\n                                                                            frappe.msgprint(\n                                                                                \"Please fill in all the Variable Value fields.\"\n                                                                            );\n                                                                            return;\n                                                                        }\n\n                                                                        var currentDateTime =\n                                                                            frappe.datetime.now_datetime();\n                                                                        var formattedDateTime = moment(\n                                                                            currentDateTime\n                                                                        ).format(\"DD-MM-YYYY HH:mm:ss\");\n\n                                                                        console.log(formattedDateTime);\n\n                                                                        frappe.call({\n                                                                            method:\n                                                                                \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                                            args: {\n                                                                                template_name:\n                                                                                    values[\"select_template\"],\n                                                                                doctype: doctype,\n                                                                                name: names,\n                                                                                data: dataList,\n                                                                                current_date: formattedDateTime,\n                                                                                number: phone,\n                                                                            },\n                                                                            freeze: true,\n                                                                            callback: (r) => {\n                                                                                var textElement = $(\"<p>\")\n                                                                                    .css(\"padding-right\", \"10px\")\n                                                                                    .css(\"padding-left\", \"120px\")\n                                                                                    .css(\"text-align\", \"right\");\n                                                                                var spanElement = $(\"<div>\")\n                                                                                    .css(\"background-color\", \"#dcf8c6\")\n                                                                                    .css(\"padding\", \"10px\")\n                                                                                    .css(\"padding-bottom\", \"20px\")\n                                                                                    .css(\"border-radius\", \"10px\");\n\n                                                                                frappe.call({\n                                                                                    method: \"frappe.client.get_list\",\n                                                                                    args: {\n                                                                                        doctype: \"Comment\",\n\n                                                                                        fields: [\"name\", \"content\"],\n                                                                                        limit: 1,\n                                                                                        order_by: \"creation desc\",\n                                                                                    },\n                                                                                    callback: function (response) {\n                                                                                        console.log(response);\n                                                                                        if (\n                                                                                            response &&\n                                                                                            response.message &&\n                                                                                            response.message[0]\n                                                                                        ) {\n                                                                                            var lastComment =\n                                                                                                response.message[0];\n                                                                                            var lastCommentContent =\n                                                                                                lastComment.content;\n                                                                                            var tempElement =\n                                                                                                document.createElement(\"div\");\n                                                                                            tempElement.innerHTML =\n                                                                                                lastCommentContent;\n                                                                                            var extractedText =\n                                                                                                tempElement.querySelector(\n                                                                                                    \"a\"\n                                                                                                ).innerText;\n                                                                                            console.log(extractedText);\n                                                                                            spanElement.text(extractedText);\n                                                                                        }\n                                                                                    },\n                                                                                });\n                                                                                spanElement.appendTo(textElement);\n                                                                                textElement.appendTo(messagesDiv);\n                                                                            },\n                                                                            error: (r) => {\n                                                                                frappe.msgprint(\n                                                                                    \"something went wrong!\"\n                                                                                );\n                                                                            },\n                                                                        });\n\n                                                                        d1.hide();\n                                                                    },\n                                                                });\n\n                                                                const tableSection = $(\"<div>\").appendTo(\n                                                                    d1.body\n                                                                );\n\n                                                                function renderTable(data) {\n                                                                    tableSection.empty();\n\n                                                                    const table = $(\n                                                                        '<table class=\"table table-bordered\" id=\"tabledata\">'\n                                                                    ).appendTo(tableSection);\n                                                                    const thead = $(\"<thead>\").appendTo(table);\n                                                                    const tbody = $(\"<tbody>\").appendTo(table);\n\n                                                                    const headerRow = $(\"<tr>\").appendTo(thead);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Variable Name\")\n                                                                        .appendTo(headerRow);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Is Dynamic\")\n                                                                        .appendTo(headerRow);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Variable Value\")\n                                                                        .appendTo(headerRow);\n\n                                                                    data.forEach((row) => {\n                                                                        const variableName = row.variable_name;\n                                                                        const variableValue = row.variable_value;\n                                                                        const isDynamic = row.is_dynamic;\n                                                                        const doctypeField = row.doctype_field;\n\n                                                                        const rowElement =\n                                                                            $(\"<tr>\").appendTo(tbody);\n                                                                        $(\"<td>\")\n                                                                            .text(variableName)\n                                                                            .appendTo(rowElement);\n                                                                        const dynamicCheckbox = $(\n                                                                            '<input type=\"checkbox\">'\n                                                                        )\n                                                                            .prop(\"checked\", !!isDynamic)\n                                                                            .appendTo($(\"<td>\").appendTo(rowElement));\n                                                                        const variableValueInput =\n                                                                            $(\"<td>\").appendTo(rowElement);\n                                                                        if (isDynamic) {\n                                                                            const selectField = $(\"<select>\")\n                                                                                .css({ width: \"200px\", height: \"30px\" })\n                                                                                .appendTo(variableValueInput);\n\n                                                                            customerFields.forEach((field) => {\n                                                                                $(\"<option>\")\n                                                                                    .text(field.label)\n                                                                                    .val(field.fieldname)\n                                                                                    .appendTo(selectField);\n                                                                            });\n\n                                                                            selectField.val(doctypeField);\n                                                                        } else {\n                                                                            $('<input type=\"text\">')\n                                                                                .val(variableValue)\n                                                                                .css({ width: \"200px\", height: \"30px\" })\n                                                                                .appendTo(variableValueInput);\n                                                                        }\n\n                                                                        dynamicCheckbox.on(\"change\", function () {\n                                                                            const isChecked = $(this).is(\":checked\");\n                                                                            row.is_dynamic = isChecked ? 1 : 0;\n                                                                            if (isChecked) {\n                                                                                variableValueInput.empty();\n                                                                                const selectField = $(\"<select>\")\n                                                                                    .css({\n                                                                                        width: \"200px\",\n                                                                                        height: \"30px\",\n                                                                                    })\n                                                                                    .appendTo(variableValueInput);\n\n                                                                                customerFields.forEach((field) => {\n                                                                                    $(\"<option>\")\n                                                                                        .text(field.label)\n                                                                                        .val(field.fieldname)\n                                                                                        .appendTo(selectField);\n                                                                                });\n\n                                                                                selectField.val(doctypeField);\n                                                                                row.doctype_field = doctypeField;\n                                                                            } else {\n                                                                                variableValueInput.empty();\n                                                                                $('<input type=\"text\">')\n                                                                                    .val(row.variable_value)\n                                                                                    .css({\n                                                                                        width: \"200px\",\n                                                                                        height: \"30px\",\n                                                                                    })\n                                                                                    .appendTo(variableValueInput);\n                                                                                row.doctype_field = \"\";\n                                                                            }\n                                                                        });\n\n                                                                        variableValueInput.on(\n                                                                            \"change\",\n                                                                            function () {\n                                                                                const selectedValue = $(this).val();\n                                                                                if (isDynamic) {\n                                                                                    row.doctype_field = selectedValue;\n                                                                                } else {\n                                                                                    row.variable_value = selectedValue;\n                                                                                }\n                                                                            }\n                                                                        );\n                                                                    });\n                                                                }\n\n                                                                function getTableData() {\n                                                                    const table = tableSection.find(\"#tabledata\");\n                                                                    const data = [];\n\n                                                                    table\n                                                                        .find(\"tbody tr\")\n                                                                        .each((index, element) => {\n                                                                            const variableName = $(element)\n                                                                                .find(\"td:nth-child(1)\")\n                                                                                .text();\n                                                                            const isDynamic = $(element)\n                                                                                .find('input[type=\"checkbox\"]')\n                                                                                .is(\":checked\");\n                                                                            const doctypeField = $(element)\n                                                                                .find(\"select\")\n                                                                                .val();\n                                                                            const variableValueInput =\n                                                                                $(element).find('input[type=\"text\"]');\n                                                                            const variableValue = isDynamic\n                                                                                ? doctypeField\n                                                                                : variableValueInput.val();\n\n                                                                            data.push({\n                                                                                variable_name: variableName,\n                                                                                variable_value: variableValue,\n                                                                                is_dynamic: isDynamic ? 1 : 0,\n                                                                                doctype_field: doctypeField,\n                                                                            });\n                                                                        });\n\n                                                                    return data;\n                                                                }\n\n                                                                d1.show();\n                                                            }\n                                                        },\n                                                        error: (r) => {\n                                                            frappe.msgprint(\"something went wrong!\");\n                                                        },\n                                                    });\n                                                }\n                                            },\n                                            error: (r) => {\n                                                frappe.msgprint(\"something went wrong!\");\n                                            },\n                                        });\n                                        function extractDynamicVariables(templateSample) {\n                                            const regex = /{{([^{}]+)}}/g;\n                                            const matches = [];\n                                            let match;\n\n                                            while ((match = regex.exec(templateSample)) !== null) {\n                                                matches.push(match[1]);\n                                            }\n\n                                            return matches;\n                                        }\n                                    });\n                                    buttonElement.click(function () {\n                                        var message = inputElement.val();\n\n                                        if (message) {\n                                            var currentDateTime = frappe.datetime.now_datetime();\n                                            var formattedDateTime = moment(currentDateTime).format(\n                                                \"DD-MM-YYYY HH:mm:ss\"\n                                            );\n                                            frappe.call({\n                                                method:\n                                                    \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                args: {\n                                                    number: phone,\n                                                    message: message,\n                                                    current_date: formattedDateTime,\n                                                },\n                                                callback: function (response) {\n                                                    console.log(response.message);\n                                                    inputElement.val(\"\");\n\n                                                    var textElement = $(\"<p>\")\n                                                        .css(\"padding-right\", \"10px\")\n                                                        .css(\"padding-left\", \"120px\")\n                                                        .css(\"text-align\", \"right\");\n                                                    var spanElement = $(\"<div>\")\n                                                        .css(\"background-color\", \"#dcf8c6\")\n                                                        .css(\"padding\", \"10px\")\n                                                        .css(\"padding-bottom\", \"20px\")\n                                                        .css(\"border-radius\", \"10px\");\n\n                                                    spanElement.text(message);\n                                                    spanElement.appendTo(textElement);\n                                                    textElement.appendTo(messagesDiv);\n                                                },\n                                            });\n                                        }\n                                    });\n                                }\n\n\n\n                            }\n                        });\n                    }\n                );\n            }\n        }\n\n        function adjustContainerStyles() {\n            if (window.innerWidth < 499) {\n                container.css({\n                    width: \"80%\",\n                    right: \"10%\",\n                });\n            } else if (window.innerWidth >= 499 && window.innerWidth < 530) {\n                container.css({\n                    width: \"40%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 530 && window.innerWidth < 800) {\n                container.css({\n                    width: \"40%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 800 && window.innerWidth < 798) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 798 && window.innerWidth < 838) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 838 && window.innerWidth < 1300) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n                inputElement.css({\n                    width: \"40%\",\n                });\n            } else {\n                container.css({\n                    width: \"20%\",\n                    right: \"80px\",\n                    height: \"65%\",\n                });\n            }\n        }\n\n        $(window).resize(adjustContainerStyles);\n\n        adjustContainerStyles();\n    },\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Raw Data",
  "enabled": 1,
  "modified": "2023-07-11 15:43:01.025822",
  "module": "Whatsapp App",
  "name": "Raw data chat box",
  "script": "    \nfrappe.ui.form.on(\"Raw Data\", {\n    refresh(frm) {\n        var f_name = cur_frm.doc.full_name;\n\n        var container = $('<div class=\"custom-container\">').appendTo(frm.wrapper);\n\n        container.css({\n            width: \"30%\",\n            height: \"65%\",\n            backgroundColor: \"#ece5dd\",\n            position: \"fixed\",\n            top: \"50%\",\n            right: \"80px\",\n            transform: \"translateY(-50%)\",\n            borderRadius: \"5px\",\n            boxShadow: \"0 0 5px rgba(0, 0, 0, 0.4)\",\n            zIndex: 9999,\n            display: \"none\",\n        });\n\n        var headingDiv = $(\"<div>\")\n            .css(\"background-color\", \"#128c7e\")\n            .appendTo(container);\n\n        var closeButtonElement = $(\"<button>\")\n            .css(\"float\", \"right\")\n            .appendTo(headingDiv);\n\n        var closeIconElement = $(\"<i>\")\n            .addClass(\"fa fa-close\")\n            .css(\"font-size\", \"30px\");\n\n        closeButtonElement.prepend(closeIconElement);\n\n        closeButtonElement.css({\n            float: \"right\",\n            backgroundColor: \"#128c7e\",\n            marginRight: \"10px\",\n            marginTop: \"10px\",\n            color: \"#FFF\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n        var heading = $(\"<h3>\")\n            .css(\"padding-left\", \"10px\")\n            .css(\"color\", \"white\")\n            .css(\"margin-bottom\", \"0px\")\n            .css(\"background-color\", \"#128c7e\")\n            .css(\"padding-top\", \"15px\")\n            .css(\"padding-bottom\", \"15px\")\n            .text(f_name)\n            .appendTo(headingDiv);\n\n        var messagesDiv = $(\"<div>\")\n            .css(\"overflow-y\", \"scroll\")\n            .css(\"background-color\", \"#ece5dd\")\n            .css(\"height\", \"83%\")\n            .appendTo(container);\n        \n        var statusElement;\n        var expiredMessageAdded = false;\n        \n        var allElement = $(\"<div>\")\n            .css(\"height\", \"40px\")\n            .css(\"padding-top\", \"5px\")\n            .css(\"background-color\", \"#ece5dd\")\n            .css(\"display\", \"flex\")\n            .css(\"flex-direction\", \"row\")\n            .appendTo(container);\n\n\n        var buttonElement1 = $(\"<button>\").text(\"Template\");\n\n        buttonElement1.css({\n            height: \"25px\",\n            backgroundColor: \"#128c7e\",\n            marginLeft: \"5px\",\n            marginTop: \"4px\",\n            color: \"#FFF\",\n            padding: \"2px 4px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n        var inputElement = $(\"<input>\")\n            .attr(\"type\", \"text\")\n            .attr(\"placeholder\", \" Type a message...\");\n\n        inputElement.css({\n            marginLeft: \"5px\",\n            marginRight: \"5px\",\n            border: \"none\",\n            marginTop: \"5px\",\n            height: \"25px\",\n            borderRadius: \"4px\",\n            width: \"auto\",\n            flex: \"1\"\n        });\n\n        var buttonElement = $(\"<button>\");\n\n        var iconElement = $(\"<i>\")\n            .addClass(\"fa fa-paper-plane\");\n\n        buttonElement.prepend(iconElement);\n\n        buttonElement.css({\n            height: \"30px\",\n            backgroundColor: \"#128c7e\",\n            marginTop: \"2px\",\n            marginRight: \"10px\",\n            color: \"#FFF\",\n            padding: \"4px 8px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n\n        var showButtonClicked = true;\n\n        var currentUserRoles = frappe.user_roles;\n        var isAdmin = currentUserRoles.includes(\"Administrator\");\n\n        var hasRequiredRole =\n            !isAdmin &&\n            (currentUserRoles.includes(\"Vendor\") ||\n                currentUserRoles.includes(\"Customer\") ||\n                currentUserRoles.includes(\"Driver\"));\n\n        if (!hasRequiredRole || isAdmin) {\n            if (frm.doc.whatsapp_no) {\n                frm.add_custom_button(\n                    '<i class=\"fa fa-whatsapp\" aria-hidden=\"true\" style=\"font-size:24px;color:#25d366\" ></i>',\n                    function () {\n                        // var doctype = cur_frm.doctype;\n                        var phone = cur_frm.doc.whatsapp_no;\n                        var availableLog;\n                        frappe.call({\n                            method: \"frappe.client.get_list\",\n                            args: {\n                                doctype: \"wati call message log\",\n                                filters: {\n                                    name: phone,\n                                },\n                                fields: [\"name\"]\n                            },\n                            callback: function (response) {\n\n                                var message = response.message;\n                                var doctype = cur_frm.doctype;\n                                if (message && message.length > 0) {\n                                    var ans = message[0];\n                                    var ans_name = ans.name;\n\n\n                                    frappe.call({\n                                        method:\n                                            \"whatsapp_app.whatsapp_app.doctype.api.get_template_sample\",\n                                        args: {\n                                            phone: phone,\n                                        },\n                                        async: false,\n                                        callback: function (response) { },\n                                    });\n                                    frappe.call({\n                                        method: \"whatsapp_app.whatsapp_app.doctype.api.get_img\",\n                                        args: {\n                                            phone: phone,\n                                        },\n                                        async: false,\n                                        callback: function (response) { },\n                                    });\n                                    frappe.call({\n                                        method: \"frappe.client.get_list\",\n                                        args: {\n                                            doctype: \"wati call message log\",\n                                            filters: {\n                                                name: phone,\n                                            },\n                                            fields: [\"name\", \"data\"],\n                                        },\n                                        callback: function (response) {\n                                            if (response.message) {\n                                                var dataObj = response.message;\n                                                if (dataObj && dataObj.length > 0) {\n                                                    var dataValue = dataObj[0].data;\n\n                                                    var parsedData = JSON.parse(dataValue);\n                                                    var result = parsedData.data;\n\n                                                    var desiredDictionaries = [];\n                                                    var tempName;\n                                                    var tempImg;\n\n                                                    for (var i = 0; i < result.length; i++) {\n                                                        var dictionary = result[i];\n\n                                                        if (\n                                                            dictionary.message &&\n                                                            dictionary.message.hasOwnProperty(\"isOwner\")\n                                                        ) {\n                                                            desiredDictionaries.push(dictionary.message);\n                                                        } else if (\n                                                            dictionary.hasOwnProperty(\"owner\") &&\n                                                            !dictionary.owner\n                                                        ) {\n                                                            desiredDictionaries.push(dictionary);\n                                                        } else if (\n                                                            dictionary.hasOwnProperty(\"modified_sample\")\n                                                        ) {\n                                                            tempName = dictionary.modified_sample;\n\n                                                            var timedate = dictionary.send_time;\n                                                            tempImg = dictionary.templateImg;\n\n                                                            frappe.call({\n                                                                method:\n                                                                    \"whatsapp_app.whatsapp_app.doctype.api.get_image\",\n                                                                args: {\n                                                                    filename: tempImg,\n                                                                },\n                                                                async: false,\n                                                                callback: function (response) { },\n                                                            });\n\n                                                            desiredDictionaries.push({\n                                                                tempName: tempName,\n                                                                timedate: timedate,\n                                                                tempImg: tempImg,\n                                                            });\n                                                        }\n                                                    }\n\n                                                    var texts = desiredDictionaries.map(function (\n                                                        dictionary\n                                                    ) {\n                                                        if (\n                                                            typeof dictionary === \"object\" &&\n                                                            dictionary.hasOwnProperty(\"text\")\n                                                        ) {\n                                                            var text = dictionary.text;\n                                                        } else if (\n                                                            typeof dictionary === \"object\" &&\n                                                            dictionary.hasOwnProperty(\"tempName\") &&\n                                                            dictionary.hasOwnProperty(\"timedate\") &&\n                                                            dictionary.hasOwnProperty(\"tempImg\")\n                                                        ) {\n                                                        } else {\n                                                            return dictionary;\n                                                        }\n                                                    });\n\n                                                    container.empty();\n                                                    headingDiv.appendTo(container);\n                                                    messagesDiv.appendTo(container);\n\n                                                    messagesDiv.empty();\n\n                                                    allElement.appendTo(container);\n\n                                                    for (var j = 0; j < texts.length; j++) {\n                                                        var text = texts[j];\n                                                        var created = \"\";\n\n                                                        if (desiredDictionaries[j].hasOwnProperty(\"text\")) {\n                                                            text = desiredDictionaries[j].text;\n                                                            if (\n                                                                desiredDictionaries[j].hasOwnProperty(\"created\")\n                                                            ) {\n                                                                var datetimeString = desiredDictionaries[j].created;\n                                                                var dateObj = new Date(datetimeString);\n\n                                                                var day = dateObj.getUTCDate();\n                                                                var month = dateObj.getUTCMonth() + 1;\n                                                                var year = dateObj.getUTCFullYear();\n\n                                                                var hours = dateObj.getUTCHours();\n                                                                var minutes = dateObj.getUTCMinutes();\n                                                                var seconds = dateObj.getUTCSeconds();\n\n                                                                if (day < 10) {\n                                                                    day = \"0\" + day;\n                                                                }\n                                                                if (month < 10) {\n                                                                    month = \"0\" + month;\n                                                                }\n                                                                if (hours < 10) {\n                                                                    hours = \"0\" + hours;\n                                                                }\n                                                                if (minutes < 10) {\n                                                                    minutes = \"0\" + minutes;\n                                                                }\n                                                                if (seconds < 10) {\n                                                                    seconds = \"0\" + seconds;\n                                                                }\n\n                                                                created =\n                                                                    day +\n                                                                    \"-\" +\n                                                                    month +\n                                                                    \"-\" +\n                                                                    year +\n                                                                    \" \" +\n                                                                    hours +\n                                                                    \":\" +\n                                                                    minutes +\n                                                                    \":\" +\n                                                                    seconds;\n                                                            }\n                                                        }\n\n                                                        var textElement = $(\"<p>\")\n                                                            .css(\n                                                                \"padding-right\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"100px\"\n                                                                    : \"10px\"\n                                                            )\n                                                            .css(\n                                                                \"padding-left\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"10px\"\n                                                                    : \"100px\"\n                                                            )\n                                                            .css(\n                                                                \"text-align\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"left\"\n                                                                    : \"right\"\n                                                            )\n                                                            .appendTo(messagesDiv);\n\n                                                        var textContent = $(\"<div>\")\n                                                            .css(\n                                                                \"background-color\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"#fff\"\n                                                                    : \"#dcf8c6\"\n                                                            )\n                                                            .css(\"padding\", \"10px\")\n                                                            .css(\"padding-bottom\", \"20px\")\n                                                            .css(\"border-radius\", \"10px\")\n                                                            .text(text)\n                                                            .appendTo(textElement);\n\n                                                        if (desiredDictionaries[j].tempImg) {\n                                                            var tempImgElement = $(\"<img>\")\n                                                                .attr(\n                                                                    \"src\",\n                                                                    \"https://migoostage.frappe.cloud/files/\" +\n                                                                    desiredDictionaries[j].tempImg\n                                                                )\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var tempNameElement = $(\"<p>\")\n                                                            .text(desiredDictionaries[j].tempName)\n                                                            .appendTo(textContent);\n\n                                                        var timedateElement = $(\"<p>\")\n                                                            .text(desiredDictionaries[j].timedate)\n                                                            .css(\"color\", \"#808080\")\n                                                            .css(\"font-size\", \"12px\")\n                                                            .appendTo(textContent);\n\n                                                        if (created !== \"\") {\n                                                            var createdElement = $(\"<div>\")\n                                                                .text(created)\n                                                                .css(\"color\", \"#808080\")\n                                                                .css(\"font-size\", \"12px\")\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var imageSrc = \"/files/icons8-done-30.png\";\n\n                                                        if (desiredDictionaries[j].owner !== false) {\n                                                            var imageElement = $(\"<img>\")\n                                                                .attr(\"src\", imageSrc)\n                                                                .css(\"width\", \"20px\")\n                                                                .css(\"float\", \"right\")\n                                                                .attr(\"class\", \"img1\")\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var b_tick;\n                                                        frappe.call({\n                                                            method: \"frappe.client.get_list\",\n                                                            args: {\n                                                                doctype: \"wati call message log\",\n                                                                filters: {\n                                                                    name: phone,\n                                                                    client_read: 1,\n                                                                },\n                                                                fields: [\"name\"],\n                                                            },\n                                                            callback: function (response) {\n                                                                b_tick = response.message[0].name;\n\n                                                                if (b_tick) {\n                                                                    imageSrc = \"/files/icons8-double-tick-50.png\";\n                                                                    $(\".img1\").attr(\"src\", imageSrc);\n                                                                }\n                                                            },\n                                                        });\n                                                    }\n\n                                                    setTimeout(function () {\n                                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                                    }, 0);\n                                                }\n\n                                                closeButtonElement.on(\"click\", function () {\n                                                    container.hide();\n                                                });\n\n                                                if (showButtonClicked) {\n                                                    container.show();\n                                                    showButtonClicked = true;\n                                                }\n                                            }\n\n                                            frappe.call({\n                                                method:\n                                                    \"whatsapp_app.whatsapp_app.doctype.api.check_status\",\n                                                args: {\n                                                    number: phone,\n                                                },\n                                                callback: function (response) {\n                                                    if (response.message === \"yes\") {\n                                                        buttonElement1.appendTo(allElement);\n                                                        inputElement.appendTo(allElement);\n                                                        buttonElement.appendTo(allElement);\n                                                    } else {\n                                                        if (!expiredMessageAdded) {\n                                                            statusElement = $(\"<p>\")\n                                                                .css(\"color\", \"black\")\n                                                                .css(\"margin-top\", \"5px\")\n                                                                .css(\"width\", \"100%\")\n                                                                .css(\"text-align\", \"center\")\n                                                                .text(\"The chat has been expired\")\n                                                                .appendTo(allElement);\n                                        \n                                                            expiredMessageAdded = true; \n                                                        }\n                                                        buttonElement1.prependTo(allElement);\n                                                        buttonElement.appendTo(allElement);\n                                                    }\n                                                },\n                                            });\n\n                                            buttonElement1.click(function () {\n                                                var names = cur_frm.doc.name;\n                                                frappe.call({\n                                                    method:\n                                                        \"whatsapp_app.whatsapp_app.doctype.api.get_template_list\",\n                                                    args: {\n                                                        doctype: doctype,\n                                                    },\n                                                    callback: (r) => {\n                                                        if (r.message) {\n                                                            const template = r.message;\n\n                                                            frappe.call({\n                                                                method: \"frappe.client.get_list\",\n                                                                args: {\n                                                                    doctype: \"Templates\",\n                                                                    filters: {\n                                                                        name: [\"in\", template],\n                                                                    },\n                                                                    fields: [\"name\", \"status\", \"sample\"],\n                                                                    limit_start: 0,\n                                                                    limit_page_length: 0,\n                                                                },\n\n                                                                callback: function (response) {\n                                                                    if (response.message) {\n                                                                        const templateData = response.message;\n                                                                        const customerDoctype = doctype;\n                                                                        const customerFields = frappe\n                                                                            .get_meta(customerDoctype)\n                                                                            .fields.filter((field) => {\n                                                                                return (\n                                                                                    field.fieldtype !== \"Column Break\" &&\n                                                                                    field.fieldtype !== \"Section Break\"\n                                                                                );\n                                                                            })\n                                                                            .map((field) => {\n                                                                                return {\n                                                                                    fieldname: field.fieldname,\n                                                                                    label: field.label,\n                                                                                };\n                                                                            });\n\n                                                                        const customerFieldLabels = customerFields.map(\n                                                                            (fieldname) => {\n                                                                                const fieldMeta = frappe\n                                                                                    .get_meta(doctype)\n                                                                                    .fields.find(\n                                                                                        (field) => field.fieldname === fieldname\n                                                                                    );\n                                                                                return fieldMeta\n                                                                                    ? fieldMeta.label\n                                                                                    : fieldname;\n                                                                            }\n                                                                        );\n\n                                                                        const d1 = new frappe.ui.Dialog({\n                                                                            title: \"Send Message\",\n                                                                            fields: [\n                                                                                {\n                                                                                    label: \"Select Template\",\n                                                                                    fieldname: \"select_template\",\n                                                                                    fieldtype: \"Select\",\n                                                                                    options: template,\n                                                                                    onchange: function () {\n                                                                                        const selectedValue = this.get_value();\n                                                                                        const previousValue = this.last_value;\n                                                                                        if (\n                                                                                            selectedValue &&\n                                                                                            selectedValue !== previousValue\n                                                                                        ) {\n                                                                                            this.last_value = selectedValue;\n                                                                                            const selectedTemplateData =\n                                                                                                templateData.find(\n                                                                                                    (template) =>\n                                                                                                        template.name === selectedValue\n                                                                                                );\n                                                                                            if (selectedTemplateData) {\n                                                                                                const dynamicVariables =\n                                                                                                    extractDynamicVariables(\n                                                                                                        selectedTemplateData.sample\n                                                                                                    );\n\n                                                                                                const variableData =\n                                                                                                    dynamicVariables.map(\n                                                                                                        (variable) => ({\n                                                                                                            variable_name: variable,\n                                                                                                            variable_value: \"\",\n                                                                                                            is_dynamic: 0,\n                                                                                                            doctype_field: \"\",\n                                                                                                        })\n                                                                                                    );\n\n                                                                                                renderTable(variableData);\n                                                                                            }\n                                                                                        }\n                                                                                    },\n                                                                                },\n                                                                            ],\n                                                                            primary_action_label: \"Send\",\n\n                                                                            primary_action(values) {\n                                                                                const tableData = getTableData();\n                                                                                const dataList = tableData.map((row) => ({\n                                                                                    name: row.variable_name,\n                                                                                    is_dynamic: row.is_dynamic ? 1 : 0,\n                                                                                    value: row.is_dynamic\n                                                                                        ? row.doctype_field\n                                                                                        : row.variable_value,\n                                                                                }));\n\n                                                                                const hasEmptyValue = dataList.some(\n                                                                                    (row) => !row.value\n                                                                                );\n                                                                                if (hasEmptyValue) {\n                                                                                    frappe.msgprint(\n                                                                                        \"Please fill in all the Variable Value fields.\"\n                                                                                    );\n                                                                                    return;\n                                                                                }\n\n                                                                                var currentDateTime =\n                                                                                    frappe.datetime.now_datetime();\n                                                                                var formattedDateTime = moment(\n                                                                                    currentDateTime\n                                                                                ).format(\"DD-MM-YYYY HH:mm:ss\");\n\n                                                                                console.log(formattedDateTime);\n\n                                                                                frappe.call({\n                                                                                    method:\n                                                                                        \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                                                    args: {\n                                                                                        template_name:\n                                                                                            values[\"select_template\"],\n                                                                                        doctype: doctype,\n                                                                                        name: names,\n                                                                                        data: dataList,\n                                                                                        current_date: formattedDateTime,\n                                                                                        number: phone,\n                                                                                    },\n                                                                                    freeze: true,\n                                                                                    callback: (r) => {\n                                                                                        var textElement = $(\"<p>\")\n                                                                                            .css(\"padding-right\", \"10px\")\n                                                                                            .css(\"padding-left\", \"120px\")\n                                                                                            .css(\"text-align\", \"right\");\n                                                                                        var spanElement = $(\"<div>\")\n                                                                                            .css(\"background-color\", \"#dcf8c6\")\n                                                                                            .css(\"padding\", \"10px\")\n                                                                                            .css(\"padding-bottom\", \"20px\")\n                                                                                            .css(\"border-radius\", \"10px\");\n\n                                                                                        frappe.call({\n                                                                                            method: \"frappe.client.get_list\",\n                                                                                            args: {\n                                                                                                doctype: \"Comment\",\n\n                                                                                                fields: [\"name\", \"content\"],\n                                                                                                limit: 1,\n                                                                                                order_by: \"creation desc\",\n                                                                                            },\n                                                                                            callback: function (response) {\n                                                                                                console.log(response);\n                                                                                                if (\n                                                                                                    response &&\n                                                                                                    response.message &&\n                                                                                                    response.message[0]\n                                                                                                ) {\n                                                                                                    var lastComment =\n                                                                                                        response.message[0];\n                                                                                                    var lastCommentContent =\n                                                                                                        lastComment.content;\n                                                                                                    var tempElement =\n                                                                                                        document.createElement(\"div\");\n                                                                                                    tempElement.innerHTML =\n                                                                                                        lastCommentContent;\n                                                                                                    var extractedText =\n                                                                                                        tempElement.querySelector(\n                                                                                                            \"a\"\n                                                                                                        ).innerText;\n                                                                                                    console.log(extractedText);\n                                                                                                    spanElement.text(extractedText);\n                                                                                                }\n                                                                                            },\n                                                                                        });\n                                                                                        spanElement.appendTo(textElement);\n                                                                                        textElement.appendTo(messagesDiv);\n                                                                                    },\n                                                                                    error: (r) => {\n                                                                                        frappe.msgprint(\n                                                                                            \"something went wrong!\"\n                                                                                        );\n                                                                                    },\n                                                                                });\n\n                                                                                d1.hide();\n                                                                            },\n                                                                        });\n\n                                                                        const tableSection = $(\"<div>\").appendTo(\n                                                                            d1.body\n                                                                        );\n\n                                                                        function renderTable(data) {\n                                                                            tableSection.empty();\n\n                                                                            const table = $(\n                                                                                '<table class=\"table table-bordered\" id=\"tabledata\">'\n                                                                            ).appendTo(tableSection);\n                                                                            const thead = $(\"<thead>\").appendTo(table);\n                                                                            const tbody = $(\"<tbody>\").appendTo(table);\n\n                                                                            const headerRow = $(\"<tr>\").appendTo(thead);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Variable Name\")\n                                                                                .appendTo(headerRow);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Is Dynamic\")\n                                                                                .appendTo(headerRow);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Variable Value\")\n                                                                                .appendTo(headerRow);\n\n                                                                            data.forEach((row) => {\n                                                                                const variableName = row.variable_name;\n                                                                                const variableValue = row.variable_value;\n                                                                                const isDynamic = row.is_dynamic;\n                                                                                const doctypeField = row.doctype_field;\n\n                                                                                const rowElement =\n                                                                                    $(\"<tr>\").appendTo(tbody);\n                                                                                $(\"<td>\")\n                                                                                    .text(variableName)\n                                                                                    .appendTo(rowElement);\n                                                                                const dynamicCheckbox = $(\n                                                                                    '<input type=\"checkbox\">'\n                                                                                )\n                                                                                    .prop(\"checked\", !!isDynamic)\n                                                                                    .appendTo($(\"<td>\").appendTo(rowElement));\n                                                                                const variableValueInput =\n                                                                                    $(\"<td>\").appendTo(rowElement);\n                                                                                if (isDynamic) {\n                                                                                    const selectField = $(\"<select>\")\n                                                                                        .css({ width: \"200px\", height: \"30px\" })\n                                                                                        .appendTo(variableValueInput);\n\n                                                                                    customerFields.forEach((field) => {\n                                                                                        $(\"<option>\")\n                                                                                            .text(field.label)\n                                                                                            .val(field.fieldname)\n                                                                                            .appendTo(selectField);\n                                                                                    });\n\n                                                                                    selectField.val(doctypeField);\n                                                                                } else {\n                                                                                    $('<input type=\"text\">')\n                                                                                        .val(variableValue)\n                                                                                        .css({ width: \"200px\", height: \"30px\" })\n                                                                                        .appendTo(variableValueInput);\n                                                                                }\n\n                                                                                dynamicCheckbox.on(\"change\", function () {\n                                                                                    const isChecked = $(this).is(\":checked\");\n                                                                                    row.is_dynamic = isChecked ? 1 : 0;\n                                                                                    if (isChecked) {\n                                                                                        variableValueInput.empty();\n                                                                                        const selectField = $(\"<select>\")\n                                                                                            .css({\n                                                                                                width: \"200px\",\n                                                                                                height: \"30px\",\n                                                                                            })\n                                                                                            .appendTo(variableValueInput);\n\n                                                                                        customerFields.forEach((field) => {\n                                                                                            $(\"<option>\")\n                                                                                                .text(field.label)\n                                                                                                .val(field.fieldname)\n                                                                                                .appendTo(selectField);\n                                                                                        });\n\n                                                                                        selectField.val(doctypeField);\n                                                                                        row.doctype_field = doctypeField;\n                                                                                    } else {\n                                                                                        variableValueInput.empty();\n                                                                                        $('<input type=\"text\">')\n                                                                                            .val(row.variable_value)\n                                                                                            .css({\n                                                                                                width: \"200px\",\n                                                                                                height: \"30px\",\n                                                                                            })\n                                                                                            .appendTo(variableValueInput);\n                                                                                        row.doctype_field = \"\";\n                                                                                    }\n                                                                                });\n\n                                                                                variableValueInput.on(\n                                                                                    \"change\",\n                                                                                    function () {\n                                                                                        const selectedValue = $(this).val();\n                                                                                        if (isDynamic) {\n                                                                                            row.doctype_field = selectedValue;\n                                                                                        } else {\n                                                                                            row.variable_value = selectedValue;\n                                                                                        }\n                                                                                    }\n                                                                                );\n                                                                            });\n                                                                        }\n\n                                                                        function getTableData() {\n                                                                            const table = tableSection.find(\"#tabledata\");\n                                                                            const data = [];\n\n                                                                            table\n                                                                                .find(\"tbody tr\")\n                                                                                .each((index, element) => {\n                                                                                    const variableName = $(element)\n                                                                                        .find(\"td:nth-child(1)\")\n                                                                                        .text();\n                                                                                    const isDynamic = $(element)\n                                                                                        .find('input[type=\"checkbox\"]')\n                                                                                        .is(\":checked\");\n                                                                                    const doctypeField = $(element)\n                                                                                        .find(\"select\")\n                                                                                        .val();\n                                                                                    const variableValueInput =\n                                                                                        $(element).find('input[type=\"text\"]');\n                                                                                    const variableValue = isDynamic\n                                                                                        ? doctypeField\n                                                                                        : variableValueInput.val();\n\n                                                                                    data.push({\n                                                                                        variable_name: variableName,\n                                                                                        variable_value: variableValue,\n                                                                                        is_dynamic: isDynamic ? 1 : 0,\n                                                                                        doctype_field: doctypeField,\n                                                                                    });\n                                                                                });\n\n                                                                            return data;\n                                                                        }\n\n                                                                        d1.show();\n                                                                    }\n                                                                },\n                                                                error: (r) => {\n                                                                    frappe.msgprint(\"something went wrong!\");\n                                                                },\n                                                            });\n                                                        }\n                                                    },\n                                                    error: (r) => {\n                                                        frappe.msgprint(\"something went wrong!\");\n                                                    },\n                                                });\n                                                function extractDynamicVariables(templateSample) {\n                                                    const regex = /{{([^{}]+)}}/g;\n                                                    const matches = [];\n                                                    let match;\n\n                                                    while ((match = regex.exec(templateSample)) !== null) {\n                                                        matches.push(match[1]);\n                                                    }\n\n                                                    return matches;\n                                                }\n                                            });\n\n                                            buttonElement.click(function () {\n                                                var message = inputElement.val();\n\n                                                if (message) {\n                                                    var currentDateTime = frappe.datetime.now_datetime();\n                                                    var formattedDateTime = moment(currentDateTime).format(\n                                                        \"DD-MM-YYYY HH:mm:ss\"\n                                                    );\n                                                    frappe.call({\n                                                        method:\n                                                            \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                        args: {\n                                                            number: phone,\n                                                            message: message,\n                                                            current_date: formattedDateTime,\n                                                        },\n                                                        callback: function (response) {\n                                                            console.log(response.message);\n                                                            inputElement.val(\"\");\n\n                                                            var textElement = $(\"<p>\")\n                                                                .css(\"padding-right\", \"10px\")\n                                                                .css(\"padding-left\", \"120px\")\n                                                                .css(\"text-align\", \"right\");\n                                                            var spanElement = $(\"<div>\")\n                                                                .css(\"background-color\", \"#dcf8c6\")\n                                                                .css(\"padding\", \"10px\")\n                                                                .css(\"padding-bottom\", \"20px\")\n                                                                .css(\"border-radius\", \"10px\");\n\n                                                            spanElement.text(message);\n                                                            spanElement.appendTo(textElement);\n                                                            textElement.appendTo(messagesDiv);\n                                                        },\n                                                    });\n                                                }\n                                            });\n                                        },\n                                    });\n\n\n\n                                } else {\n\n                                    container.empty();\n                                    headingDiv.appendTo(container);\n                                    messagesDiv.appendTo(container);\n\n                                    messagesDiv.empty();\n                                    allElement.appendTo(container);\n\n                                    setTimeout(function () {\n                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    }, 0);\n\n                                    closeButtonElement.on(\"click\", function () {\n                                        container.hide();\n                                    });\n\n                                    if (showButtonClicked) {\n                                        container.show();\n                                        showButtonClicked = true;\n                                    }\n\n\n                                    frappe.call({\n                                        method:\n                                            \"whatsapp_app.whatsapp_app.doctype.api.check_status\",\n                                        args: {\n                                            number: phone,\n                                        },\n                                        callback: function (response) {\n                                            if (response.message === \"yes\") {\n                                                buttonElement1.appendTo(allElement);\n                                                inputElement.appendTo(allElement);\n                                                buttonElement.appendTo(allElement);\n                                            } else {\n                                                if (!expiredMessageAdded) {\n                                                    statusElement = $(\"<p>\")\n                                                        .css(\"color\", \"black\")\n                                                        .css(\"margin-top\", \"5px\")\n                                                        .css(\"width\", \"100%\")\n                                                        .css(\"text-align\", \"center\")\n                                                        .text(\"The chat has been expired\")\n                                                        .appendTo(allElement);\n                                        \n                                                        expiredMessageAdded = true; \n                                                }\n                                                buttonElement1.prependTo(allElement);\n                                                buttonElement.appendTo(allElement);\n                                            }\n                                        },\n                                    });\n\n                                    buttonElement1.click(function () {\n                                        \n                                        container.children().css('opacity', '0.6');\n                                        \n                                        var names = cur_frm.doc.name;\n                                        frappe.call({\n                                            method:\n                                                \"whatsapp_app.whatsapp_app.doctype.api.get_template_list\",\n                                            args: {\n                                                doctype: doctype,\n                                            },\n                                            callback: (r) => {\n                                                if (r.message) {\n                                                    const template = r.message;\n\n                                                    frappe.call({\n                                                        method: \"frappe.client.get_list\",\n                                                        args: {\n                                                            doctype: \"Templates\",\n                                                            filters: {\n                                                                name: [\"in\", template],\n                                                            },\n                                                            fields: [\"name\", \"status\", \"sample\"],\n                                                            limit_start: 0,\n                                                            limit_page_length: 0,\n                                                        },\n\n                                                        callback: function (response) {\n                                                            if (response.message) {\n                                                                const templateData = response.message;\n                                                                const customerDoctype = doctype;\n                                                                const customerFields = frappe\n                                                                    .get_meta(customerDoctype)\n                                                                    .fields.filter((field) => {\n                                                                        return (\n                                                                            field.fieldtype !== \"Column Break\" &&\n                                                                            field.fieldtype !== \"Section Break\"\n                                                                        );\n                                                                    })\n                                                                    .map((field) => {\n                                                                        return {\n                                                                            fieldname: field.fieldname,\n                                                                            label: field.label,\n                                                                        };\n                                                                    });\n\n                                                                const customerFieldLabels = customerFields.map(\n                                                                    (fieldname) => {\n                                                                        const fieldMeta = frappe\n                                                                            .get_meta(doctype)\n                                                                            .fields.find(\n                                                                                (field) => field.fieldname === fieldname\n                                                                            );\n                                                                        return fieldMeta\n                                                                            ? fieldMeta.label\n                                                                            : fieldname;\n                                                                    }\n                                                                );\n\n                                                                const d1 = new frappe.ui.Dialog({\n                                                                    title: \"Send Message\",\n                                                                    fields: [\n                                                                        {\n                                                                            label: \"Select Template\",\n                                                                            fieldname: \"select_template\",\n                                                                            fieldtype: \"Select\",\n                                                                            options: template,\n                                                                            onchange: function () {\n                                                                                const selectedValue = this.get_value();\n                                                                                const previousValue = this.last_value;\n                                                                                if (\n                                                                                    selectedValue &&\n                                                                                    selectedValue !== previousValue\n                                                                                ) {\n                                                                                    this.last_value = selectedValue;\n                                                                                    const selectedTemplateData =\n                                                                                        templateData.find(\n                                                                                            (template) =>\n                                                                                                template.name === selectedValue\n                                                                                        );\n                                                                                    if (selectedTemplateData) {\n                                                                                        const dynamicVariables =\n                                                                                            extractDynamicVariables(\n                                                                                                selectedTemplateData.sample\n                                                                                            );\n\n                                                                                        const variableData =\n                                                                                            dynamicVariables.map(\n                                                                                                (variable) => ({\n                                                                                                    variable_name: variable,\n                                                                                                    variable_value: \"\",\n                                                                                                    is_dynamic: 0,\n                                                                                                    doctype_field: \"\",\n                                                                                                })\n                                                                                            );\n\n                                                                                        renderTable(variableData);\n                                                                                    }\n                                                                                }\n                                                                            },\n                                                                        },\n                                                                    ],\n                                                                    primary_action_label: \"Send\",\n\n                                                                    primary_action(values) {\n                                                                        const tableData = getTableData();\n                                                                        const dataList = tableData.map((row) => ({\n                                                                            name: row.variable_name,\n                                                                            is_dynamic: row.is_dynamic ? 1 : 0,\n                                                                            value: row.is_dynamic\n                                                                                ? row.doctype_field\n                                                                                : row.variable_value,\n                                                                        }));\n\n                                                                        const hasEmptyValue = dataList.some(\n                                                                            (row) => !row.value\n                                                                        );\n                                                                        if (hasEmptyValue) {\n                                                                            frappe.msgprint(\n                                                                                \"Please fill in all the Variable Value fields.\"\n                                                                            );\n                                                                            return;\n                                                                        }\n\n                                                                        var currentDateTime =\n                                                                            frappe.datetime.now_datetime();\n                                                                        var formattedDateTime = moment(\n                                                                            currentDateTime\n                                                                        ).format(\"DD-MM-YYYY HH:mm:ss\");\n\n                                                                        console.log(formattedDateTime);\n\n                                                                        frappe.call({\n                                                                            method:\n                                                                                \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                                            args: {\n                                                                                template_name:\n                                                                                    values[\"select_template\"],\n                                                                                doctype: doctype,\n                                                                                name: names,\n                                                                                data: dataList,\n                                                                                current_date: formattedDateTime,\n                                                                                number: phone,\n                                                                            },\n                                                                            freeze: true,\n                                                                            callback: (r) => {\n                                                                                var textElement = $(\"<p>\")\n                                                                                    .css(\"padding-right\", \"10px\")\n                                                                                    .css(\"padding-left\", \"120px\")\n                                                                                    .css(\"text-align\", \"right\");\n                                                                                var spanElement = $(\"<div>\")\n                                                                                    .css(\"background-color\", \"#dcf8c6\")\n                                                                                    .css(\"padding\", \"10px\")\n                                                                                    .css(\"padding-bottom\", \"20px\")\n                                                                                    .css(\"border-radius\", \"10px\");\n\n                                                                                frappe.call({\n                                                                                    method: \"frappe.client.get_list\",\n                                                                                    args: {\n                                                                                        doctype: \"Comment\",\n\n                                                                                        fields: [\"name\", \"content\"],\n                                                                                        limit: 1,\n                                                                                        order_by: \"creation desc\",\n                                                                                    },\n                                                                                    callback: function (response) {\n                                                                                        console.log(response);\n                                                                                        if (\n                                                                                            response &&\n                                                                                            response.message &&\n                                                                                            response.message[0]\n                                                                                        ) {\n                                                                                            var lastComment =\n                                                                                                response.message[0];\n                                                                                            var lastCommentContent =\n                                                                                                lastComment.content;\n                                                                                            var tempElement =\n                                                                                                document.createElement(\"div\");\n                                                                                            tempElement.innerHTML =\n                                                                                                lastCommentContent;\n                                                                                            var extractedText =\n                                                                                                tempElement.querySelector(\n                                                                                                    \"a\"\n                                                                                                ).innerText;\n                                                                                            console.log(extractedText);\n                                                                                            spanElement.text(extractedText);\n                                                                                        }\n                                                                                    },\n                                                                                });\n                                                                                spanElement.appendTo(textElement);\n                                                                                textElement.appendTo(messagesDiv);\n                                                                            },\n                                                                            error: (r) => {\n                                                                                frappe.msgprint(\n                                                                                    \"something went wrong!\"\n                                                                                );\n                                                                            },\n                                                                        });\n\n                                                                        d1.hide();\n                                                                    },\n                                                                });\n\n                                                                const tableSection = $(\"<div>\").appendTo(\n                                                                    d1.body\n                                                                );\n\n                                                                function renderTable(data) {\n                                                                    tableSection.empty();\n\n                                                                    const table = $(\n                                                                        '<table class=\"table table-bordered\" id=\"tabledata\">'\n                                                                    ).appendTo(tableSection);\n                                                                    const thead = $(\"<thead>\").appendTo(table);\n                                                                    const tbody = $(\"<tbody>\").appendTo(table);\n\n                                                                    const headerRow = $(\"<tr>\").appendTo(thead);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Variable Name\")\n                                                                        .appendTo(headerRow);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Is Dynamic\")\n                                                                        .appendTo(headerRow);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Variable Value\")\n                                                                        .appendTo(headerRow);\n\n                                                                    data.forEach((row) => {\n                                                                        const variableName = row.variable_name;\n                                                                        const variableValue = row.variable_value;\n                                                                        const isDynamic = row.is_dynamic;\n                                                                        const doctypeField = row.doctype_field;\n\n                                                                        const rowElement =\n                                                                            $(\"<tr>\").appendTo(tbody);\n                                                                        $(\"<td>\")\n                                                                            .text(variableName)\n                                                                            .appendTo(rowElement);\n                                                                        const dynamicCheckbox = $(\n                                                                            '<input type=\"checkbox\">'\n                                                                        )\n                                                                            .prop(\"checked\", !!isDynamic)\n                                                                            .appendTo($(\"<td>\").appendTo(rowElement));\n                                                                        const variableValueInput =\n                                                                            $(\"<td>\").appendTo(rowElement);\n                                                                        if (isDynamic) {\n                                                                            const selectField = $(\"<select>\")\n                                                                                .css({ width: \"200px\", height: \"30px\" })\n                                                                                .appendTo(variableValueInput);\n\n                                                                            customerFields.forEach((field) => {\n                                                                                $(\"<option>\")\n                                                                                    .text(field.label)\n                                                                                    .val(field.fieldname)\n                                                                                    .appendTo(selectField);\n                                                                            });\n\n                                                                            selectField.val(doctypeField);\n                                                                        } else {\n                                                                            $('<input type=\"text\">')\n                                                                                .val(variableValue)\n                                                                                .css({ width: \"200px\", height: \"30px\" })\n                                                                                .appendTo(variableValueInput);\n                                                                        }\n\n                                                                        dynamicCheckbox.on(\"change\", function () {\n                                                                            const isChecked = $(this).is(\":checked\");\n                                                                            row.is_dynamic = isChecked ? 1 : 0;\n                                                                            if (isChecked) {\n                                                                                variableValueInput.empty();\n                                                                                const selectField = $(\"<select>\")\n                                                                                    .css({\n                                                                                        width: \"200px\",\n                                                                                        height: \"30px\",\n                                                                                    })\n                                                                                    .appendTo(variableValueInput);\n\n                                                                                customerFields.forEach((field) => {\n                                                                                    $(\"<option>\")\n                                                                                        .text(field.label)\n                                                                                        .val(field.fieldname)\n                                                                                        .appendTo(selectField);\n                                                                                });\n\n                                                                                selectField.val(doctypeField);\n                                                                                row.doctype_field = doctypeField;\n                                                                            } else {\n                                                                                variableValueInput.empty();\n                                                                                $('<input type=\"text\">')\n                                                                                    .val(row.variable_value)\n                                                                                    .css({\n                                                                                        width: \"200px\",\n                                                                                        height: \"30px\",\n                                                                                    })\n                                                                                    .appendTo(variableValueInput);\n                                                                                row.doctype_field = \"\";\n                                                                            }\n                                                                        });\n\n                                                                        variableValueInput.on(\n                                                                            \"change\",\n                                                                            function () {\n                                                                                const selectedValue = $(this).val();\n                                                                                if (isDynamic) {\n                                                                                    row.doctype_field = selectedValue;\n                                                                                } else {\n                                                                                    row.variable_value = selectedValue;\n                                                                                }\n                                                                            }\n                                                                        );\n                                                                    });\n                                                                }\n\n                                                                function getTableData() {\n                                                                    const table = tableSection.find(\"#tabledata\");\n                                                                    const data = [];\n\n                                                                    table\n                                                                        .find(\"tbody tr\")\n                                                                        .each((index, element) => {\n                                                                            const variableName = $(element)\n                                                                                .find(\"td:nth-child(1)\")\n                                                                                .text();\n                                                                            const isDynamic = $(element)\n                                                                                .find('input[type=\"checkbox\"]')\n                                                                                .is(\":checked\");\n                                                                            const doctypeField = $(element)\n                                                                                .find(\"select\")\n                                                                                .val();\n                                                                            const variableValueInput =\n                                                                                $(element).find('input[type=\"text\"]');\n                                                                            const variableValue = isDynamic\n                                                                                ? doctypeField\n                                                                                : variableValueInput.val();\n\n                                                                            data.push({\n                                                                                variable_name: variableName,\n                                                                                variable_value: variableValue,\n                                                                                is_dynamic: isDynamic ? 1 : 0,\n                                                                                doctype_field: doctypeField,\n                                                                            });\n                                                                        });\n\n                                                                    return data;\n                                                                }\n\n                                                                d1.show();\n                                                            }\n                                                        },\n                                                        error: (r) => {\n                                                            frappe.msgprint(\"something went wrong!\");\n                                                        },\n                                                    });\n                                                }\n                                            },\n                                            error: (r) => {\n                                                frappe.msgprint(\"something went wrong!\");\n                                            },\n                                        });\n                                        function extractDynamicVariables(templateSample) {\n                                            const regex = /{{([^{}]+)}}/g;\n                                            const matches = [];\n                                            let match;\n\n                                            while ((match = regex.exec(templateSample)) !== null) {\n                                                matches.push(match[1]);\n                                            }\n\n                                            return matches;\n                                        }\n                                    });\n                                    buttonElement.click(function () {\n                                        var message = inputElement.val();\n\n                                        if (message) {\n                                            var currentDateTime = frappe.datetime.now_datetime();\n                                            var formattedDateTime = moment(currentDateTime).format(\n                                                \"DD-MM-YYYY HH:mm:ss\"\n                                            );\n                                            frappe.call({\n                                                method:\n                                                    \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                args: {\n                                                    number: phone,\n                                                    message: message,\n                                                    current_date: formattedDateTime,\n                                                },\n                                                callback: function (response) {\n                                                    console.log(response.message);\n                                                    inputElement.val(\"\");\n\n                                                    var textElement = $(\"<p>\")\n                                                        .css(\"padding-right\", \"10px\")\n                                                        .css(\"padding-left\", \"120px\")\n                                                        .css(\"text-align\", \"right\");\n                                                    var spanElement = $(\"<div>\")\n                                                        .css(\"background-color\", \"#dcf8c6\")\n                                                        .css(\"padding\", \"10px\")\n                                                        .css(\"padding-bottom\", \"20px\")\n                                                        .css(\"border-radius\", \"10px\");\n\n                                                    spanElement.text(message);\n                                                    spanElement.appendTo(textElement);\n                                                    textElement.appendTo(messagesDiv);\n                                                },\n                                            });\n                                        }\n                                    });\n                                }\n\n\n\n                            }\n                        });\n                    }\n                );\n            }\n        }\n\n        function adjustContainerStyles() {\n            if (window.innerWidth < 499) {\n                container.css({\n                    width: \"80%\",\n                    right: \"10%\",\n                });\n            } else if (window.innerWidth >= 499 && window.innerWidth < 530) {\n                container.css({\n                    width: \"40%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 530 && window.innerWidth < 800) {\n                container.css({\n                    width: \"40%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 800 && window.innerWidth < 798) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 798 && window.innerWidth < 838) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 838 && window.innerWidth < 1300) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n                inputElement.css({\n                    width: \"40%\",\n                });\n            } else {\n                container.css({\n                    width: \"20%\",\n                    right: \"80px\",\n                    height: \"65%\",\n                });\n            }\n        }\n\n        $(window).resize(adjustContainerStyles);\n\n        adjustContainerStyles();\n    },\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-07-11 15:43:11.877394",
  "module": "Whatsapp App",
  "name": "Supplier chat box",
  "script": "frappe.ui.form.on(\"Supplier\", {\n    refresh(frm) {\n        var f_name = cur_frm.doc.name_of_suppier;\n\n        var container = $('<div class=\"custom-container\">').appendTo(frm.wrapper);\n\n        container.css({\n            width: \"30%\",\n            height: \"65%\",\n            backgroundColor: \"#ece5dd\",\n            position: \"fixed\",\n            top: \"50%\",\n            right: \"80px\",\n            transform: \"translateY(-50%)\",\n            borderRadius: \"5px\",\n            boxShadow: \"0 0 5px rgba(0, 0, 0, 0.4)\",\n            zIndex: 9999,\n            display: \"none\",\n        });\n\n        var headingDiv = $(\"<div>\")\n            .css(\"background-color\", \"#128c7e\")\n            .appendTo(container);\n\n        var closeButtonElement = $(\"<button>\")\n            .css(\"float\", \"right\")\n            .appendTo(headingDiv);\n\n        var closeIconElement = $(\"<i>\")\n            .addClass(\"fa fa-close\")\n            .css(\"font-size\", \"30px\");\n\n        closeButtonElement.prepend(closeIconElement);\n\n        closeButtonElement.css({\n            float: \"right\",\n            backgroundColor: \"#128c7e\",\n            marginRight: \"10px\",\n            marginTop: \"10px\",\n            color: \"#FFF\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n        var heading = $(\"<h3>\")\n            .css(\"padding-left\", \"10px\")\n            .css(\"color\", \"white\")\n            .css(\"margin-bottom\", \"0px\")\n            .css(\"background-color\", \"#128c7e\")\n            .css(\"padding-top\", \"15px\")\n            .css(\"padding-bottom\", \"15px\")\n            .text(f_name)\n            .appendTo(headingDiv);\n\n        var messagesDiv = $(\"<div>\")\n            .css(\"overflow-y\", \"scroll\")\n            .css(\"background-color\", \"#ece5dd\")\n            .css(\"height\", \"83%\")\n            .appendTo(container);\n\n        var statusElement;\n        var expiredMessageAdded = false;\n\n        var allElement = $(\"<div>\")\n            .css(\"height\", \"40px\")\n            .css(\"padding-top\", \"5px\")\n            .css(\"background-color\", \"#ece5dd\")\n            .css(\"display\", \"flex\")\n            .css(\"flex-direction\", \"row\")\n            .appendTo(container);\n\n\n        var buttonElement1 = $(\"<button>\").text(\"Template\");\n\n        buttonElement1.css({\n            height: \"25px\",\n            backgroundColor: \"#128c7e\",\n            marginLeft: \"5px\",\n            marginTop: \"4px\",\n            color: \"#FFF\",\n            padding: \"2px 4px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n        var inputElement = $(\"<input>\")\n            .attr(\"type\", \"text\")\n            .attr(\"placeholder\", \" Type a message...\");\n\n        inputElement.css({\n            marginLeft: \"5px\",\n            marginRight: \"5px\",\n            border: \"none\",\n            marginTop: \"5px\",\n            height: \"25px\",\n            borderRadius: \"4px\",\n            width: \"auto\",\n            flex: \"1\"\n        });\n\n        var buttonElement = $(\"<button>\");\n\n        var iconElement = $(\"<i>\")\n            .addClass(\"fa fa-paper-plane\");\n\n        buttonElement.prepend(iconElement);\n\n        buttonElement.css({\n            height: \"30px\",\n            backgroundColor: \"#128c7e\",\n            marginTop: \"2px\",\n            marginRight: \"10px\",\n            color: \"#FFF\",\n            padding: \"4px 8px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n\n        var showButtonClicked = true;\n\n        var currentUserRoles = frappe.user_roles;\n        var isAdmin = currentUserRoles.includes(\"Administrator\");\n\n        var hasRequiredRole =\n            !isAdmin &&\n            (currentUserRoles.includes(\"Vendor\") ||\n                currentUserRoles.includes(\"Customer\") ||\n                currentUserRoles.includes(\"Driver\"));\n\n        if (!hasRequiredRole || isAdmin) {\n            if (frm.doc.whatsapp_no) {\n                frm.add_custom_button(\n                    '<i class=\"fa fa-whatsapp\" aria-hidden=\"true\" style=\"font-size:24px;color:#25d366\" ></i>',\n                    function () {\n                        // var doctype = cur_frm.doctype;\n                        var phone = cur_frm.doc.whatsapp_no;\n                        var availableLog;\n                        frappe.call({\n                            method: \"frappe.client.get_list\",\n                            args: {\n                                doctype: \"wati call message log\",\n                                filters: {\n                                    name: phone,\n                                },\n                                fields: [\"name\"]\n                            },\n                            callback: function (response) {\n\n                                var message = response.message;\n                                var doctype = cur_frm.doctype;\n                                if (message && message.length > 0) {\n                                    var ans = message[0];\n                                    var ans_name = ans.name;\n\n\n                                    frappe.call({\n                                        method:\n                                            \"whatsapp_app.whatsapp_app.doctype.api.get_template_sample\",\n                                        args: {\n                                            phone: phone,\n                                        },\n                                        async: false,\n                                        callback: function (response) { },\n                                    });\n                                    frappe.call({\n                                        method: \"whatsapp_app.whatsapp_app.doctype.api.get_img\",\n                                        args: {\n                                            phone: phone,\n                                        },\n                                        async: false,\n                                        callback: function (response) { },\n                                    });\n                                    frappe.call({\n                                        method: \"frappe.client.get_list\",\n                                        args: {\n                                            doctype: \"wati call message log\",\n                                            filters: {\n                                                name: phone,\n                                            },\n                                            fields: [\"name\", \"data\"],\n                                        },\n                                        callback: function (response) {\n                                            if (response.message) {\n                                                var dataObj = response.message;\n                                                if (dataObj && dataObj.length > 0) {\n                                                    var dataValue = dataObj[0].data;\n\n                                                    var parsedData = JSON.parse(dataValue);\n                                                    var result = parsedData.data;\n\n                                                    var desiredDictionaries = [];\n                                                    var tempName;\n                                                    var tempImg;\n\n                                                    for (var i = 0; i < result.length; i++) {\n                                                        var dictionary = result[i];\n\n                                                        if (\n                                                            dictionary.message &&\n                                                            dictionary.message.hasOwnProperty(\"isOwner\")\n                                                        ) {\n                                                            desiredDictionaries.push(dictionary.message);\n                                                        } else if (\n                                                            dictionary.hasOwnProperty(\"owner\") &&\n                                                            !dictionary.owner\n                                                        ) {\n                                                            desiredDictionaries.push(dictionary);\n                                                        } else if (\n                                                            dictionary.hasOwnProperty(\"modified_sample\")\n                                                        ) {\n                                                            tempName = dictionary.modified_sample;\n\n                                                            var timedate = dictionary.send_time;\n                                                            tempImg = dictionary.templateImg;\n\n                                                            frappe.call({\n                                                                method:\n                                                                    \"whatsapp_app.whatsapp_app.doctype.api.get_image\",\n                                                                args: {\n                                                                    filename: tempImg,\n                                                                },\n                                                                async: false,\n                                                                callback: function (response) { },\n                                                            });\n\n                                                            desiredDictionaries.push({\n                                                                tempName: tempName,\n                                                                timedate: timedate,\n                                                                tempImg: tempImg,\n                                                            });\n                                                        }\n                                                    }\n\n                                                    var texts = desiredDictionaries.map(function (\n                                                        dictionary\n                                                    ) {\n                                                        if (\n                                                            typeof dictionary === \"object\" &&\n                                                            dictionary.hasOwnProperty(\"text\")\n                                                        ) {\n                                                            var text = dictionary.text;\n                                                        } else if (\n                                                            typeof dictionary === \"object\" &&\n                                                            dictionary.hasOwnProperty(\"tempName\") &&\n                                                            dictionary.hasOwnProperty(\"timedate\") &&\n                                                            dictionary.hasOwnProperty(\"tempImg\")\n                                                        ) {\n                                                        } else {\n                                                            return dictionary;\n                                                        }\n                                                    });\n\n                                                    container.empty();\n                                                    headingDiv.appendTo(container);\n                                                    messagesDiv.appendTo(container);\n\n                                                    messagesDiv.empty();\n\n                                                    allElement.appendTo(container);\n\n                                                    for (var j = 0; j < texts.length; j++) {\n                                                        var text = texts[j];\n                                                        var created = \"\";\n\n                                                        if (desiredDictionaries[j].hasOwnProperty(\"text\")) {\n                                                            text = desiredDictionaries[j].text;\n                                                            if (\n                                                                desiredDictionaries[j].hasOwnProperty(\"created\")\n                                                            ) {\n                                                                var datetimeString = desiredDictionaries[j].created;\n                                                                var dateObj = new Date(datetimeString);\n\n                                                                var day = dateObj.getUTCDate();\n                                                                var month = dateObj.getUTCMonth() + 1;\n                                                                var year = dateObj.getUTCFullYear();\n\n                                                                var hours = dateObj.getUTCHours();\n                                                                var minutes = dateObj.getUTCMinutes();\n                                                                var seconds = dateObj.getUTCSeconds();\n\n                                                                if (day < 10) {\n                                                                    day = \"0\" + day;\n                                                                }\n                                                                if (month < 10) {\n                                                                    month = \"0\" + month;\n                                                                }\n                                                                if (hours < 10) {\n                                                                    hours = \"0\" + hours;\n                                                                }\n                                                                if (minutes < 10) {\n                                                                    minutes = \"0\" + minutes;\n                                                                }\n                                                                if (seconds < 10) {\n                                                                    seconds = \"0\" + seconds;\n                                                                }\n\n                                                                created =\n                                                                    day +\n                                                                    \"-\" +\n                                                                    month +\n                                                                    \"-\" +\n                                                                    year +\n                                                                    \" \" +\n                                                                    hours +\n                                                                    \":\" +\n                                                                    minutes +\n                                                                    \":\" +\n                                                                    seconds;\n                                                            }\n                                                        }\n\n                                                        var textElement = $(\"<p>\")\n                                                            .css(\n                                                                \"padding-right\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"100px\"\n                                                                    : \"10px\"\n                                                            )\n                                                            .css(\n                                                                \"padding-left\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"10px\"\n                                                                    : \"100px\"\n                                                            )\n                                                            .css(\n                                                                \"text-align\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"left\"\n                                                                    : \"right\"\n                                                            )\n                                                            .appendTo(messagesDiv);\n\n                                                        var textContent = $(\"<div>\")\n                                                            .css(\n                                                                \"background-color\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"#fff\"\n                                                                    : \"#dcf8c6\"\n                                                            )\n                                                            .css(\"padding\", \"10px\")\n                                                            .css(\"padding-bottom\", \"20px\")\n                                                            .css(\"border-radius\", \"10px\")\n                                                            .text(text)\n                                                            .appendTo(textElement);\n\n                                                        if (desiredDictionaries[j].tempImg) {\n                                                            var tempImgElement = $(\"<img>\")\n                                                                .attr(\n                                                                    \"src\",\n                                                                    \"https://migoostage.frappe.cloud/files/\" +\n                                                                    desiredDictionaries[j].tempImg\n                                                                )\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var tempNameElement = $(\"<p>\")\n                                                            .text(desiredDictionaries[j].tempName)\n                                                            .appendTo(textContent);\n\n                                                        var timedateElement = $(\"<p>\")\n                                                            .text(desiredDictionaries[j].timedate)\n                                                            .css(\"color\", \"#808080\")\n                                                            .css(\"font-size\", \"12px\")\n                                                            .appendTo(textContent);\n\n                                                        if (created !== \"\") {\n                                                            var createdElement = $(\"<div>\")\n                                                                .text(created)\n                                                                .css(\"color\", \"#808080\")\n                                                                .css(\"font-size\", \"12px\")\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var imageSrc = \"/files/icons8-done-30.png\";\n\n                                                        if (desiredDictionaries[j].owner !== false) {\n                                                            var imageElement = $(\"<img>\")\n                                                                .attr(\"src\", imageSrc)\n                                                                .css(\"width\", \"20px\")\n                                                                .css(\"float\", \"right\")\n                                                                .attr(\"class\", \"img1\")\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var b_tick;\n                                                        frappe.call({\n                                                            method: \"frappe.client.get_list\",\n                                                            args: {\n                                                                doctype: \"wati call message log\",\n                                                                filters: {\n                                                                    name: phone,\n                                                                    client_read: 1,\n                                                                },\n                                                                fields: [\"name\"],\n                                                            },\n                                                            callback: function (response) {\n                                                                b_tick = response.message[0].name;\n\n                                                                if (b_tick) {\n                                                                    imageSrc = \"/files/icons8-double-tick-50.png\";\n                                                                    $(\".img1\").attr(\"src\", imageSrc);\n                                                                }\n                                                            },\n                                                        });\n                                                    }\n\n                                                    setTimeout(function () {\n                                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                                    }, 0);\n                                                }\n\n                                                closeButtonElement.on(\"click\", function () {\n                                                    container.hide();\n                                                });\n\n                                                if (showButtonClicked) {\n                                                    container.show();\n                                                    showButtonClicked = true;\n                                                }\n                                            }\n\n                                            frappe.call({\n                                                method:\n                                                    \"whatsapp_app.whatsapp_app.doctype.api.check_status\",\n                                                args: {\n                                                    number: phone,\n                                                },\n                                                callback: function (response) {\n                                                    if (response.message === \"yes\") {\n                                                        buttonElement1.appendTo(allElement);\n                                                        inputElement.appendTo(allElement);\n                                                        buttonElement.appendTo(allElement);\n                                                    } else {\n                                                        if (!expiredMessageAdded) {\n                                                            statusElement = $(\"<p>\")\n                                                                .css(\"color\", \"black\")\n                                                                .css(\"margin-top\", \"5px\")\n                                                                .css(\"width\", \"100%\")\n                                                                .css(\"text-align\", \"center\")\n                                                                .text(\"The chat has been expired\")\n                                                                .appendTo(allElement);\n                                        \n                                                            expiredMessageAdded = true; \n                                                        }\n                                                        buttonElement1.prependTo(allElement);\n                                                        buttonElement.appendTo(allElement);\n                                                    }\n                                                },\n                                            });\n\n                                            buttonElement1.click(function () {\n                                                var names = cur_frm.doc.name;\n                                                frappe.call({\n                                                    method:\n                                                        \"whatsapp_app.whatsapp_app.doctype.api.get_template_list\",\n                                                    args: {\n                                                        doctype: doctype,\n                                                    },\n                                                    callback: (r) => {\n                                                        if (r.message) {\n                                                            const template = r.message;\n\n                                                            frappe.call({\n                                                                method: \"frappe.client.get_list\",\n                                                                args: {\n                                                                    doctype: \"Templates\",\n                                                                    filters: {\n                                                                        name: [\"in\", template],\n                                                                    },\n                                                                    fields: [\"name\", \"status\", \"sample\"],\n                                                                    limit_start: 0,\n                                                                    limit_page_length: 0,\n                                                                },\n\n                                                                callback: function (response) {\n                                                                    if (response.message) {\n                                                                        const templateData = response.message;\n                                                                        const customerDoctype = doctype;\n                                                                        const customerFields = frappe\n                                                                            .get_meta(customerDoctype)\n                                                                            .fields.filter((field) => {\n                                                                                return (\n                                                                                    field.fieldtype !== \"Column Break\" &&\n                                                                                    field.fieldtype !== \"Section Break\"\n                                                                                );\n                                                                            })\n                                                                            .map((field) => {\n                                                                                return {\n                                                                                    fieldname: field.fieldname,\n                                                                                    label: field.label,\n                                                                                };\n                                                                            });\n\n                                                                        const customerFieldLabels = customerFields.map(\n                                                                            (fieldname) => {\n                                                                                const fieldMeta = frappe\n                                                                                    .get_meta(doctype)\n                                                                                    .fields.find(\n                                                                                        (field) => field.fieldname === fieldname\n                                                                                    );\n                                                                                return fieldMeta\n                                                                                    ? fieldMeta.label\n                                                                                    : fieldname;\n                                                                            }\n                                                                        );\n\n                                                                        const d1 = new frappe.ui.Dialog({\n                                                                            title: \"Send Message\",\n                                                                            fields: [\n                                                                                {\n                                                                                    label: \"Select Template\",\n                                                                                    fieldname: \"select_template\",\n                                                                                    fieldtype: \"Select\",\n                                                                                    options: template,\n                                                                                    onchange: function () {\n                                                                                        const selectedValue = this.get_value();\n                                                                                        const previousValue = this.last_value;\n                                                                                        if (\n                                                                                            selectedValue &&\n                                                                                            selectedValue !== previousValue\n                                                                                        ) {\n                                                                                            this.last_value = selectedValue;\n                                                                                            const selectedTemplateData =\n                                                                                                templateData.find(\n                                                                                                    (template) =>\n                                                                                                        template.name === selectedValue\n                                                                                                );\n                                                                                            if (selectedTemplateData) {\n                                                                                                const dynamicVariables =\n                                                                                                    extractDynamicVariables(\n                                                                                                        selectedTemplateData.sample\n                                                                                                    );\n\n                                                                                                const variableData =\n                                                                                                    dynamicVariables.map(\n                                                                                                        (variable) => ({\n                                                                                                            variable_name: variable,\n                                                                                                            variable_value: \"\",\n                                                                                                            is_dynamic: 0,\n                                                                                                            doctype_field: \"\",\n                                                                                                        })\n                                                                                                    );\n\n                                                                                                renderTable(variableData);\n                                                                                            }\n                                                                                        }\n                                                                                    },\n                                                                                },\n                                                                            ],\n                                                                            primary_action_label: \"Send\",\n\n                                                                            primary_action(values) {\n                                                                                const tableData = getTableData();\n                                                                                const dataList = tableData.map((row) => ({\n                                                                                    name: row.variable_name,\n                                                                                    is_dynamic: row.is_dynamic ? 1 : 0,\n                                                                                    value: row.is_dynamic\n                                                                                        ? row.doctype_field\n                                                                                        : row.variable_value,\n                                                                                }));\n\n                                                                                const hasEmptyValue = dataList.some(\n                                                                                    (row) => !row.value\n                                                                                );\n                                                                                if (hasEmptyValue) {\n                                                                                    frappe.msgprint(\n                                                                                        \"Please fill in all the Variable Value fields.\"\n                                                                                    );\n                                                                                    return;\n                                                                                }\n\n                                                                                var currentDateTime =\n                                                                                    frappe.datetime.now_datetime();\n                                                                                var formattedDateTime = moment(\n                                                                                    currentDateTime\n                                                                                ).format(\"DD-MM-YYYY HH:mm:ss\");\n\n                                                                                console.log(formattedDateTime);\n\n                                                                                frappe.call({\n                                                                                    method:\n                                                                                        \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                                                    args: {\n                                                                                        template_name:\n                                                                                            values[\"select_template\"],\n                                                                                        doctype: doctype,\n                                                                                        name: names,\n                                                                                        data: dataList,\n                                                                                        current_date: formattedDateTime,\n                                                                                        number: phone,\n                                                                                    },\n                                                                                    freeze: true,\n                                                                                    callback: (r) => {\n                                                                                        var textElement = $(\"<p>\")\n                                                                                            .css(\"padding-right\", \"10px\")\n                                                                                            .css(\"padding-left\", \"120px\")\n                                                                                            .css(\"text-align\", \"right\");\n                                                                                        var spanElement = $(\"<div>\")\n                                                                                            .css(\"background-color\", \"#dcf8c6\")\n                                                                                            .css(\"padding\", \"10px\")\n                                                                                            .css(\"padding-bottom\", \"20px\")\n                                                                                            .css(\"border-radius\", \"10px\");\n\n                                                                                        frappe.call({\n                                                                                            method: \"frappe.client.get_list\",\n                                                                                            args: {\n                                                                                                doctype: \"Comment\",\n\n                                                                                                fields: [\"name\", \"content\"],\n                                                                                                limit: 1,\n                                                                                                order_by: \"creation desc\",\n                                                                                            },\n                                                                                            callback: function (response) {\n                                                                                                console.log(response);\n                                                                                                if (\n                                                                                                    response &&\n                                                                                                    response.message &&\n                                                                                                    response.message[0]\n                                                                                                ) {\n                                                                                                    var lastComment =\n                                                                                                        response.message[0];\n                                                                                                    var lastCommentContent =\n                                                                                                        lastComment.content;\n                                                                                                    var tempElement =\n                                                                                                        document.createElement(\"div\");\n                                                                                                    tempElement.innerHTML =\n                                                                                                        lastCommentContent;\n                                                                                                    var extractedText =\n                                                                                                        tempElement.querySelector(\n                                                                                                            \"a\"\n                                                                                                        ).innerText;\n                                                                                                    console.log(extractedText);\n                                                                                                    spanElement.text(extractedText);\n                                                                                                }\n                                                                                            },\n                                                                                        });\n                                                                                        spanElement.appendTo(textElement);\n                                                                                        textElement.appendTo(messagesDiv);\n                                                                                    },\n                                                                                    error: (r) => {\n                                                                                        frappe.msgprint(\n                                                                                            \"something went wrong!\"\n                                                                                        );\n                                                                                    },\n                                                                                });\n\n                                                                                d1.hide();\n                                                                            },\n                                                                        });\n\n                                                                        const tableSection = $(\"<div>\").appendTo(\n                                                                            d1.body\n                                                                        );\n\n                                                                        function renderTable(data) {\n                                                                            tableSection.empty();\n\n                                                                            const table = $(\n                                                                                '<table class=\"table table-bordered\" id=\"tabledata\">'\n                                                                            ).appendTo(tableSection);\n                                                                            const thead = $(\"<thead>\").appendTo(table);\n                                                                            const tbody = $(\"<tbody>\").appendTo(table);\n\n                                                                            const headerRow = $(\"<tr>\").appendTo(thead);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Variable Name\")\n                                                                                .appendTo(headerRow);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Is Dynamic\")\n                                                                                .appendTo(headerRow);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Variable Value\")\n                                                                                .appendTo(headerRow);\n\n                                                                            data.forEach((row) => {\n                                                                                const variableName = row.variable_name;\n                                                                                const variableValue = row.variable_value;\n                                                                                const isDynamic = row.is_dynamic;\n                                                                                const doctypeField = row.doctype_field;\n\n                                                                                const rowElement =\n                                                                                    $(\"<tr>\").appendTo(tbody);\n                                                                                $(\"<td>\")\n                                                                                    .text(variableName)\n                                                                                    .appendTo(rowElement);\n                                                                                const dynamicCheckbox = $(\n                                                                                    '<input type=\"checkbox\">'\n                                                                                )\n                                                                                    .prop(\"checked\", !!isDynamic)\n                                                                                    .appendTo($(\"<td>\").appendTo(rowElement));\n                                                                                const variableValueInput =\n                                                                                    $(\"<td>\").appendTo(rowElement);\n                                                                                if (isDynamic) {\n                                                                                    const selectField = $(\"<select>\")\n                                                                                        .css({ width: \"200px\", height: \"30px\" })\n                                                                                        .appendTo(variableValueInput);\n\n                                                                                    customerFields.forEach((field) => {\n                                                                                        $(\"<option>\")\n                                                                                            .text(field.label)\n                                                                                            .val(field.fieldname)\n                                                                                            .appendTo(selectField);\n                                                                                    });\n\n                                                                                    selectField.val(doctypeField);\n                                                                                } else {\n                                                                                    $('<input type=\"text\">')\n                                                                                        .val(variableValue)\n                                                                                        .css({ width: \"200px\", height: \"30px\" })\n                                                                                        .appendTo(variableValueInput);\n                                                                                }\n\n                                                                                dynamicCheckbox.on(\"change\", function () {\n                                                                                    const isChecked = $(this).is(\":checked\");\n                                                                                    row.is_dynamic = isChecked ? 1 : 0;\n                                                                                    if (isChecked) {\n                                                                                        variableValueInput.empty();\n                                                                                        const selectField = $(\"<select>\")\n                                                                                            .css({\n                                                                                                width: \"200px\",\n                                                                                                height: \"30px\",\n                                                                                            })\n                                                                                            .appendTo(variableValueInput);\n\n                                                                                        customerFields.forEach((field) => {\n                                                                                            $(\"<option>\")\n                                                                                                .text(field.label)\n                                                                                                .val(field.fieldname)\n                                                                                                .appendTo(selectField);\n                                                                                        });\n\n                                                                                        selectField.val(doctypeField);\n                                                                                        row.doctype_field = doctypeField;\n                                                                                    } else {\n                                                                                        variableValueInput.empty();\n                                                                                        $('<input type=\"text\">')\n                                                                                            .val(row.variable_value)\n                                                                                            .css({\n                                                                                                width: \"200px\",\n                                                                                                height: \"30px\",\n                                                                                            })\n                                                                                            .appendTo(variableValueInput);\n                                                                                        row.doctype_field = \"\";\n                                                                                    }\n                                                                                });\n\n                                                                                variableValueInput.on(\n                                                                                    \"change\",\n                                                                                    function () {\n                                                                                        const selectedValue = $(this).val();\n                                                                                        if (isDynamic) {\n                                                                                            row.doctype_field = selectedValue;\n                                                                                        } else {\n                                                                                            row.variable_value = selectedValue;\n                                                                                        }\n                                                                                    }\n                                                                                );\n                                                                            });\n                                                                        }\n\n                                                                        function getTableData() {\n                                                                            const table = tableSection.find(\"#tabledata\");\n                                                                            const data = [];\n\n                                                                            table\n                                                                                .find(\"tbody tr\")\n                                                                                .each((index, element) => {\n                                                                                    const variableName = $(element)\n                                                                                        .find(\"td:nth-child(1)\")\n                                                                                        .text();\n                                                                                    const isDynamic = $(element)\n                                                                                        .find('input[type=\"checkbox\"]')\n                                                                                        .is(\":checked\");\n                                                                                    const doctypeField = $(element)\n                                                                                        .find(\"select\")\n                                                                                        .val();\n                                                                                    const variableValueInput =\n                                                                                        $(element).find('input[type=\"text\"]');\n                                                                                    const variableValue = isDynamic\n                                                                                        ? doctypeField\n                                                                                        : variableValueInput.val();\n\n                                                                                    data.push({\n                                                                                        variable_name: variableName,\n                                                                                        variable_value: variableValue,\n                                                                                        is_dynamic: isDynamic ? 1 : 0,\n                                                                                        doctype_field: doctypeField,\n                                                                                    });\n                                                                                });\n\n                                                                            return data;\n                                                                        }\n\n                                                                        d1.show();\n                                                                    }\n                                                                },\n                                                                error: (r) => {\n                                                                    frappe.msgprint(\"something went wrong!\");\n                                                                },\n                                                            });\n                                                        }\n                                                    },\n                                                    error: (r) => {\n                                                        frappe.msgprint(\"something went wrong!\");\n                                                    },\n                                                });\n                                                function extractDynamicVariables(templateSample) {\n                                                    const regex = /{{([^{}]+)}}/g;\n                                                    const matches = [];\n                                                    let match;\n\n                                                    while ((match = regex.exec(templateSample)) !== null) {\n                                                        matches.push(match[1]);\n                                                    }\n\n                                                    return matches;\n                                                }\n                                            });\n\n                                            buttonElement.click(function () {\n                                                var message = inputElement.val();\n\n                                                if (message) {\n                                                    var currentDateTime = frappe.datetime.now_datetime();\n                                                    var formattedDateTime = moment(currentDateTime).format(\n                                                        \"DD-MM-YYYY HH:mm:ss\"\n                                                    );\n                                                    frappe.call({\n                                                        method:\n                                                            \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                        args: {\n                                                            number: phone,\n                                                            message: message,\n                                                            current_date: formattedDateTime,\n                                                        },\n                                                        callback: function (response) {\n                                                            console.log(response.message);\n                                                            inputElement.val(\"\");\n\n                                                            var textElement = $(\"<p>\")\n                                                                .css(\"padding-right\", \"10px\")\n                                                                .css(\"padding-left\", \"120px\")\n                                                                .css(\"text-align\", \"right\");\n                                                            var spanElement = $(\"<div>\")\n                                                                .css(\"background-color\", \"#dcf8c6\")\n                                                                .css(\"padding\", \"10px\")\n                                                                .css(\"padding-bottom\", \"20px\")\n                                                                .css(\"border-radius\", \"10px\");\n\n                                                            spanElement.text(message);\n                                                            spanElement.appendTo(textElement);\n                                                            textElement.appendTo(messagesDiv);\n                                                        },\n                                                    });\n                                                }\n                                            });\n                                        },\n                                    });\n\n\n\n                                } else {\n\n                                    container.empty();\n                                    headingDiv.appendTo(container);\n                                    messagesDiv.appendTo(container);\n\n                                    messagesDiv.empty();\n                                    allElement.appendTo(container);\n\n                                    setTimeout(function () {\n                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    }, 0);\n\n                                    closeButtonElement.on(\"click\", function () {\n                                        container.hide();\n                                    });\n\n                                    if (showButtonClicked) {\n                                        container.show();\n                                        showButtonClicked = true;\n                                    }\n\n\n                                    frappe.call({\n                                        method:\n                                            \"whatsapp_app.whatsapp_app.doctype.api.check_status\",\n                                        args: {\n                                            number: phone,\n                                        },\n                                        callback: function (response) {\n                                            if (response.message === \"yes\") {\n                                                buttonElement1.appendTo(allElement);\n                                                inputElement.appendTo(allElement);\n                                                buttonElement.appendTo(allElement);\n                                            } else {\n                                                if (!expiredMessageAdded) {\n                                                    statusElement = $(\"<p>\")\n                                                        .css(\"color\", \"black\")\n                                                        .css(\"margin-top\", \"5px\")\n                                                        .css(\"width\", \"100%\")\n                                                        .css(\"text-align\", \"center\")\n                                                        .text(\"The chat has been expired\")\n                                                        .appendTo(allElement);\n                                \n                                                    expiredMessageAdded = true; \n                                                }\n                                                buttonElement1.prependTo(allElement);\n                                                buttonElement.appendTo(allElement);\n                                            }\n                                        },\n                                    });\n\n                                    buttonElement1.click(function () {\n                                        \n                                        container.children().css('opacity', '0.6');\n                                        \n                                        var names = cur_frm.doc.name;\n                                        frappe.call({\n                                            method:\n                                                \"whatsapp_app.whatsapp_app.doctype.api.get_template_list\",\n                                            args: {\n                                                doctype: doctype,\n                                            },\n                                            callback: (r) => {\n                                                if (r.message) {\n                                                    const template = r.message;\n\n                                                    frappe.call({\n                                                        method: \"frappe.client.get_list\",\n                                                        args: {\n                                                            doctype: \"Templates\",\n                                                            filters: {\n                                                                name: [\"in\", template],\n                                                            },\n                                                            fields: [\"name\", \"status\", \"sample\"],\n                                                            limit_start: 0,\n                                                            limit_page_length: 0,\n                                                        },\n\n                                                        callback: function (response) {\n                                                            if (response.message) {\n                                                                const templateData = response.message;\n                                                                const customerDoctype = doctype;\n                                                                const customerFields = frappe\n                                                                    .get_meta(customerDoctype)\n                                                                    .fields.filter((field) => {\n                                                                        return (\n                                                                            field.fieldtype !== \"Column Break\" &&\n                                                                            field.fieldtype !== \"Section Break\"\n                                                                        );\n                                                                    })\n                                                                    .map((field) => {\n                                                                        return {\n                                                                            fieldname: field.fieldname,\n                                                                            label: field.label,\n                                                                        };\n                                                                    });\n\n                                                                const customerFieldLabels = customerFields.map(\n                                                                    (fieldname) => {\n                                                                        const fieldMeta = frappe\n                                                                            .get_meta(doctype)\n                                                                            .fields.find(\n                                                                                (field) => field.fieldname === fieldname\n                                                                            );\n                                                                        return fieldMeta\n                                                                            ? fieldMeta.label\n                                                                            : fieldname;\n                                                                    }\n                                                                );\n\n                                                                const d1 = new frappe.ui.Dialog({\n                                                                    title: \"Send Message\",\n                                                                    fields: [\n                                                                        {\n                                                                            label: \"Select Template\",\n                                                                            fieldname: \"select_template\",\n                                                                            fieldtype: \"Select\",\n                                                                            options: template,\n                                                                            onchange: function () {\n                                                                                const selectedValue = this.get_value();\n                                                                                const previousValue = this.last_value;\n                                                                                if (\n                                                                                    selectedValue &&\n                                                                                    selectedValue !== previousValue\n                                                                                ) {\n                                                                                    this.last_value = selectedValue;\n                                                                                    const selectedTemplateData =\n                                                                                        templateData.find(\n                                                                                            (template) =>\n                                                                                                template.name === selectedValue\n                                                                                        );\n                                                                                    if (selectedTemplateData) {\n                                                                                        const dynamicVariables =\n                                                                                            extractDynamicVariables(\n                                                                                                selectedTemplateData.sample\n                                                                                            );\n\n                                                                                        const variableData =\n                                                                                            dynamicVariables.map(\n                                                                                                (variable) => ({\n                                                                                                    variable_name: variable,\n                                                                                                    variable_value: \"\",\n                                                                                                    is_dynamic: 0,\n                                                                                                    doctype_field: \"\",\n                                                                                                })\n                                                                                            );\n\n                                                                                        renderTable(variableData);\n                                                                                    }\n                                                                                }\n                                                                            },\n                                                                        },\n                                                                    ],\n                                                                    primary_action_label: \"Send\",\n\n                                                                    primary_action(values) {\n                                                                        const tableData = getTableData();\n                                                                        const dataList = tableData.map((row) => ({\n                                                                            name: row.variable_name,\n                                                                            is_dynamic: row.is_dynamic ? 1 : 0,\n                                                                            value: row.is_dynamic\n                                                                                ? row.doctype_field\n                                                                                : row.variable_value,\n                                                                        }));\n\n                                                                        const hasEmptyValue = dataList.some(\n                                                                            (row) => !row.value\n                                                                        );\n                                                                        if (hasEmptyValue) {\n                                                                            frappe.msgprint(\n                                                                                \"Please fill in all the Variable Value fields.\"\n                                                                            );\n                                                                            return;\n                                                                        }\n\n                                                                        var currentDateTime =\n                                                                            frappe.datetime.now_datetime();\n                                                                        var formattedDateTime = moment(\n                                                                            currentDateTime\n                                                                        ).format(\"DD-MM-YYYY HH:mm:ss\");\n\n                                                                        console.log(formattedDateTime);\n\n                                                                        frappe.call({\n                                                                            method:\n                                                                                \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                                            args: {\n                                                                                template_name:\n                                                                                    values[\"select_template\"],\n                                                                                doctype: doctype,\n                                                                                name: names,\n                                                                                data: dataList,\n                                                                                current_date: formattedDateTime,\n                                                                                number: phone,\n                                                                            },\n                                                                            freeze: true,\n                                                                            callback: (r) => {\n                                                                                var textElement = $(\"<p>\")\n                                                                                    .css(\"padding-right\", \"10px\")\n                                                                                    .css(\"padding-left\", \"120px\")\n                                                                                    .css(\"text-align\", \"right\");\n                                                                                var spanElement = $(\"<div>\")\n                                                                                    .css(\"background-color\", \"#dcf8c6\")\n                                                                                    .css(\"padding\", \"10px\")\n                                                                                    .css(\"padding-bottom\", \"20px\")\n                                                                                    .css(\"border-radius\", \"10px\");\n\n                                                                                frappe.call({\n                                                                                    method: \"frappe.client.get_list\",\n                                                                                    args: {\n                                                                                        doctype: \"Comment\",\n\n                                                                                        fields: [\"name\", \"content\"],\n                                                                                        limit: 1,\n                                                                                        order_by: \"creation desc\",\n                                                                                    },\n                                                                                    callback: function (response) {\n                                                                                        console.log(response);\n                                                                                        if (\n                                                                                            response &&\n                                                                                            response.message &&\n                                                                                            response.message[0]\n                                                                                        ) {\n                                                                                            var lastComment =\n                                                                                                response.message[0];\n                                                                                            var lastCommentContent =\n                                                                                                lastComment.content;\n                                                                                            var tempElement =\n                                                                                                document.createElement(\"div\");\n                                                                                            tempElement.innerHTML =\n                                                                                                lastCommentContent;\n                                                                                            var extractedText =\n                                                                                                tempElement.querySelector(\n                                                                                                    \"a\"\n                                                                                                ).innerText;\n                                                                                            console.log(extractedText);\n                                                                                            spanElement.text(extractedText);\n                                                                                        }\n                                                                                    },\n                                                                                });\n                                                                                spanElement.appendTo(textElement);\n                                                                                textElement.appendTo(messagesDiv);\n                                                                            },\n                                                                            error: (r) => {\n                                                                                frappe.msgprint(\n                                                                                    \"something went wrong!\"\n                                                                                );\n                                                                            },\n                                                                        });\n\n                                                                        d1.hide();\n                                                                    },\n                                                                });\n\n                                                                const tableSection = $(\"<div>\").appendTo(\n                                                                    d1.body\n                                                                );\n\n                                                                function renderTable(data) {\n                                                                    tableSection.empty();\n\n                                                                    const table = $(\n                                                                        '<table class=\"table table-bordered\" id=\"tabledata\">'\n                                                                    ).appendTo(tableSection);\n                                                                    const thead = $(\"<thead>\").appendTo(table);\n                                                                    const tbody = $(\"<tbody>\").appendTo(table);\n\n                                                                    const headerRow = $(\"<tr>\").appendTo(thead);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Variable Name\")\n                                                                        .appendTo(headerRow);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Is Dynamic\")\n                                                                        .appendTo(headerRow);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Variable Value\")\n                                                                        .appendTo(headerRow);\n\n                                                                    data.forEach((row) => {\n                                                                        const variableName = row.variable_name;\n                                                                        const variableValue = row.variable_value;\n                                                                        const isDynamic = row.is_dynamic;\n                                                                        const doctypeField = row.doctype_field;\n\n                                                                        const rowElement =\n                                                                            $(\"<tr>\").appendTo(tbody);\n                                                                        $(\"<td>\")\n                                                                            .text(variableName)\n                                                                            .appendTo(rowElement);\n                                                                        const dynamicCheckbox = $(\n                                                                            '<input type=\"checkbox\">'\n                                                                        )\n                                                                            .prop(\"checked\", !!isDynamic)\n                                                                            .appendTo($(\"<td>\").appendTo(rowElement));\n                                                                        const variableValueInput =\n                                                                            $(\"<td>\").appendTo(rowElement);\n                                                                        if (isDynamic) {\n                                                                            const selectField = $(\"<select>\")\n                                                                                .css({ width: \"200px\", height: \"30px\" })\n                                                                                .appendTo(variableValueInput);\n\n                                                                            customerFields.forEach((field) => {\n                                                                                $(\"<option>\")\n                                                                                    .text(field.label)\n                                                                                    .val(field.fieldname)\n                                                                                    .appendTo(selectField);\n                                                                            });\n\n                                                                            selectField.val(doctypeField);\n                                                                        } else {\n                                                                            $('<input type=\"text\">')\n                                                                                .val(variableValue)\n                                                                                .css({ width: \"200px\", height: \"30px\" })\n                                                                                .appendTo(variableValueInput);\n                                                                        }\n\n                                                                        dynamicCheckbox.on(\"change\", function () {\n                                                                            const isChecked = $(this).is(\":checked\");\n                                                                            row.is_dynamic = isChecked ? 1 : 0;\n                                                                            if (isChecked) {\n                                                                                variableValueInput.empty();\n                                                                                const selectField = $(\"<select>\")\n                                                                                    .css({\n                                                                                        width: \"200px\",\n                                                                                        height: \"30px\",\n                                                                                    })\n                                                                                    .appendTo(variableValueInput);\n\n                                                                                customerFields.forEach((field) => {\n                                                                                    $(\"<option>\")\n                                                                                        .text(field.label)\n                                                                                        .val(field.fieldname)\n                                                                                        .appendTo(selectField);\n                                                                                });\n\n                                                                                selectField.val(doctypeField);\n                                                                                row.doctype_field = doctypeField;\n                                                                            } else {\n                                                                                variableValueInput.empty();\n                                                                                $('<input type=\"text\">')\n                                                                                    .val(row.variable_value)\n                                                                                    .css({\n                                                                                        width: \"200px\",\n                                                                                        height: \"30px\",\n                                                                                    })\n                                                                                    .appendTo(variableValueInput);\n                                                                                row.doctype_field = \"\";\n                                                                            }\n                                                                        });\n\n                                                                        variableValueInput.on(\n                                                                            \"change\",\n                                                                            function () {\n                                                                                const selectedValue = $(this).val();\n                                                                                if (isDynamic) {\n                                                                                    row.doctype_field = selectedValue;\n                                                                                } else {\n                                                                                    row.variable_value = selectedValue;\n                                                                                }\n                                                                            }\n                                                                        );\n                                                                    });\n                                                                }\n\n                                                                function getTableData() {\n                                                                    const table = tableSection.find(\"#tabledata\");\n                                                                    const data = [];\n\n                                                                    table\n                                                                        .find(\"tbody tr\")\n                                                                        .each((index, element) => {\n                                                                            const variableName = $(element)\n                                                                                .find(\"td:nth-child(1)\")\n                                                                                .text();\n                                                                            const isDynamic = $(element)\n                                                                                .find('input[type=\"checkbox\"]')\n                                                                                .is(\":checked\");\n                                                                            const doctypeField = $(element)\n                                                                                .find(\"select\")\n                                                                                .val();\n                                                                            const variableValueInput =\n                                                                                $(element).find('input[type=\"text\"]');\n                                                                            const variableValue = isDynamic\n                                                                                ? doctypeField\n                                                                                : variableValueInput.val();\n\n                                                                            data.push({\n                                                                                variable_name: variableName,\n                                                                                variable_value: variableValue,\n                                                                                is_dynamic: isDynamic ? 1 : 0,\n                                                                                doctype_field: doctypeField,\n                                                                            });\n                                                                        });\n\n                                                                    return data;\n                                                                }\n\n                                                                d1.show();\n                                                            }\n                                                        },\n                                                        error: (r) => {\n                                                            frappe.msgprint(\"something went wrong!\");\n                                                        },\n                                                    });\n                                                }\n                                            },\n                                            error: (r) => {\n                                                frappe.msgprint(\"something went wrong!\");\n                                            },\n                                        });\n                                        function extractDynamicVariables(templateSample) {\n                                            const regex = /{{([^{}]+)}}/g;\n                                            const matches = [];\n                                            let match;\n\n                                            while ((match = regex.exec(templateSample)) !== null) {\n                                                matches.push(match[1]);\n                                            }\n\n                                            return matches;\n                                        }\n                                    });\n                                    buttonElement.click(function () {\n                                        var message = inputElement.val();\n\n                                        if (message) {\n                                            var currentDateTime = frappe.datetime.now_datetime();\n                                            var formattedDateTime = moment(currentDateTime).format(\n                                                \"DD-MM-YYYY HH:mm:ss\"\n                                            );\n                                            frappe.call({\n                                                method:\n                                                    \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                args: {\n                                                    number: phone,\n                                                    message: message,\n                                                    current_date: formattedDateTime,\n                                                },\n                                                callback: function (response) {\n                                                    console.log(response.message);\n                                                    inputElement.val(\"\");\n\n                                                    var textElement = $(\"<p>\")\n                                                        .css(\"padding-right\", \"10px\")\n                                                        .css(\"padding-left\", \"120px\")\n                                                        .css(\"text-align\", \"right\");\n                                                    var spanElement = $(\"<div>\")\n                                                        .css(\"background-color\", \"#dcf8c6\")\n                                                        .css(\"padding\", \"10px\")\n                                                        .css(\"padding-bottom\", \"20px\")\n                                                        .css(\"border-radius\", \"10px\");\n\n                                                    spanElement.text(message);\n                                                    spanElement.appendTo(textElement);\n                                                    textElement.appendTo(messagesDiv);\n                                                },\n                                            });\n                                        }\n                                    });\n                                }\n\n\n\n                            }\n                        });\n                    }\n                );\n            }\n        }\n\n        function adjustContainerStyles() {\n            if (window.innerWidth < 499) {\n                container.css({\n                    width: \"80%\",\n                    right: \"10%\",\n                });\n            } else if (window.innerWidth >= 499 && window.innerWidth < 530) {\n                container.css({\n                    width: \"40%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 530 && window.innerWidth < 800) {\n                container.css({\n                    width: \"40%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 800 && window.innerWidth < 798) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 798 && window.innerWidth < 838) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 838 && window.innerWidth < 1300) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n                inputElement.css({\n                    width: \"40%\",\n                });\n            } else {\n                container.css({\n                    width: \"20%\",\n                    right: \"80px\",\n                    height: \"65%\",\n                });\n            }\n        }\n\n        $(window).resize(adjustContainerStyles);\n\n        adjustContainerStyles();\n    },\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-07-11 15:12:56.270945",
  "module": "Whatsapp App",
  "name": "Opportunity chat box",
  "script": "\nfrappe.ui.form.on(\"Opportunity\", {\n    refresh(frm) {\n        var f_name = cur_frm.doc.contact_person;\n\n        var container = $('<div class=\"custom-container\">').appendTo(frm.wrapper);\n\n        container.css({\n            width: \"30%\",\n            height: \"65%\",\n            backgroundColor: \"#ece5dd\",\n            position: \"fixed\",\n            top: \"50%\",\n            right: \"80px\",\n            transform: \"translateY(-50%)\",\n            borderRadius: \"5px\",\n            boxShadow: \"0 0 5px rgba(0, 0, 0, 0.4)\",\n            zIndex: 9999,\n            display: \"none\",\n        });\n\n        var headingDiv = $(\"<div>\")\n            .css(\"background-color\", \"#128c7e\")\n            .appendTo(container);\n\n        var closeButtonElement = $(\"<button>\")\n            .css(\"float\", \"right\")\n            .appendTo(headingDiv);\n\n        var closeIconElement = $(\"<i>\")\n            .addClass(\"fa fa-close\")\n            .css(\"font-size\", \"30px\");\n\n        closeButtonElement.prepend(closeIconElement);\n\n        closeButtonElement.css({\n            float: \"right\",\n            backgroundColor: \"#128c7e\",\n            marginRight: \"10px\",\n            marginTop: \"10px\",\n            color: \"#FFF\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n        var heading = $(\"<h3>\")\n            .css(\"padding-left\", \"10px\")\n            .css(\"color\", \"white\")\n            .css(\"margin-bottom\", \"0px\")\n            .css(\"background-color\", \"#128c7e\")\n            .css(\"padding-top\", \"15px\")\n            .css(\"padding-bottom\", \"15px\")\n            .text(f_name)\n            .appendTo(headingDiv);\n\n        var messagesDiv = $(\"<div>\")\n            .css(\"overflow-y\", \"scroll\")\n            .css(\"background-color\", \"#ece5dd\")\n            .css(\"height\", \"83%\")\n            .appendTo(container);\n        \n        var statusElement;\n        var expiredMessageAdded = false;\n        \n        var allElement = $(\"<div>\")\n            .css(\"height\", \"40px\")\n            .css(\"padding-top\", \"5px\")\n            .css(\"background-color\", \"#ece5dd\")\n            .css(\"display\", \"flex\")\n            .css(\"flex-direction\", \"row\")\n            .appendTo(container);\n\n\n        var buttonElement1 = $(\"<button>\").text(\"Template\");\n\n        buttonElement1.css({\n            height: \"25px\",\n            backgroundColor: \"#128c7e\",\n            marginLeft: \"5px\",\n            marginTop: \"4px\",\n            color: \"#FFF\",\n            padding: \"2px 4px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n        var inputElement = $(\"<input>\")\n            .attr(\"type\", \"text\")\n            .attr(\"placeholder\", \" Type a message...\");\n\n        inputElement.css({\n            marginLeft: \"5px\",\n            marginRight: \"5px\",\n            border: \"none\",\n            marginTop: \"5px\",\n            height: \"25px\",\n            borderRadius: \"4px\",\n            width: \"auto\",\n            flex: \"1\"\n        });\n\n        var buttonElement = $(\"<button>\");\n\n        var iconElement = $(\"<i>\")\n            .addClass(\"fa fa-paper-plane\");\n\n        buttonElement.prepend(iconElement);\n\n        buttonElement.css({\n            height: \"30px\",\n            backgroundColor: \"#128c7e\",\n            marginTop: \"2px\",\n            marginRight: \"10px\",\n            color: \"#FFF\",\n            padding: \"4px 8px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n\n        var showButtonClicked = true;\n\n        var currentUserRoles = frappe.user_roles;\n        var isAdmin = currentUserRoles.includes(\"Administrator\");\n\n        var hasRequiredRole =\n            !isAdmin &&\n            (currentUserRoles.includes(\"Vendor\") ||\n                currentUserRoles.includes(\"Customer\") ||\n                currentUserRoles.includes(\"Driver\"));\n\n        if (!hasRequiredRole || isAdmin) {\n            if (frm.doc.whatsapp) {\n                frm.add_custom_button(\n                    '<i class=\"fa fa-whatsapp\" aria-hidden=\"true\" style=\"font-size:24px;color:#25d366\" ></i>',\n                    function () {\n                        // var doctype = cur_frm.doctype;\n                        var phone = cur_frm.doc.whatsapp;\n                        var availableLog;\n                        frappe.call({\n                            method: \"frappe.client.get_list\",\n                            args: {\n                                doctype: \"wati call message log\",\n                                filters: {\n                                    name: phone,\n                                },\n                                fields: [\"name\"]\n                            },\n                            callback: function (response) {\n\n                                var message = response.message;\n                                var doctype = cur_frm.doctype;\n                                if (message && message.length > 0) {\n                                    var ans = message[0];\n                                    var ans_name = ans.name;\n\n\n                                    frappe.call({\n                                        method:\n                                            \"whatsapp_app.whatsapp_app.doctype.api.get_template_sample\",\n                                        args: {\n                                            phone: phone,\n                                        },\n                                        async: false,\n                                        callback: function (response) { },\n                                    });\n                                    frappe.call({\n                                        method: \"whatsapp_app.whatsapp_app.doctype.api.get_img\",\n                                        args: {\n                                            phone: phone,\n                                        },\n                                        async: false,\n                                        callback: function (response) { },\n                                    });\n                                    frappe.call({\n                                        method: \"frappe.client.get_list\",\n                                        args: {\n                                            doctype: \"wati call message log\",\n                                            filters: {\n                                                name: phone,\n                                            },\n                                            fields: [\"name\", \"data\"],\n                                        },\n                                        callback: function (response) {\n                                            if (response.message) {\n                                                var dataObj = response.message;\n                                                if (dataObj && dataObj.length > 0) {\n                                                    var dataValue = dataObj[0].data;\n\n                                                    var parsedData = JSON.parse(dataValue);\n                                                    var result = parsedData.data;\n\n                                                    var desiredDictionaries = [];\n                                                    var tempName;\n                                                    var tempImg;\n\n                                                    for (var i = 0; i < result.length; i++) {\n                                                        var dictionary = result[i];\n\n                                                        if (\n                                                            dictionary.message &&\n                                                            dictionary.message.hasOwnProperty(\"isOwner\")\n                                                        ) {\n                                                            desiredDictionaries.push(dictionary.message);\n                                                        } else if (\n                                                            dictionary.hasOwnProperty(\"owner\") &&\n                                                            !dictionary.owner\n                                                        ) {\n                                                            desiredDictionaries.push(dictionary);\n                                                        } else if (\n                                                            dictionary.hasOwnProperty(\"modified_sample\")\n                                                        ) {\n                                                            tempName = dictionary.modified_sample;\n\n                                                            var timedate = dictionary.send_time;\n                                                            tempImg = dictionary.templateImg;\n\n                                                            frappe.call({\n                                                                method:\n                                                                    \"whatsapp_app.whatsapp_app.doctype.api.get_image\",\n                                                                args: {\n                                                                    filename: tempImg,\n                                                                },\n                                                                async: false,\n                                                                callback: function (response) { },\n                                                            });\n\n                                                            desiredDictionaries.push({\n                                                                tempName: tempName,\n                                                                timedate: timedate,\n                                                                tempImg: tempImg,\n                                                            });\n                                                        }\n                                                    }\n\n                                                    var texts = desiredDictionaries.map(function (\n                                                        dictionary\n                                                    ) {\n                                                        if (\n                                                            typeof dictionary === \"object\" &&\n                                                            dictionary.hasOwnProperty(\"text\")\n                                                        ) {\n                                                            var text = dictionary.text;\n                                                        } else if (\n                                                            typeof dictionary === \"object\" &&\n                                                            dictionary.hasOwnProperty(\"tempName\") &&\n                                                            dictionary.hasOwnProperty(\"timedate\") &&\n                                                            dictionary.hasOwnProperty(\"tempImg\")\n                                                        ) {\n                                                        } else {\n                                                            return dictionary;\n                                                        }\n                                                    });\n\n                                                    container.empty();\n                                                    headingDiv.appendTo(container);\n                                                    messagesDiv.appendTo(container);\n\n                                                    messagesDiv.empty();\n\n                                                    allElement.appendTo(container);\n\n                                                    for (var j = 0; j < texts.length; j++) {\n                                                        var text = texts[j];\n                                                        var created = \"\";\n\n                                                        if (desiredDictionaries[j].hasOwnProperty(\"text\")) {\n                                                            text = desiredDictionaries[j].text;\n                                                            if (\n                                                                desiredDictionaries[j].hasOwnProperty(\"created\")\n                                                            ) {\n                                                                var datetimeString = desiredDictionaries[j].created;\n                                                                var dateObj = new Date(datetimeString);\n\n                                                                var day = dateObj.getUTCDate();\n                                                                var month = dateObj.getUTCMonth() + 1;\n                                                                var year = dateObj.getUTCFullYear();\n\n                                                                var hours = dateObj.getUTCHours();\n                                                                var minutes = dateObj.getUTCMinutes();\n                                                                var seconds = dateObj.getUTCSeconds();\n\n                                                                if (day < 10) {\n                                                                    day = \"0\" + day;\n                                                                }\n                                                                if (month < 10) {\n                                                                    month = \"0\" + month;\n                                                                }\n                                                                if (hours < 10) {\n                                                                    hours = \"0\" + hours;\n                                                                }\n                                                                if (minutes < 10) {\n                                                                    minutes = \"0\" + minutes;\n                                                                }\n                                                                if (seconds < 10) {\n                                                                    seconds = \"0\" + seconds;\n                                                                }\n\n                                                                created =\n                                                                    day +\n                                                                    \"-\" +\n                                                                    month +\n                                                                    \"-\" +\n                                                                    year +\n                                                                    \" \" +\n                                                                    hours +\n                                                                    \":\" +\n                                                                    minutes +\n                                                                    \":\" +\n                                                                    seconds;\n                                                            }\n                                                        }\n\n                                                        var textElement = $(\"<p>\")\n                                                            .css(\n                                                                \"padding-right\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"100px\"\n                                                                    : \"10px\"\n                                                            )\n                                                            .css(\n                                                                \"padding-left\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"10px\"\n                                                                    : \"100px\"\n                                                            )\n                                                            .css(\n                                                                \"text-align\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"left\"\n                                                                    : \"right\"\n                                                            )\n                                                            .appendTo(messagesDiv);\n\n                                                        var textContent = $(\"<div>\")\n                                                            .css(\n                                                                \"background-color\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"#fff\"\n                                                                    : \"#dcf8c6\"\n                                                            )\n                                                            .css(\"padding\", \"10px\")\n                                                            .css(\"padding-bottom\", \"20px\")\n                                                            .css(\"border-radius\", \"10px\")\n                                                            .text(text)\n                                                            .appendTo(textElement);\n\n                                                        if (desiredDictionaries[j].tempImg) {\n                                                            var tempImgElement = $(\"<img>\")\n                                                                .attr(\n                                                                    \"src\",\n                                                                    \"https://migoostage.frappe.cloud/files/\" +\n                                                                    desiredDictionaries[j].tempImg\n                                                                )\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var tempNameElement = $(\"<p>\")\n                                                            .text(desiredDictionaries[j].tempName)\n                                                            .appendTo(textContent);\n\n                                                        var timedateElement = $(\"<p>\")\n                                                            .text(desiredDictionaries[j].timedate)\n                                                            .css(\"color\", \"#808080\")\n                                                            .css(\"font-size\", \"12px\")\n                                                            .appendTo(textContent);\n\n                                                        if (created !== \"\") {\n                                                            var createdElement = $(\"<div>\")\n                                                                .text(created)\n                                                                .css(\"color\", \"#808080\")\n                                                                .css(\"font-size\", \"12px\")\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var imageSrc = \"/files/icons8-done-30.png\";\n\n                                                        if (desiredDictionaries[j].owner !== false) {\n                                                            var imageElement = $(\"<img>\")\n                                                                .attr(\"src\", imageSrc)\n                                                                .css(\"width\", \"20px\")\n                                                                .css(\"float\", \"right\")\n                                                                .attr(\"class\", \"img1\")\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var b_tick;\n                                                        frappe.call({\n                                                            method: \"frappe.client.get_list\",\n                                                            args: {\n                                                                doctype: \"wati call message log\",\n                                                                filters: {\n                                                                    name: phone,\n                                                                    client_read: 1,\n                                                                },\n                                                                fields: [\"name\"],\n                                                            },\n                                                            callback: function (response) {\n                                                                b_tick = response.message[0].name;\n\n                                                                if (b_tick) {\n                                                                    imageSrc = \"/files/icons8-double-tick-50.png\";\n                                                                    $(\".img1\").attr(\"src\", imageSrc);\n                                                                }\n                                                            },\n                                                        });\n                                                    }\n\n                                                    setTimeout(function () {\n                                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                                    }, 0);\n                                                }\n\n                                                closeButtonElement.on(\"click\", function () {\n                                                    container.hide();\n                                                });\n\n                                                if (showButtonClicked) {\n                                                    container.show();\n                                                    showButtonClicked = true;\n                                                }\n                                            }\n\n                                            frappe.call({\n                                                method:\n                                                    \"whatsapp_app.whatsapp_app.doctype.api.check_status\",\n                                                args: {\n                                                    number: phone,\n                                                },\n                                                callback: function (response) {\n                                                    if (response.message === \"yes\") {\n                                                        buttonElement1.appendTo(allElement);\n                                                        inputElement.appendTo(allElement);\n                                                        buttonElement.appendTo(allElement);\n                                                    } else {\n                                                         if (!expiredMessageAdded) {\n                                                            statusElement = $(\"<p>\")\n                                                                .css(\"color\", \"black\")\n                                                                .css(\"margin-top\", \"5px\")\n                                                                .css(\"width\", \"100%\")\n                                                                .css(\"text-align\", \"center\")\n                                                                .text(\"The chat has been expired\")\n                                                                .appendTo(allElement);\n                                        \n                                                            expiredMessageAdded = true; \n                                                        }\n                                                        buttonElement1.prependTo(allElement);\n                                                        buttonElement.appendTo(allElement);\n                                                    }\n                                                },\n                                            });\n\n                                            buttonElement1.click(function () {\n                                                var names = cur_frm.doc.name;\n                                                frappe.call({\n                                                    method:\n                                                        \"whatsapp_app.whatsapp_app.doctype.api.get_template_list\",\n                                                    args: {\n                                                        doctype: doctype,\n                                                    },\n                                                    callback: (r) => {\n                                                        if (r.message) {\n                                                            const template = r.message;\n\n                                                            frappe.call({\n                                                                method: \"frappe.client.get_list\",\n                                                                args: {\n                                                                    doctype: \"Templates\",\n                                                                    filters: {\n                                                                        name: [\"in\", template],\n                                                                    },\n                                                                    fields: [\"name\", \"status\", \"sample\"],\n                                                                    limit_start: 0,\n                                                                    limit_page_length: 0,\n                                                                },\n\n                                                                callback: function (response) {\n                                                                    if (response.message) {\n                                                                        const templateData = response.message;\n                                                                        const customerDoctype = doctype;\n                                                                        const customerFields = frappe\n                                                                            .get_meta(customerDoctype)\n                                                                            .fields.filter((field) => {\n                                                                                return (\n                                                                                    field.fieldtype !== \"Column Break\" &&\n                                                                                    field.fieldtype !== \"Section Break\"\n                                                                                );\n                                                                            })\n                                                                            .map((field) => {\n                                                                                return {\n                                                                                    fieldname: field.fieldname,\n                                                                                    label: field.label,\n                                                                                };\n                                                                            });\n\n                                                                        const customerFieldLabels = customerFields.map(\n                                                                            (fieldname) => {\n                                                                                const fieldMeta = frappe\n                                                                                    .get_meta(doctype)\n                                                                                    .fields.find(\n                                                                                        (field) => field.fieldname === fieldname\n                                                                                    );\n                                                                                return fieldMeta\n                                                                                    ? fieldMeta.label\n                                                                                    : fieldname;\n                                                                            }\n                                                                        );\n\n                                                                        const d1 = new frappe.ui.Dialog({\n                                                                            title: \"Send Message\",\n                                                                            fields: [\n                                                                                {\n                                                                                    label: \"Select Template\",\n                                                                                    fieldname: \"select_template\",\n                                                                                    fieldtype: \"Select\",\n                                                                                    options: template,\n                                                                                    onchange: function () {\n                                                                                        const selectedValue = this.get_value();\n                                                                                        const previousValue = this.last_value;\n                                                                                        if (\n                                                                                            selectedValue &&\n                                                                                            selectedValue !== previousValue\n                                                                                        ) {\n                                                                                            this.last_value = selectedValue;\n                                                                                            const selectedTemplateData =\n                                                                                                templateData.find(\n                                                                                                    (template) =>\n                                                                                                        template.name === selectedValue\n                                                                                                );\n                                                                                            if (selectedTemplateData) {\n                                                                                                const dynamicVariables =\n                                                                                                    extractDynamicVariables(\n                                                                                                        selectedTemplateData.sample\n                                                                                                    );\n\n                                                                                                const variableData =\n                                                                                                    dynamicVariables.map(\n                                                                                                        (variable) => ({\n                                                                                                            variable_name: variable,\n                                                                                                            variable_value: \"\",\n                                                                                                            is_dynamic: 0,\n                                                                                                            doctype_field: \"\",\n                                                                                                        })\n                                                                                                    );\n\n                                                                                                renderTable(variableData);\n                                                                                            }\n                                                                                        }\n                                                                                    },\n                                                                                },\n                                                                            ],\n                                                                            primary_action_label: \"Send\",\n\n                                                                            primary_action(values) {\n                                                                                const tableData = getTableData();\n                                                                                const dataList = tableData.map((row) => ({\n                                                                                    name: row.variable_name,\n                                                                                    is_dynamic: row.is_dynamic ? 1 : 0,\n                                                                                    value: row.is_dynamic\n                                                                                        ? row.doctype_field\n                                                                                        : row.variable_value,\n                                                                                }));\n\n                                                                                const hasEmptyValue = dataList.some(\n                                                                                    (row) => !row.value\n                                                                                );\n                                                                                if (hasEmptyValue) {\n                                                                                    frappe.msgprint(\n                                                                                        \"Please fill in all the Variable Value fields.\"\n                                                                                    );\n                                                                                    return;\n                                                                                }\n\n                                                                                var currentDateTime =\n                                                                                    frappe.datetime.now_datetime();\n                                                                                var formattedDateTime = moment(\n                                                                                    currentDateTime\n                                                                                ).format(\"DD-MM-YYYY HH:mm:ss\");\n\n                                                                                console.log(formattedDateTime);\n\n                                                                                frappe.call({\n                                                                                    method:\n                                                                                        \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                                                    args: {\n                                                                                        template_name:\n                                                                                            values[\"select_template\"],\n                                                                                        doctype: doctype,\n                                                                                        name: names,\n                                                                                        data: dataList,\n                                                                                        current_date: formattedDateTime,\n                                                                                        number: phone,\n                                                                                    },\n                                                                                    freeze: true,\n                                                                                    callback: (r) => {\n                                                                                        var textElement = $(\"<p>\")\n                                                                                            .css(\"padding-right\", \"10px\")\n                                                                                            .css(\"padding-left\", \"120px\")\n                                                                                            .css(\"text-align\", \"right\");\n                                                                                        var spanElement = $(\"<div>\")\n                                                                                            .css(\"background-color\", \"#dcf8c6\")\n                                                                                            .css(\"padding\", \"10px\")\n                                                                                            .css(\"padding-bottom\", \"20px\")\n                                                                                            .css(\"border-radius\", \"10px\");\n\n                                                                                        frappe.call({\n                                                                                            method: \"frappe.client.get_list\",\n                                                                                            args: {\n                                                                                                doctype: \"Comment\",\n\n                                                                                                fields: [\"name\", \"content\"],\n                                                                                                limit: 1,\n                                                                                                order_by: \"creation desc\",\n                                                                                            },\n                                                                                            callback: function (response) {\n                                                                                                console.log(response);\n                                                                                                if (\n                                                                                                    response &&\n                                                                                                    response.message &&\n                                                                                                    response.message[0]\n                                                                                                ) {\n                                                                                                    var lastComment =\n                                                                                                        response.message[0];\n                                                                                                    var lastCommentContent =\n                                                                                                        lastComment.content;\n                                                                                                    var tempElement =\n                                                                                                        document.createElement(\"div\");\n                                                                                                    tempElement.innerHTML =\n                                                                                                        lastCommentContent;\n                                                                                                    var extractedText =\n                                                                                                        tempElement.querySelector(\n                                                                                                            \"a\"\n                                                                                                        ).innerText;\n                                                                                                    console.log(extractedText);\n                                                                                                    spanElement.text(extractedText);\n                                                                                                }\n                                                                                            },\n                                                                                        });\n                                                                                        spanElement.appendTo(textElement);\n                                                                                        textElement.appendTo(messagesDiv);\n                                                                                    },\n                                                                                    error: (r) => {\n                                                                                        frappe.msgprint(\n                                                                                            \"something went wrong!\"\n                                                                                        );\n                                                                                    },\n                                                                                });\n\n                                                                                d1.hide();\n                                                                            },\n                                                                        });\n\n                                                                        const tableSection = $(\"<div>\").appendTo(\n                                                                            d1.body\n                                                                        );\n\n                                                                        function renderTable(data) {\n                                                                            tableSection.empty();\n\n                                                                            const table = $(\n                                                                                '<table class=\"table table-bordered\" id=\"tabledata\">'\n                                                                            ).appendTo(tableSection);\n                                                                            const thead = $(\"<thead>\").appendTo(table);\n                                                                            const tbody = $(\"<tbody>\").appendTo(table);\n\n                                                                            const headerRow = $(\"<tr>\").appendTo(thead);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Variable Name\")\n                                                                                .appendTo(headerRow);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Is Dynamic\")\n                                                                                .appendTo(headerRow);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Variable Value\")\n                                                                                .appendTo(headerRow);\n\n                                                                            data.forEach((row) => {\n                                                                                const variableName = row.variable_name;\n                                                                                const variableValue = row.variable_value;\n                                                                                const isDynamic = row.is_dynamic;\n                                                                                const doctypeField = row.doctype_field;\n\n                                                                                const rowElement =\n                                                                                    $(\"<tr>\").appendTo(tbody);\n                                                                                $(\"<td>\")\n                                                                                    .text(variableName)\n                                                                                    .appendTo(rowElement);\n                                                                                const dynamicCheckbox = $(\n                                                                                    '<input type=\"checkbox\">'\n                                                                                )\n                                                                                    .prop(\"checked\", !!isDynamic)\n                                                                                    .appendTo($(\"<td>\").appendTo(rowElement));\n                                                                                const variableValueInput =\n                                                                                    $(\"<td>\").appendTo(rowElement);\n                                                                                if (isDynamic) {\n                                                                                    const selectField = $(\"<select>\")\n                                                                                        .css({ width: \"200px\", height: \"30px\" })\n                                                                                        .appendTo(variableValueInput);\n\n                                                                                    customerFields.forEach((field) => {\n                                                                                        $(\"<option>\")\n                                                                                            .text(field.label)\n                                                                                            .val(field.fieldname)\n                                                                                            .appendTo(selectField);\n                                                                                    });\n\n                                                                                    selectField.val(doctypeField);\n                                                                                } else {\n                                                                                    $('<input type=\"text\">')\n                                                                                        .val(variableValue)\n                                                                                        .css({ width: \"200px\", height: \"30px\" })\n                                                                                        .appendTo(variableValueInput);\n                                                                                }\n\n                                                                                dynamicCheckbox.on(\"change\", function () {\n                                                                                    const isChecked = $(this).is(\":checked\");\n                                                                                    row.is_dynamic = isChecked ? 1 : 0;\n                                                                                    if (isChecked) {\n                                                                                        variableValueInput.empty();\n                                                                                        const selectField = $(\"<select>\")\n                                                                                            .css({\n                                                                                                width: \"200px\",\n                                                                                                height: \"30px\",\n                                                                                            })\n                                                                                            .appendTo(variableValueInput);\n\n                                                                                        customerFields.forEach((field) => {\n                                                                                            $(\"<option>\")\n                                                                                                .text(field.label)\n                                                                                                .val(field.fieldname)\n                                                                                                .appendTo(selectField);\n                                                                                        });\n\n                                                                                        selectField.val(doctypeField);\n                                                                                        row.doctype_field = doctypeField;\n                                                                                    } else {\n                                                                                        variableValueInput.empty();\n                                                                                        $('<input type=\"text\">')\n                                                                                            .val(row.variable_value)\n                                                                                            .css({\n                                                                                                width: \"200px\",\n                                                                                                height: \"30px\",\n                                                                                            })\n                                                                                            .appendTo(variableValueInput);\n                                                                                        row.doctype_field = \"\";\n                                                                                    }\n                                                                                });\n\n                                                                                variableValueInput.on(\n                                                                                    \"change\",\n                                                                                    function () {\n                                                                                        const selectedValue = $(this).val();\n                                                                                        if (isDynamic) {\n                                                                                            row.doctype_field = selectedValue;\n                                                                                        } else {\n                                                                                            row.variable_value = selectedValue;\n                                                                                        }\n                                                                                    }\n                                                                                );\n                                                                            });\n                                                                        }\n\n                                                                        function getTableData() {\n                                                                            const table = tableSection.find(\"#tabledata\");\n                                                                            const data = [];\n\n                                                                            table\n                                                                                .find(\"tbody tr\")\n                                                                                .each((index, element) => {\n                                                                                    const variableName = $(element)\n                                                                                        .find(\"td:nth-child(1)\")\n                                                                                        .text();\n                                                                                    const isDynamic = $(element)\n                                                                                        .find('input[type=\"checkbox\"]')\n                                                                                        .is(\":checked\");\n                                                                                    const doctypeField = $(element)\n                                                                                        .find(\"select\")\n                                                                                        .val();\n                                                                                    const variableValueInput =\n                                                                                        $(element).find('input[type=\"text\"]');\n                                                                                    const variableValue = isDynamic\n                                                                                        ? doctypeField\n                                                                                        : variableValueInput.val();\n\n                                                                                    data.push({\n                                                                                        variable_name: variableName,\n                                                                                        variable_value: variableValue,\n                                                                                        is_dynamic: isDynamic ? 1 : 0,\n                                                                                        doctype_field: doctypeField,\n                                                                                    });\n                                                                                });\n\n                                                                            return data;\n                                                                        }\n\n                                                                        d1.show();\n                                                                    }\n                                                                },\n                                                                error: (r) => {\n                                                                    frappe.msgprint(\"something went wrong!\");\n                                                                },\n                                                            });\n                                                        }\n                                                    },\n                                                    error: (r) => {\n                                                        frappe.msgprint(\"something went wrong!\");\n                                                    },\n                                                });\n                                                function extractDynamicVariables(templateSample) {\n                                                    const regex = /{{([^{}]+)}}/g;\n                                                    const matches = [];\n                                                    let match;\n\n                                                    while ((match = regex.exec(templateSample)) !== null) {\n                                                        matches.push(match[1]);\n                                                    }\n\n                                                    return matches;\n                                                }\n                                            });\n\n                                            buttonElement.click(function () {\n                                                var message = inputElement.val();\n\n                                                if (message) {\n                                                    var currentDateTime = frappe.datetime.now_datetime();\n                                                    var formattedDateTime = moment(currentDateTime).format(\n                                                        \"DD-MM-YYYY HH:mm:ss\"\n                                                    );\n                                                    frappe.call({\n                                                        method:\n                                                            \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                        args: {\n                                                            number: phone,\n                                                            message: message,\n                                                            current_date: formattedDateTime,\n                                                        },\n                                                        callback: function (response) {\n                                                            console.log(response.message);\n                                                            inputElement.val(\"\");\n\n                                                            var textElement = $(\"<p>\")\n                                                                .css(\"padding-right\", \"10px\")\n                                                                .css(\"padding-left\", \"120px\")\n                                                                .css(\"text-align\", \"right\");\n                                                            var spanElement = $(\"<div>\")\n                                                                .css(\"background-color\", \"#dcf8c6\")\n                                                                .css(\"padding\", \"10px\")\n                                                                .css(\"padding-bottom\", \"20px\")\n                                                                .css(\"border-radius\", \"10px\");\n\n                                                            spanElement.text(message);\n                                                            spanElement.appendTo(textElement);\n                                                            textElement.appendTo(messagesDiv);\n                                                        },\n                                                    });\n                                                }\n                                            });\n                                        },\n                                    });\n\n\n\n                                } else {\n\n                                    container.empty();\n                                    headingDiv.appendTo(container);\n                                    messagesDiv.appendTo(container);\n\n                                    messagesDiv.empty();\n                                    allElement.appendTo(container);\n\n                                    setTimeout(function () {\n                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    }, 0);\n\n                                    closeButtonElement.on(\"click\", function () {\n                                        container.hide();\n                                    });\n\n                                    if (showButtonClicked) {\n                                        container.show();\n                                        showButtonClicked = true;\n                                    }\n\n\n                                    frappe.call({\n                                        method:\n                                            \"whatsapp_app.whatsapp_app.doctype.api.check_status\",\n                                        args: {\n                                            number: phone,\n                                        },\n                                        callback: function (response) {\n                                            if (response.message === \"yes\") {\n                                                buttonElement1.appendTo(allElement);\n                                                inputElement.appendTo(allElement);\n                                                buttonElement.appendTo(allElement);\n                                            } else {\n                                                if (!expiredMessageAdded) {\n                                                    statusElement = $(\"<p>\")\n                                                    .css(\"color\", \"black\")\n                                                    .css(\"margin-top\", \"5px\")\n                                                    .css(\"width\", \"100%\")\n                                                    .css(\"text-align\", \"center\")\n                                                    .text(\"The chat has been expired\")\n                                                    .appendTo(allElement);\n                                        \n                                                    expiredMessageAdded = true; \n                                                }\n                                                buttonElement1.prependTo(allElement);\n                                                buttonElement.appendTo(allElement);\n                                            }\n                                        },\n                                    });\n\n                                    buttonElement1.click(function () {\n                                        \n                                        container.children().css('opacity', '0.6');\n                                        \n                                        var names = cur_frm.doc.name;\n                                        frappe.call({\n                                            method:\n                                                \"whatsapp_app.whatsapp_app.doctype.api.get_template_list\",\n                                            args: {\n                                                doctype: doctype,\n                                            },\n                                            callback: (r) => {\n                                                if (r.message) {\n                                                    const template = r.message;\n\n                                                    frappe.call({\n                                                        method: \"frappe.client.get_list\",\n                                                        args: {\n                                                            doctype: \"Templates\",\n                                                            filters: {\n                                                                name: [\"in\", template],\n                                                            },\n                                                            fields: [\"name\", \"status\", \"sample\"],\n                                                            limit_start: 0,\n                                                            limit_page_length: 0,\n                                                        },\n\n                                                        callback: function (response) {\n                                                            if (response.message) {\n                                                                const templateData = response.message;\n                                                                const customerDoctype = doctype;\n                                                                const customerFields = frappe\n                                                                    .get_meta(customerDoctype)\n                                                                    .fields.filter((field) => {\n                                                                        return (\n                                                                            field.fieldtype !== \"Column Break\" &&\n                                                                            field.fieldtype !== \"Section Break\"\n                                                                        );\n                                                                    })\n                                                                    .map((field) => {\n                                                                        return {\n                                                                            fieldname: field.fieldname,\n                                                                            label: field.label,\n                                                                        };\n                                                                    });\n\n                                                                const customerFieldLabels = customerFields.map(\n                                                                    (fieldname) => {\n                                                                        const fieldMeta = frappe\n                                                                            .get_meta(doctype)\n                                                                            .fields.find(\n                                                                                (field) => field.fieldname === fieldname\n                                                                            );\n                                                                        return fieldMeta\n                                                                            ? fieldMeta.label\n                                                                            : fieldname;\n                                                                    }\n                                                                );\n\n                                                                const d1 = new frappe.ui.Dialog({\n                                                                    title: \"Send Message\",\n                                                                    fields: [\n                                                                        {\n                                                                            label: \"Select Template\",\n                                                                            fieldname: \"select_template\",\n                                                                            fieldtype: \"Select\",\n                                                                            options: template,\n                                                                            onchange: function () {\n                                                                                const selectedValue = this.get_value();\n                                                                                const previousValue = this.last_value;\n                                                                                if (\n                                                                                    selectedValue &&\n                                                                                    selectedValue !== previousValue\n                                                                                ) {\n                                                                                    this.last_value = selectedValue;\n                                                                                    const selectedTemplateData =\n                                                                                        templateData.find(\n                                                                                            (template) =>\n                                                                                                template.name === selectedValue\n                                                                                        );\n                                                                                    if (selectedTemplateData) {\n                                                                                        const dynamicVariables =\n                                                                                            extractDynamicVariables(\n                                                                                                selectedTemplateData.sample\n                                                                                            );\n\n                                                                                        const variableData =\n                                                                                            dynamicVariables.map(\n                                                                                                (variable) => ({\n                                                                                                    variable_name: variable,\n                                                                                                    variable_value: \"\",\n                                                                                                    is_dynamic: 0,\n                                                                                                    doctype_field: \"\",\n                                                                                                })\n                                                                                            );\n\n                                                                                        renderTable(variableData);\n                                                                                    }\n                                                                                }\n                                                                            },\n                                                                        },\n                                                                    ],\n                                                                    primary_action_label: \"Send\",\n\n                                                                    primary_action(values) {\n                                                                        const tableData = getTableData();\n                                                                        const dataList = tableData.map((row) => ({\n                                                                            name: row.variable_name,\n                                                                            is_dynamic: row.is_dynamic ? 1 : 0,\n                                                                            value: row.is_dynamic\n                                                                                ? row.doctype_field\n                                                                                : row.variable_value,\n                                                                        }));\n\n                                                                        const hasEmptyValue = dataList.some(\n                                                                            (row) => !row.value\n                                                                        );\n                                                                        if (hasEmptyValue) {\n                                                                            frappe.msgprint(\n                                                                                \"Please fill in all the Variable Value fields.\"\n                                                                            );\n                                                                            return;\n                                                                        }\n\n                                                                        var currentDateTime =\n                                                                            frappe.datetime.now_datetime();\n                                                                        var formattedDateTime = moment(\n                                                                            currentDateTime\n                                                                        ).format(\"DD-MM-YYYY HH:mm:ss\");\n\n                                                                        console.log(formattedDateTime);\n\n                                                                        frappe.call({\n                                                                            method:\n                                                                                \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                                            args: {\n                                                                                template_name:\n                                                                                    values[\"select_template\"],\n                                                                                doctype: doctype,\n                                                                                name: names,\n                                                                                data: dataList,\n                                                                                current_date: formattedDateTime,\n                                                                                number: phone,\n                                                                            },\n                                                                            freeze: true,\n                                                                            callback: (r) => {\n                                                                                var textElement = $(\"<p>\")\n                                                                                    .css(\"padding-right\", \"10px\")\n                                                                                    .css(\"padding-left\", \"120px\")\n                                                                                    .css(\"text-align\", \"right\");\n                                                                                var spanElement = $(\"<div>\")\n                                                                                    .css(\"background-color\", \"#dcf8c6\")\n                                                                                    .css(\"padding\", \"10px\")\n                                                                                    .css(\"padding-bottom\", \"20px\")\n                                                                                    .css(\"border-radius\", \"10px\");\n\n                                                                                frappe.call({\n                                                                                    method: \"frappe.client.get_list\",\n                                                                                    args: {\n                                                                                        doctype: \"Comment\",\n\n                                                                                        fields: [\"name\", \"content\"],\n                                                                                        limit: 1,\n                                                                                        order_by: \"creation desc\",\n                                                                                    },\n                                                                                    callback: function (response) {\n                                                                                        console.log(response);\n                                                                                        if (\n                                                                                            response &&\n                                                                                            response.message &&\n                                                                                            response.message[0]\n                                                                                        ) {\n                                                                                            var lastComment =\n                                                                                                response.message[0];\n                                                                                            var lastCommentContent =\n                                                                                                lastComment.content;\n                                                                                            var tempElement =\n                                                                                                document.createElement(\"div\");\n                                                                                            tempElement.innerHTML =\n                                                                                                lastCommentContent;\n                                                                                            var extractedText =\n                                                                                                tempElement.querySelector(\n                                                                                                    \"a\"\n                                                                                                ).innerText;\n                                                                                            console.log(extractedText);\n                                                                                            spanElement.text(extractedText);\n                                                                                        }\n                                                                                    },\n                                                                                });\n                                                                                spanElement.appendTo(textElement);\n                                                                                textElement.appendTo(messagesDiv);\n                                                                            },\n                                                                            error: (r) => {\n                                                                                frappe.msgprint(\n                                                                                    \"something went wrong!\"\n                                                                                );\n                                                                            },\n                                                                        });\n\n                                                                        d1.hide();\n                                                                    },\n                                                                });\n\n                                                                const tableSection = $(\"<div>\").appendTo(\n                                                                    d1.body\n                                                                );\n\n                                                                function renderTable(data) {\n                                                                    tableSection.empty();\n\n                                                                    const table = $(\n                                                                        '<table class=\"table table-bordered\" id=\"tabledata\">'\n                                                                    ).appendTo(tableSection);\n                                                                    const thead = $(\"<thead>\").appendTo(table);\n                                                                    const tbody = $(\"<tbody>\").appendTo(table);\n\n                                                                    const headerRow = $(\"<tr>\").appendTo(thead);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Variable Name\")\n                                                                        .appendTo(headerRow);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Is Dynamic\")\n                                                                        .appendTo(headerRow);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Variable Value\")\n                                                                        .appendTo(headerRow);\n\n                                                                    data.forEach((row) => {\n                                                                        const variableName = row.variable_name;\n                                                                        const variableValue = row.variable_value;\n                                                                        const isDynamic = row.is_dynamic;\n                                                                        const doctypeField = row.doctype_field;\n\n                                                                        const rowElement =\n                                                                            $(\"<tr>\").appendTo(tbody);\n                                                                        $(\"<td>\")\n                                                                            .text(variableName)\n                                                                            .appendTo(rowElement);\n                                                                        const dynamicCheckbox = $(\n                                                                            '<input type=\"checkbox\">'\n                                                                        )\n                                                                            .prop(\"checked\", !!isDynamic)\n                                                                            .appendTo($(\"<td>\").appendTo(rowElement));\n                                                                        const variableValueInput =\n                                                                            $(\"<td>\").appendTo(rowElement);\n                                                                        if (isDynamic) {\n                                                                            const selectField = $(\"<select>\")\n                                                                                .css({ width: \"200px\", height: \"30px\" })\n                                                                                .appendTo(variableValueInput);\n\n                                                                            customerFields.forEach((field) => {\n                                                                                $(\"<option>\")\n                                                                                    .text(field.label)\n                                                                                    .val(field.fieldname)\n                                                                                    .appendTo(selectField);\n                                                                            });\n\n                                                                            selectField.val(doctypeField);\n                                                                        } else {\n                                                                            $('<input type=\"text\">')\n                                                                                .val(variableValue)\n                                                                                .css({ width: \"200px\", height: \"30px\" })\n                                                                                .appendTo(variableValueInput);\n                                                                        }\n\n                                                                        dynamicCheckbox.on(\"change\", function () {\n                                                                            const isChecked = $(this).is(\":checked\");\n                                                                            row.is_dynamic = isChecked ? 1 : 0;\n                                                                            if (isChecked) {\n                                                                                variableValueInput.empty();\n                                                                                const selectField = $(\"<select>\")\n                                                                                    .css({\n                                                                                        width: \"200px\",\n                                                                                        height: \"30px\",\n                                                                                    })\n                                                                                    .appendTo(variableValueInput);\n\n                                                                                customerFields.forEach((field) => {\n                                                                                    $(\"<option>\")\n                                                                                        .text(field.label)\n                                                                                        .val(field.fieldname)\n                                                                                        .appendTo(selectField);\n                                                                                });\n\n                                                                                selectField.val(doctypeField);\n                                                                                row.doctype_field = doctypeField;\n                                                                            } else {\n                                                                                variableValueInput.empty();\n                                                                                $('<input type=\"text\">')\n                                                                                    .val(row.variable_value)\n                                                                                    .css({\n                                                                                        width: \"200px\",\n                                                                                        height: \"30px\",\n                                                                                    })\n                                                                                    .appendTo(variableValueInput);\n                                                                                row.doctype_field = \"\";\n                                                                            }\n                                                                        });\n\n                                                                        variableValueInput.on(\n                                                                            \"change\",\n                                                                            function () {\n                                                                                const selectedValue = $(this).val();\n                                                                                if (isDynamic) {\n                                                                                    row.doctype_field = selectedValue;\n                                                                                } else {\n                                                                                    row.variable_value = selectedValue;\n                                                                                }\n                                                                            }\n                                                                        );\n                                                                    });\n                                                                }\n\n                                                                function getTableData() {\n                                                                    const table = tableSection.find(\"#tabledata\");\n                                                                    const data = [];\n\n                                                                    table\n                                                                        .find(\"tbody tr\")\n                                                                        .each((index, element) => {\n                                                                            const variableName = $(element)\n                                                                                .find(\"td:nth-child(1)\")\n                                                                                .text();\n                                                                            const isDynamic = $(element)\n                                                                                .find('input[type=\"checkbox\"]')\n                                                                                .is(\":checked\");\n                                                                            const doctypeField = $(element)\n                                                                                .find(\"select\")\n                                                                                .val();\n                                                                            const variableValueInput =\n                                                                                $(element).find('input[type=\"text\"]');\n                                                                            const variableValue = isDynamic\n                                                                                ? doctypeField\n                                                                                : variableValueInput.val();\n\n                                                                            data.push({\n                                                                                variable_name: variableName,\n                                                                                variable_value: variableValue,\n                                                                                is_dynamic: isDynamic ? 1 : 0,\n                                                                                doctype_field: doctypeField,\n                                                                            });\n                                                                        });\n\n                                                                    return data;\n                                                                }\n\n                                                                d1.show();\n                                                            }\n                                                        },\n                                                        error: (r) => {\n                                                            frappe.msgprint(\"something went wrong!\");\n                                                        },\n                                                    });\n                                                }\n                                            },\n                                            error: (r) => {\n                                                frappe.msgprint(\"something went wrong!\");\n                                            },\n                                        });\n                                        function extractDynamicVariables(templateSample) {\n                                            const regex = /{{([^{}]+)}}/g;\n                                            const matches = [];\n                                            let match;\n\n                                            while ((match = regex.exec(templateSample)) !== null) {\n                                                matches.push(match[1]);\n                                            }\n\n                                            return matches;\n                                        }\n                                    });\n                                    buttonElement.click(function () {\n                                        var message = inputElement.val();\n\n                                        if (message) {\n                                            var currentDateTime = frappe.datetime.now_datetime();\n                                            var formattedDateTime = moment(currentDateTime).format(\n                                                \"DD-MM-YYYY HH:mm:ss\"\n                                            );\n                                            frappe.call({\n                                                method:\n                                                    \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                args: {\n                                                    number: phone,\n                                                    message: message,\n                                                    current_date: formattedDateTime,\n                                                },\n                                                callback: function (response) {\n                                                    console.log(response.message);\n                                                    inputElement.val(\"\");\n\n                                                    var textElement = $(\"<p>\")\n                                                        .css(\"padding-right\", \"10px\")\n                                                        .css(\"padding-left\", \"120px\")\n                                                        .css(\"text-align\", \"right\");\n                                                    var spanElement = $(\"<div>\")\n                                                        .css(\"background-color\", \"#dcf8c6\")\n                                                        .css(\"padding\", \"10px\")\n                                                        .css(\"padding-bottom\", \"20px\")\n                                                        .css(\"border-radius\", \"10px\");\n\n                                                    spanElement.text(message);\n                                                    spanElement.appendTo(textElement);\n                                                    textElement.appendTo(messagesDiv);\n                                                },\n                                            });\n                                        }\n                                    });\n                                }\n\n\n\n                            }\n                        });\n                    }\n                );\n            }\n        }\n\n        function adjustContainerStyles() {\n            if (window.innerWidth < 499) {\n                container.css({\n                    width: \"80%\",\n                    right: \"10%\",\n                });\n            } else if (window.innerWidth >= 499 && window.innerWidth < 530) {\n                container.css({\n                    width: \"40%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 530 && window.innerWidth < 800) {\n                container.css({\n                    width: \"40%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 800 && window.innerWidth < 798) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 798 && window.innerWidth < 838) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 838 && window.innerWidth < 1300) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n                inputElement.css({\n                    width: \"40%\",\n                });\n            } else {\n                container.css({\n                    width: \"20%\",\n                    right: \"80px\",\n                    height: \"65%\",\n                });\n            }\n        }\n\n        $(window).resize(adjustContainerStyles);\n\n        adjustContainerStyles();\n    },\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-07-11 15:45:34.921079",
  "module": "Whatsapp App",
  "name": "Lead chat box",
  "script": "frappe.ui.form.on(\"Lead\", {\n    onload: function (frm) {\n        var f_name = cur_frm.doc.lead_name;\n\n        var container = $('<div class=\"custom-container\">').appendTo(frm.wrapper);\n\n        container.css({\n            width: \"30%\",\n            height: \"65%\",\n            backgroundColor: \"#ece5dd\",\n            position: \"fixed\",\n            top: \"50%\",\n            right: \"80px\",\n            transform: \"translateY(-50%)\",\n            borderRadius: \"5px\",\n            boxShadow: \"0 0 5px rgba(0, 0, 0, 0.4)\",\n            zIndex: 9999,\n            display: \"none\",\n        });\n\n        var headingDiv = $(\"<div>\")\n            .css(\"background-color\", \"#128c7e\")\n            .appendTo(container);\n\n        var closeButtonElement = $(\"<button>\")\n            .css(\"float\", \"right\")\n            .appendTo(headingDiv);\n\n        var closeIconElement = $(\"<i>\")\n            .addClass(\"fa fa-close\")\n            .css(\"font-size\", \"30px\");\n\n        closeButtonElement.prepend(closeIconElement);\n\n        closeButtonElement.css({\n            float: \"right\",\n            backgroundColor: \"#128c7e\",\n            marginRight: \"10px\",\n            marginTop: \"10px\",\n            color: \"#FFF\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n        var heading = $(\"<h3>\")\n            .css(\"padding-left\", \"10px\")\n            .css(\"color\", \"white\")\n            .css(\"margin-bottom\", \"0px\")\n            .css(\"background-color\", \"#128c7e\")\n            .css(\"padding-top\", \"15px\")\n            .css(\"padding-bottom\", \"15px\")\n            .text(f_name)\n            .appendTo(headingDiv);\n\n        var messagesDiv = $(\"<div>\")\n            .css(\"overflow-y\", \"scroll\")\n            .css(\"background-color\", \"#ece5dd\")\n            .css(\"height\", \"83%\")\n            .appendTo(container);\n            \n        var statusElement;\n        var expiredMessageAdded = false;\n        \n        var allElement = $(\"<div>\")\n            .css(\"height\", \"40px\")\n            .css(\"padding-top\", \"5px\")\n            .css(\"background-color\", \"#ece5dd\")\n            .css(\"display\", \"flex\")\n            .css(\"flex-direction\", \"row\")\n            .appendTo(container);\n\n\n        var buttonElement1 = $(\"<button>\").text(\"Template\");\n\n        buttonElement1.css({\n            height: \"25px\",\n            backgroundColor: \"#128c7e\",\n            marginLeft: \"5px\",\n            marginTop: \"4px\",\n            color: \"#FFF\",\n            padding: \"2px 4px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n        var inputElement = $(\"<input>\")\n            .attr(\"type\", \"text\")\n            .attr(\"placeholder\", \" Type a message...\");\n\n        inputElement.css({\n            marginLeft: \"5px\",\n            marginRight: \"5px\",\n            border: \"none\",\n            marginTop: \"5px\",\n            height: \"25px\",\n            borderRadius: \"4px\",\n            width: \"auto\",\n            flex: \"1\"\n        });\n\n        var buttonElement = $(\"<button>\");\n\n        var iconElement = $(\"<i>\")\n            .addClass(\"fa fa-paper-plane\");\n\n        buttonElement.prepend(iconElement);\n\n        buttonElement.css({\n            height: \"30px\",\n            backgroundColor: \"#128c7e\",\n            marginTop: \"2px\",\n            marginRight: \"10px\",\n            color: \"#FFF\",\n            padding: \"4px 8px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\",\n        });\n\n\n        var showButtonClicked = true;\n\n        var currentUserRoles = frappe.user_roles;\n        var isAdmin = currentUserRoles.includes(\"Administrator\");\n\n        var hasRequiredRole =\n            !isAdmin &&\n            (currentUserRoles.includes(\"Vendor\") ||\n                currentUserRoles.includes(\"Customer\") ||\n                currentUserRoles.includes(\"Driver\"));\n\n        if (!hasRequiredRole || isAdmin) {\n            if (frm.doc.whatsapp_no) {\n                frm.add_custom_button(\n                    '<i class=\"fa fa-whatsapp\" aria-hidden=\"true\" style=\"font-size:24px;color:#25d366\" ></i>',\n                    function () {\n                        // var doctype = cur_frm.doctype;\n                        var phone = cur_frm.doc.whatsapp_no;\n                        var availableLog;\n                        frappe.call({\n                            method: \"frappe.client.get_list\",\n                            args: {\n                                doctype: \"wati call message log\",\n                                filters: {\n                                    name: phone,\n                                },\n                                fields: [\"name\"]\n                            },\n                            callback: function (response) {\n\n                                var message = response.message;\n                                var doctype = cur_frm.doctype;\n                                if (message && message.length > 0) {\n                                    var ans = message[0];\n                                    var ans_name = ans.name;\n\n\n                                    frappe.call({\n                                        method:\n                                            \"whatsapp_app.whatsapp_app.doctype.api.get_template_sample\",\n                                        args: {\n                                            phone: phone,\n                                        },\n                                        async: false,\n                                        callback: function (response) { },\n                                    });\n                                    frappe.call({\n                                        method: \"whatsapp_app.whatsapp_app.doctype.api.get_img\",\n                                        args: {\n                                            phone: phone,\n                                        },\n                                        async: false,\n                                        callback: function (response) { },\n                                    });\n                                    frappe.call({\n                                        method: \"frappe.client.get_list\",\n                                        args: {\n                                            doctype: \"wati call message log\",\n                                            filters: {\n                                                name: phone,\n                                            },\n                                            fields: [\"name\", \"data\"],\n                                        },\n                                        callback: function (response) {\n                                            if (response.message) {\n                                                var dataObj = response.message;\n                                                if (dataObj && dataObj.length > 0) {\n                                                    var dataValue = dataObj[0].data;\n\n                                                    var parsedData = JSON.parse(dataValue);\n                                                    var result = parsedData.data;\n\n                                                    var desiredDictionaries = [];\n                                                    var tempName;\n                                                    var tempImg;\n\n                                                    for (var i = 0; i < result.length; i++) {\n                                                        var dictionary = result[i];\n\n                                                        if (\n                                                            dictionary.message &&\n                                                            dictionary.message.hasOwnProperty(\"isOwner\")\n                                                        ) {\n                                                            desiredDictionaries.push(dictionary.message);\n                                                        } else if (\n                                                            dictionary.hasOwnProperty(\"owner\") &&\n                                                            !dictionary.owner\n                                                        ) {\n                                                            desiredDictionaries.push(dictionary);\n                                                        } else if (\n                                                            dictionary.hasOwnProperty(\"modified_sample\")\n                                                        ) {\n                                                            tempName = dictionary.modified_sample;\n\n                                                            var timedate = dictionary.send_time;\n                                                            tempImg = dictionary.templateImg;\n\n                                                            frappe.call({\n                                                                method:\n                                                                    \"whatsapp_app.whatsapp_app.doctype.api.get_image\",\n                                                                args: {\n                                                                    filename: tempImg,\n                                                                },\n                                                                async: false,\n                                                                callback: function (response) { },\n                                                            });\n\n                                                            desiredDictionaries.push({\n                                                                tempName: tempName,\n                                                                timedate: timedate,\n                                                                tempImg: tempImg,\n                                                            });\n                                                        }\n                                                    }\n\n                                                    var texts = desiredDictionaries.map(function (\n                                                        dictionary\n                                                    ) {\n                                                        if (\n                                                            typeof dictionary === \"object\" &&\n                                                            dictionary.hasOwnProperty(\"text\")\n                                                        ) {\n                                                            var text = dictionary.text;\n                                                        } else if (\n                                                            typeof dictionary === \"object\" &&\n                                                            dictionary.hasOwnProperty(\"tempName\") &&\n                                                            dictionary.hasOwnProperty(\"timedate\") &&\n                                                            dictionary.hasOwnProperty(\"tempImg\")\n                                                        ) {\n                                                        } else {\n                                                            return dictionary;\n                                                        }\n                                                    });\n\n                                                    container.empty();\n                                                    headingDiv.appendTo(container);\n                                                    messagesDiv.appendTo(container);\n\n                                                    messagesDiv.empty();\n\n                                                    allElement.appendTo(container);\n\n                                                    for (var j = 0; j < texts.length; j++) {\n                                                        var text = texts[j];\n                                                        var created = \"\";\n\n                                                        if (desiredDictionaries[j].hasOwnProperty(\"text\")) {\n                                                            text = desiredDictionaries[j].text;\n                                                            if (\n                                                                desiredDictionaries[j].hasOwnProperty(\"created\")\n                                                            ) {\n                                                                var datetimeString = desiredDictionaries[j].created;\n                                                                var dateObj = new Date(datetimeString);\n\n                                                                var day = dateObj.getUTCDate();\n                                                                var month = dateObj.getUTCMonth() + 1;\n                                                                var year = dateObj.getUTCFullYear();\n\n                                                                var hours = dateObj.getUTCHours();\n                                                                var minutes = dateObj.getUTCMinutes();\n                                                                var seconds = dateObj.getUTCSeconds();\n\n                                                                if (day < 10) {\n                                                                    day = \"0\" + day;\n                                                                }\n                                                                if (month < 10) {\n                                                                    month = \"0\" + month;\n                                                                }\n                                                                if (hours < 10) {\n                                                                    hours = \"0\" + hours;\n                                                                }\n                                                                if (minutes < 10) {\n                                                                    minutes = \"0\" + minutes;\n                                                                }\n                                                                if (seconds < 10) {\n                                                                    seconds = \"0\" + seconds;\n                                                                }\n\n                                                                created =\n                                                                    day +\n                                                                    \"-\" +\n                                                                    month +\n                                                                    \"-\" +\n                                                                    year +\n                                                                    \" \" +\n                                                                    hours +\n                                                                    \":\" +\n                                                                    minutes +\n                                                                    \":\" +\n                                                                    seconds;\n                                                            }\n                                                        }\n\n                                                        var textElement = $(\"<p>\")\n                                                            .css(\n                                                                \"padding-right\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"100px\"\n                                                                    : \"10px\"\n                                                            )\n                                                            .css(\n                                                                \"padding-left\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"10px\"\n                                                                    : \"100px\"\n                                                            )\n                                                            .css(\n                                                                \"text-align\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"left\"\n                                                                    : \"right\"\n                                                            )\n                                                            .appendTo(messagesDiv);\n\n                                                        var textContent = $(\"<div>\")\n                                                            .css(\n                                                                \"background-color\",\n                                                                desiredDictionaries[j].owner === false\n                                                                    ? \"#fff\"\n                                                                    : \"#dcf8c6\"\n                                                            )\n                                                            .css(\"padding\", \"10px\")\n                                                            .css(\"padding-bottom\", \"20px\")\n                                                            .css(\"border-radius\", \"10px\")\n                                                            .text(text)\n                                                            .appendTo(textElement);\n\n                                                        if (desiredDictionaries[j].tempImg) {\n                                                            var tempImgElement = $(\"<img>\")\n                                                                .attr(\n                                                                    \"src\",\n                                                                    \"https://migoostage.frappe.cloud/files/\" +\n                                                                    desiredDictionaries[j].tempImg\n                                                                )\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var tempNameElement = $(\"<p>\")\n                                                            .text(desiredDictionaries[j].tempName)\n                                                            .appendTo(textContent);\n\n                                                        var timedateElement = $(\"<p>\")\n                                                            .text(desiredDictionaries[j].timedate)\n                                                            .css(\"color\", \"#808080\")\n                                                            .css(\"font-size\", \"12px\")\n                                                            .appendTo(textContent);\n\n                                                        if (created !== \"\") {\n                                                            var createdElement = $(\"<div>\")\n                                                                .text(created)\n                                                                .css(\"color\", \"#808080\")\n                                                                .css(\"font-size\", \"12px\")\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var imageSrc = \"/files/icons8-done-30.png\";\n\n                                                        if (desiredDictionaries[j].owner !== false) {\n                                                            var imageElement = $(\"<img>\")\n                                                                .attr(\"src\", imageSrc)\n                                                                .css(\"width\", \"20px\")\n                                                                .css(\"float\", \"right\")\n                                                                .attr(\"class\", \"img1\")\n                                                                .appendTo(textContent);\n                                                        }\n\n                                                        var b_tick;\n                                                        frappe.call({\n                                                            method: \"frappe.client.get_list\",\n                                                            args: {\n                                                                doctype: \"wati call message log\",\n                                                                filters: {\n                                                                    name: phone,\n                                                                    client_read: 1,\n                                                                },\n                                                                fields: [\"name\"],\n                                                            },\n                                                            callback: function (response) {\n                                                                b_tick = response.message[0].name;\n\n                                                                if (b_tick) {\n                                                                    imageSrc = \"/files/icons8-double-tick-50.png\";\n                                                                    $(\".img1\").attr(\"src\", imageSrc);\n                                                                }\n                                                            },\n                                                        });\n                                                    }\n\n                                                    setTimeout(function () {\n                                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                                    }, 0);\n                                                }\n\n                                                closeButtonElement.on(\"click\", function () {\n                                                    container.hide();\n                                                });\n\n                                                if (showButtonClicked) {\n                                                    container.show();\n                                                    showButtonClicked = true;\n                                                }\n                                            }\n\n                                            frappe.call({\n                                                method:\n                                                    \"whatsapp_app.whatsapp_app.doctype.api.check_status\",\n                                                args: {\n                                                    number: phone,\n                                                },\n                                                callback: function (response) {\n                                                    if (response.message === \"yes\") {\n                                                        buttonElement1.appendTo(allElement);\n                                                        inputElement.appendTo(allElement);\n                                                        buttonElement.appendTo(allElement);\n                                                    } else {\n                                                        if (!expiredMessageAdded) {\n                                                            statusElement = $(\"<p>\")\n                                                                .css(\"color\", \"black\")\n                                                                .css(\"margin-top\", \"5px\")\n                                                                .css(\"width\", \"100%\")\n                                                                .css(\"text-align\", \"center\")\n                                                                .text(\"The chat has been expired\")\n                                                                .appendTo(allElement);\n                                        \n                                                            expiredMessageAdded = true; \n                                                        }\n                                                        buttonElement1.prependTo(allElement);\n                                                        buttonElement.appendTo(allElement);\n                                                    }\n                                                },\n                                            });\n\n                                            buttonElement1.click(function () {\n                                                var names = cur_frm.doc.name;\n                                                frappe.call({\n                                                    method:\n                                                        \"whatsapp_app.whatsapp_app.doctype.api.get_template_list\",\n                                                    args: {\n                                                        doctype: doctype,\n                                                    },\n                                                    callback: (r) => {\n                                                        if (r.message) {\n                                                            const template = r.message;\n\n                                                            frappe.call({\n                                                                method: \"frappe.client.get_list\",\n                                                                args: {\n                                                                    doctype: \"Templates\",\n                                                                    filters: {\n                                                                        name: [\"in\", template],\n                                                                    },\n                                                                    fields: [\"name\", \"status\", \"sample\"],\n                                                                    limit_start: 0,\n                                                                    limit_page_length: 0,\n                                                                },\n\n                                                                callback: function (response) {\n                                                                    if (response.message) {\n                                                                        const templateData = response.message;\n                                                                        const customerDoctype = doctype;\n                                                                        const customerFields = frappe\n                                                                            .get_meta(customerDoctype)\n                                                                            .fields.filter((field) => {\n                                                                                return (\n                                                                                    field.fieldtype !== \"Column Break\" &&\n                                                                                    field.fieldtype !== \"Section Break\"\n                                                                                );\n                                                                            })\n                                                                            .map((field) => {\n                                                                                return {\n                                                                                    fieldname: field.fieldname,\n                                                                                    label: field.label,\n                                                                                };\n                                                                            });\n\n                                                                        const customerFieldLabels = customerFields.map(\n                                                                            (fieldname) => {\n                                                                                const fieldMeta = frappe\n                                                                                    .get_meta(doctype)\n                                                                                    .fields.find(\n                                                                                        (field) => field.fieldname === fieldname\n                                                                                    );\n                                                                                return fieldMeta\n                                                                                    ? fieldMeta.label\n                                                                                    : fieldname;\n                                                                            }\n                                                                        );\n\n                                                                        const d1 = new frappe.ui.Dialog({\n                                                                            title: \"Send Message\",\n                                                                            fields: [\n                                                                                {\n                                                                                    label: \"Select Template\",\n                                                                                    fieldname: \"select_template\",\n                                                                                    fieldtype: \"Select\",\n                                                                                    options: template,\n                                                                                    onchange: function () {\n                                                                                        const selectedValue = this.get_value();\n                                                                                        const previousValue = this.last_value;\n                                                                                        if (\n                                                                                            selectedValue &&\n                                                                                            selectedValue !== previousValue\n                                                                                        ) {\n                                                                                            this.last_value = selectedValue;\n                                                                                            const selectedTemplateData =\n                                                                                                templateData.find(\n                                                                                                    (template) =>\n                                                                                                        template.name === selectedValue\n                                                                                                );\n                                                                                            if (selectedTemplateData) {\n                                                                                                const dynamicVariables =\n                                                                                                    extractDynamicVariables(\n                                                                                                        selectedTemplateData.sample\n                                                                                                    );\n\n                                                                                                const variableData =\n                                                                                                    dynamicVariables.map(\n                                                                                                        (variable) => ({\n                                                                                                            variable_name: variable,\n                                                                                                            variable_value: \"\",\n                                                                                                            is_dynamic: 0,\n                                                                                                            doctype_field: \"\",\n                                                                                                        })\n                                                                                                    );\n\n                                                                                                renderTable(variableData);\n                                                                                            }\n                                                                                        }\n                                                                                    },\n                                                                                },\n                                                                            ],\n                                                                            primary_action_label: \"Send\",\n\n                                                                            primary_action(values) {\n                                                                                const tableData = getTableData();\n                                                                                const dataList = tableData.map((row) => ({\n                                                                                    name: row.variable_name,\n                                                                                    is_dynamic: row.is_dynamic ? 1 : 0,\n                                                                                    value: row.is_dynamic\n                                                                                        ? row.doctype_field\n                                                                                        : row.variable_value,\n                                                                                }));\n\n                                                                                const hasEmptyValue = dataList.some(\n                                                                                    (row) => !row.value\n                                                                                );\n                                                                                if (hasEmptyValue) {\n                                                                                    frappe.msgprint(\n                                                                                        \"Please fill in all the Variable Value fields.\"\n                                                                                    );\n                                                                                    return;\n                                                                                }\n\n                                                                                var currentDateTime =\n                                                                                    frappe.datetime.now_datetime();\n                                                                                var formattedDateTime = moment(\n                                                                                    currentDateTime\n                                                                                ).format(\"DD-MM-YYYY HH:mm:ss\");\n\n                                                                                console.log(formattedDateTime);\n\n                                                                                frappe.call({\n                                                                                    method:\n                                                                                        \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                                                    args: {\n                                                                                        template_name:\n                                                                                            values[\"select_template\"],\n                                                                                        doctype: doctype,\n                                                                                        name: names,\n                                                                                        data: dataList,\n                                                                                        current_date: formattedDateTime,\n                                                                                        number: phone,\n                                                                                    },\n                                                                                    freeze: true,\n                                                                                    callback: (r) => {\n                                                                                        var textElement = $(\"<p>\")\n                                                                                            .css(\"padding-right\", \"10px\")\n                                                                                            .css(\"padding-left\", \"120px\")\n                                                                                            .css(\"text-align\", \"right\");\n                                                                                        var spanElement = $(\"<div>\")\n                                                                                            .css(\"background-color\", \"#dcf8c6\")\n                                                                                            .css(\"padding\", \"10px\")\n                                                                                            .css(\"padding-bottom\", \"20px\")\n                                                                                            .css(\"border-radius\", \"10px\");\n\n                                                                                        frappe.call({\n                                                                                            method: \"frappe.client.get_list\",\n                                                                                            args: {\n                                                                                                doctype: \"Comment\",\n\n                                                                                                fields: [\"name\", \"content\"],\n                                                                                                limit: 1,\n                                                                                                order_by: \"creation desc\",\n                                                                                            },\n                                                                                            callback: function (response) {\n                                                                                                console.log(response);\n                                                                                                if (\n                                                                                                    response &&\n                                                                                                    response.message &&\n                                                                                                    response.message[0]\n                                                                                                ) {\n                                                                                                    var lastComment =\n                                                                                                        response.message[0];\n                                                                                                    var lastCommentContent =\n                                                                                                        lastComment.content;\n                                                                                                    var tempElement =\n                                                                                                        document.createElement(\"div\");\n                                                                                                    tempElement.innerHTML =\n                                                                                                        lastCommentContent;\n                                                                                                    var extractedText =\n                                                                                                        tempElement.querySelector(\n                                                                                                            \"a\"\n                                                                                                        ).innerText;\n                                                                                                    console.log(extractedText);\n                                                                                                    spanElement.text(extractedText);\n                                                                                                }\n                                                                                            },\n                                                                                        });\n                                                                                        spanElement.appendTo(textElement);\n                                                                                        textElement.appendTo(messagesDiv);\n                                                                                    },\n                                                                                    error: (r) => {\n                                                                                        frappe.msgprint(\n                                                                                            \"something went wrong!\"\n                                                                                        );\n                                                                                    },\n                                                                                });\n\n                                                                                d1.hide();\n                                                                            },\n                                                                        });\n\n                                                                        const tableSection = $(\"<div>\").appendTo(\n                                                                            d1.body\n                                                                        );\n\n                                                                        function renderTable(data) {\n                                                                            tableSection.empty();\n\n                                                                            const table = $(\n                                                                                '<table class=\"table table-bordered\" id=\"tabledata\">'\n                                                                            ).appendTo(tableSection);\n                                                                            const thead = $(\"<thead>\").appendTo(table);\n                                                                            const tbody = $(\"<tbody>\").appendTo(table);\n\n                                                                            const headerRow = $(\"<tr>\").appendTo(thead);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Variable Name\")\n                                                                                .appendTo(headerRow);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Is Dynamic\")\n                                                                                .appendTo(headerRow);\n                                                                            $(\"<th>\")\n                                                                                .text(\"Variable Value\")\n                                                                                .appendTo(headerRow);\n\n                                                                            data.forEach((row) => {\n                                                                                const variableName = row.variable_name;\n                                                                                const variableValue = row.variable_value;\n                                                                                const isDynamic = row.is_dynamic;\n                                                                                const doctypeField = row.doctype_field;\n\n                                                                                const rowElement =\n                                                                                    $(\"<tr>\").appendTo(tbody);\n                                                                                $(\"<td>\")\n                                                                                    .text(variableName)\n                                                                                    .appendTo(rowElement);\n                                                                                const dynamicCheckbox = $(\n                                                                                    '<input type=\"checkbox\">'\n                                                                                )\n                                                                                    .prop(\"checked\", !!isDynamic)\n                                                                                    .appendTo($(\"<td>\").appendTo(rowElement));\n                                                                                const variableValueInput =\n                                                                                    $(\"<td>\").appendTo(rowElement);\n                                                                                if (isDynamic) {\n                                                                                    const selectField = $(\"<select>\")\n                                                                                        .css({ width: \"200px\", height: \"30px\" })\n                                                                                        .appendTo(variableValueInput);\n\n                                                                                    customerFields.forEach((field) => {\n                                                                                        $(\"<option>\")\n                                                                                            .text(field.label)\n                                                                                            .val(field.fieldname)\n                                                                                            .appendTo(selectField);\n                                                                                    });\n\n                                                                                    selectField.val(doctypeField);\n                                                                                } else {\n                                                                                    $('<input type=\"text\">')\n                                                                                        .val(variableValue)\n                                                                                        .css({ width: \"200px\", height: \"30px\" })\n                                                                                        .appendTo(variableValueInput);\n                                                                                }\n\n                                                                                dynamicCheckbox.on(\"change\", function () {\n                                                                                    const isChecked = $(this).is(\":checked\");\n                                                                                    row.is_dynamic = isChecked ? 1 : 0;\n                                                                                    if (isChecked) {\n                                                                                        variableValueInput.empty();\n                                                                                        const selectField = $(\"<select>\")\n                                                                                            .css({\n                                                                                                width: \"200px\",\n                                                                                                height: \"30px\",\n                                                                                            })\n                                                                                            .appendTo(variableValueInput);\n\n                                                                                        customerFields.forEach((field) => {\n                                                                                            $(\"<option>\")\n                                                                                                .text(field.label)\n                                                                                                .val(field.fieldname)\n                                                                                                .appendTo(selectField);\n                                                                                        });\n\n                                                                                        selectField.val(doctypeField);\n                                                                                        row.doctype_field = doctypeField;\n                                                                                    } else {\n                                                                                        variableValueInput.empty();\n                                                                                        $('<input type=\"text\">')\n                                                                                            .val(row.variable_value)\n                                                                                            .css({\n                                                                                                width: \"200px\",\n                                                                                                height: \"30px\",\n                                                                                            })\n                                                                                            .appendTo(variableValueInput);\n                                                                                        row.doctype_field = \"\";\n                                                                                    }\n                                                                                });\n\n                                                                                variableValueInput.on(\n                                                                                    \"change\",\n                                                                                    function () {\n                                                                                        const selectedValue = $(this).val();\n                                                                                        if (isDynamic) {\n                                                                                            row.doctype_field = selectedValue;\n                                                                                        } else {\n                                                                                            row.variable_value = selectedValue;\n                                                                                        }\n                                                                                    }\n                                                                                );\n                                                                            });\n                                                                        }\n\n                                                                        function getTableData() {\n                                                                            const table = tableSection.find(\"#tabledata\");\n                                                                            const data = [];\n\n                                                                            table\n                                                                                .find(\"tbody tr\")\n                                                                                .each((index, element) => {\n                                                                                    const variableName = $(element)\n                                                                                        .find(\"td:nth-child(1)\")\n                                                                                        .text();\n                                                                                    const isDynamic = $(element)\n                                                                                        .find('input[type=\"checkbox\"]')\n                                                                                        .is(\":checked\");\n                                                                                    const doctypeField = $(element)\n                                                                                        .find(\"select\")\n                                                                                        .val();\n                                                                                    const variableValueInput =\n                                                                                        $(element).find('input[type=\"text\"]');\n                                                                                    const variableValue = isDynamic\n                                                                                        ? doctypeField\n                                                                                        : variableValueInput.val();\n\n                                                                                    data.push({\n                                                                                        variable_name: variableName,\n                                                                                        variable_value: variableValue,\n                                                                                        is_dynamic: isDynamic ? 1 : 0,\n                                                                                        doctype_field: doctypeField,\n                                                                                    });\n                                                                                });\n\n                                                                            return data;\n                                                                        }\n\n                                                                        d1.show();\n                                                                    }\n                                                                },\n                                                                error: (r) => {\n                                                                    frappe.msgprint(\"something went wrong!\");\n                                                                },\n                                                            });\n                                                        }\n                                                    },\n                                                    error: (r) => {\n                                                        frappe.msgprint(\"something went wrong!\");\n                                                    },\n                                                });\n                                                function extractDynamicVariables(templateSample) {\n                                                    const regex = /{{([^{}]+)}}/g;\n                                                    const matches = [];\n                                                    let match;\n\n                                                    while ((match = regex.exec(templateSample)) !== null) {\n                                                        matches.push(match[1]);\n                                                    }\n\n                                                    return matches;\n                                                }\n                                            });\n\n                                            buttonElement.click(function () {\n                                                var message = inputElement.val();\n\n                                                if (message) {\n                                                    var currentDateTime = frappe.datetime.now_datetime();\n                                                    var formattedDateTime = moment(currentDateTime).format(\n                                                        \"DD-MM-YYYY HH:mm:ss\"\n                                                    );\n                                                    frappe.call({\n                                                        method:\n                                                            \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                        args: {\n                                                            number: phone,\n                                                            message: message,\n                                                            current_date: formattedDateTime,\n                                                        },\n                                                        callback: function (response) {\n                                                            console.log(response.message);\n                                                            inputElement.val(\"\");\n\n                                                            var textElement = $(\"<p>\")\n                                                                .css(\"padding-right\", \"10px\")\n                                                                .css(\"padding-left\", \"120px\")\n                                                                .css(\"text-align\", \"right\");\n                                                            var spanElement = $(\"<div>\")\n                                                                .css(\"background-color\", \"#dcf8c6\")\n                                                                .css(\"padding\", \"10px\")\n                                                                .css(\"padding-bottom\", \"20px\")\n                                                                .css(\"border-radius\", \"10px\");\n\n                                                            spanElement.text(message);\n                                                            spanElement.appendTo(textElement);\n                                                            textElement.appendTo(messagesDiv);\n                                                        },\n                                                    });\n                                                }\n                                            });\n                                        },\n                                    });\n\n\n\n                                } else {\n\n                                    container.empty();\n                                    headingDiv.appendTo(container);\n                                    messagesDiv.appendTo(container);\n\n                                    messagesDiv.empty();\n                                    allElement.appendTo(container);\n\n                                    setTimeout(function () {\n                                        messagesDiv.scrollTop(messagesDiv[0].scrollHeight);\n                                    }, 0);\n\n                                    closeButtonElement.on(\"click\", function () {\n                                        container.hide();\n                                    });\n\n                                    if (showButtonClicked) {\n                                        container.show();\n                                        showButtonClicked = true;\n                                    }\n\n\n                                    frappe.call({\n                                        method:\n                                            \"whatsapp_app.whatsapp_app.doctype.api.check_status\",\n                                        args: {\n                                            number: phone,\n                                        },\n                                        callback: function (response) {\n                                            if (response.message === \"yes\") {\n                                                buttonElement1.appendTo(allElement);\n                                                inputElement.appendTo(allElement);\n                                                buttonElement.appendTo(allElement);\n                                            } else {\n                                                \n                                                if (!expiredMessageAdded) {\n                                                    statusElement = $(\"<p>\")\n                                                        .css(\"color\", \"black\")\n                                                        .css(\"margin-top\", \"5px\")\n                                                        .css(\"width\", \"100%\")\n                                                        .css(\"text-align\", \"center\")\n                                                        .text(\"The chat has been expired\")\n                                                        .appendTo(allElement);\n                                \n                                                    expiredMessageAdded = true; \n                                                }\n                                                buttonElement1.prependTo(allElement);\n                                                buttonElement.appendTo(allElement);\n                                            }\n                                            \n                                        },\n                                    });\n\n                                    buttonElement1.click(function () {\n                                        \n                                        container.children().css('opacity', '0.6');\n                                        \n                                        var names = cur_frm.doc.name;\n                                        frappe.call({\n                                            method:\n                                                \"whatsapp_app.whatsapp_app.doctype.api.get_template_list\",\n                                            args: {\n                                                doctype: doctype,\n                                            },\n                                            callback: (r) => {\n                                                if (r.message) {\n                                                    const template = r.message;\n\n                                                    frappe.call({\n                                                        method: \"frappe.client.get_list\",\n                                                        args: {\n                                                            doctype: \"Templates\",\n                                                            filters: {\n                                                                name: [\"in\", template],\n                                                            },\n                                                            fields: [\"name\", \"status\", \"sample\"],\n                                                            limit_start: 0,\n                                                            limit_page_length: 0,\n                                                        },\n\n                                                        callback: function (response) {\n                                                            if (response.message) {\n                                                                const templateData = response.message;\n                                                                const customerDoctype = doctype;\n                                                                const customerFields = frappe\n                                                                    .get_meta(customerDoctype)\n                                                                    .fields.filter((field) => {\n                                                                        return (\n                                                                            field.fieldtype !== \"Column Break\" &&\n                                                                            field.fieldtype !== \"Section Break\"\n                                                                        );\n                                                                    })\n                                                                    .map((field) => {\n                                                                        return {\n                                                                            fieldname: field.fieldname,\n                                                                            label: field.label,\n                                                                        };\n                                                                    });\n\n                                                                const customerFieldLabels = customerFields.map(\n                                                                    (fieldname) => {\n                                                                        const fieldMeta = frappe\n                                                                            .get_meta(doctype)\n                                                                            .fields.find(\n                                                                                (field) => field.fieldname === fieldname\n                                                                            );\n                                                                        return fieldMeta\n                                                                            ? fieldMeta.label\n                                                                            : fieldname;\n                                                                    }\n                                                                );\n\n                                                                const d1 = new frappe.ui.Dialog({\n                                                                    title: \"Send Message\",\n                                                                    fields: [\n                                                                        {\n                                                                            label: \"Select Template\",\n                                                                            fieldname: \"select_template\",\n                                                                            fieldtype: \"Select\",\n                                                                            options: template,\n                                                                            onchange: function () {\n                                                                                const selectedValue = this.get_value();\n                                                                                const previousValue = this.last_value;\n                                                                                if (\n                                                                                    selectedValue &&\n                                                                                    selectedValue !== previousValue\n                                                                                ) {\n                                                                                    this.last_value = selectedValue;\n                                                                                    const selectedTemplateData =\n                                                                                        templateData.find(\n                                                                                            (template) =>\n                                                                                                template.name === selectedValue\n                                                                                        );\n                                                                                    if (selectedTemplateData) {\n                                                                                        const dynamicVariables =\n                                                                                            extractDynamicVariables(\n                                                                                                selectedTemplateData.sample\n                                                                                            );\n\n                                                                                        const variableData =\n                                                                                            dynamicVariables.map(\n                                                                                                (variable) => ({\n                                                                                                    variable_name: variable,\n                                                                                                    variable_value: \"\",\n                                                                                                    is_dynamic: 0,\n                                                                                                    doctype_field: \"\",\n                                                                                                })\n                                                                                            );\n\n                                                                                        renderTable(variableData);\n                                                                                    }\n                                                                                }\n                                                                            },\n                                                                        },\n                                                                    ],\n                                                                    primary_action_label: \"Send\",\n\n                                                                    primary_action(values) {\n                                                                        const tableData = getTableData();\n                                                                        const dataList = tableData.map((row) => ({\n                                                                            name: row.variable_name,\n                                                                            is_dynamic: row.is_dynamic ? 1 : 0,\n                                                                            value: row.is_dynamic\n                                                                                ? row.doctype_field\n                                                                                : row.variable_value,\n                                                                        }));\n\n                                                                        const hasEmptyValue = dataList.some(\n                                                                            (row) => !row.value\n                                                                        );\n                                                                        if (hasEmptyValue) {\n                                                                            frappe.msgprint(\n                                                                                \"Please fill in all the Variable Value fields.\"\n                                                                            );\n                                                                            return;\n                                                                        }\n\n                                                                        var currentDateTime =\n                                                                            frappe.datetime.now_datetime();\n                                                                        var formattedDateTime = moment(\n                                                                            currentDateTime\n                                                                        ).format(\"DD-MM-YYYY HH:mm:ss\");\n\n                                                                        console.log(formattedDateTime);\n\n                                                                        frappe.call({\n                                                                            method:\n                                                                                \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                                            args: {\n                                                                                template_name:\n                                                                                    values[\"select_template\"],\n                                                                                doctype: doctype,\n                                                                                name: names,\n                                                                                data: dataList,\n                                                                                current_date: formattedDateTime,\n                                                                                number: phone,\n                                                                            },\n                                                                            freeze: true,\n                                                                            callback: (r) => {\n                                                                                var textElement = $(\"<p>\")\n                                                                                    .css(\"padding-right\", \"10px\")\n                                                                                    .css(\"padding-left\", \"120px\")\n                                                                                    .css(\"text-align\", \"right\");\n                                                                                var spanElement = $(\"<div>\")\n                                                                                    .css(\"background-color\", \"#dcf8c6\")\n                                                                                    .css(\"padding\", \"10px\")\n                                                                                    .css(\"padding-bottom\", \"20px\")\n                                                                                    .css(\"border-radius\", \"10px\");\n\n                                                                                frappe.call({\n                                                                                    method: \"frappe.client.get_list\",\n                                                                                    args: {\n                                                                                        doctype: \"Comment\",\n\n                                                                                        fields: [\"name\", \"content\"],\n                                                                                        limit: 1,\n                                                                                        order_by: \"creation desc\",\n                                                                                    },\n                                                                                    callback: function (response) {\n                                                                                        console.log(response);\n                                                                                        if (\n                                                                                            response &&\n                                                                                            response.message &&\n                                                                                            response.message[0]\n                                                                                        ) {\n                                                                                            var lastComment =\n                                                                                                response.message[0];\n                                                                                            var lastCommentContent =\n                                                                                                lastComment.content;\n                                                                                            var tempElement =\n                                                                                                document.createElement(\"div\");\n                                                                                            tempElement.innerHTML =\n                                                                                                lastCommentContent;\n                                                                                            var extractedText =\n                                                                                                tempElement.querySelector(\n                                                                                                    \"a\"\n                                                                                                ).innerText;\n                                                                                            console.log(extractedText);\n                                                                                            spanElement.text(extractedText);\n                                                                                        }\n                                                                                    },\n                                                                                });\n                                                                                spanElement.appendTo(textElement);\n                                                                                textElement.appendTo(messagesDiv);\n                                                                            },\n                                                                            error: (r) => {\n                                                                                frappe.msgprint(\n                                                                                    \"something went wrong!\"\n                                                                                );\n                                                                            },\n                                                                        });\n\n                                                                        d1.hide();\n                                                                    },\n                                                                });\n\n                                                                const tableSection = $(\"<div>\").appendTo(\n                                                                    d1.body\n                                                                );\n\n                                                                function renderTable(data) {\n                                                                    tableSection.empty();\n\n                                                                    const table = $(\n                                                                        '<table class=\"table table-bordered\" id=\"tabledata\">'\n                                                                    ).appendTo(tableSection);\n                                                                    const thead = $(\"<thead>\").appendTo(table);\n                                                                    const tbody = $(\"<tbody>\").appendTo(table);\n\n                                                                    const headerRow = $(\"<tr>\").appendTo(thead);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Variable Name\")\n                                                                        .appendTo(headerRow);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Is Dynamic\")\n                                                                        .appendTo(headerRow);\n                                                                    $(\"<th>\")\n                                                                        .text(\"Variable Value\")\n                                                                        .appendTo(headerRow);\n\n                                                                    data.forEach((row) => {\n                                                                        const variableName = row.variable_name;\n                                                                        const variableValue = row.variable_value;\n                                                                        const isDynamic = row.is_dynamic;\n                                                                        const doctypeField = row.doctype_field;\n\n                                                                        const rowElement =\n                                                                            $(\"<tr>\").appendTo(tbody);\n                                                                        $(\"<td>\")\n                                                                            .text(variableName)\n                                                                            .appendTo(rowElement);\n                                                                        const dynamicCheckbox = $(\n                                                                            '<input type=\"checkbox\">'\n                                                                        )\n                                                                            .prop(\"checked\", !!isDynamic)\n                                                                            .appendTo($(\"<td>\").appendTo(rowElement));\n                                                                        const variableValueInput =\n                                                                            $(\"<td>\").appendTo(rowElement);\n                                                                        if (isDynamic) {\n                                                                            const selectField = $(\"<select>\")\n                                                                                .css({ width: \"200px\", height: \"30px\" })\n                                                                                .appendTo(variableValueInput);\n\n                                                                            customerFields.forEach((field) => {\n                                                                                $(\"<option>\")\n                                                                                    .text(field.label)\n                                                                                    .val(field.fieldname)\n                                                                                    .appendTo(selectField);\n                                                                            });\n\n                                                                            selectField.val(doctypeField);\n                                                                        } else {\n                                                                            $('<input type=\"text\">')\n                                                                                .val(variableValue)\n                                                                                .css({ width: \"200px\", height: \"30px\" })\n                                                                                .appendTo(variableValueInput);\n                                                                        }\n\n                                                                        dynamicCheckbox.on(\"change\", function () {\n                                                                            const isChecked = $(this).is(\":checked\");\n                                                                            row.is_dynamic = isChecked ? 1 : 0;\n                                                                            if (isChecked) {\n                                                                                variableValueInput.empty();\n                                                                                const selectField = $(\"<select>\")\n                                                                                    .css({\n                                                                                        width: \"200px\",\n                                                                                        height: \"30px\",\n                                                                                    })\n                                                                                    .appendTo(variableValueInput);\n\n                                                                                customerFields.forEach((field) => {\n                                                                                    $(\"<option>\")\n                                                                                        .text(field.label)\n                                                                                        .val(field.fieldname)\n                                                                                        .appendTo(selectField);\n                                                                                });\n\n                                                                                selectField.val(doctypeField);\n                                                                                row.doctype_field = doctypeField;\n                                                                            } else {\n                                                                                variableValueInput.empty();\n                                                                                $('<input type=\"text\">')\n                                                                                    .val(row.variable_value)\n                                                                                    .css({\n                                                                                        width: \"200px\",\n                                                                                        height: \"30px\",\n                                                                                    })\n                                                                                    .appendTo(variableValueInput);\n                                                                                row.doctype_field = \"\";\n                                                                            }\n                                                                        });\n\n                                                                        variableValueInput.on(\n                                                                            \"change\",\n                                                                            function () {\n                                                                                const selectedValue = $(this).val();\n                                                                                if (isDynamic) {\n                                                                                    row.doctype_field = selectedValue;\n                                                                                } else {\n                                                                                    row.variable_value = selectedValue;\n                                                                                }\n                                                                            }\n                                                                        );\n                                                                    });\n                                                                }\n\n                                                                function getTableData() {\n                                                                    const table = tableSection.find(\"#tabledata\");\n                                                                    const data = [];\n\n                                                                    table\n                                                                        .find(\"tbody tr\")\n                                                                        .each((index, element) => {\n                                                                            const variableName = $(element)\n                                                                                .find(\"td:nth-child(1)\")\n                                                                                .text();\n                                                                            const isDynamic = $(element)\n                                                                                .find('input[type=\"checkbox\"]')\n                                                                                .is(\":checked\");\n                                                                            const doctypeField = $(element)\n                                                                                .find(\"select\")\n                                                                                .val();\n                                                                            const variableValueInput =\n                                                                                $(element).find('input[type=\"text\"]');\n                                                                            const variableValue = isDynamic\n                                                                                ? doctypeField\n                                                                                : variableValueInput.val();\n\n                                                                            data.push({\n                                                                                variable_name: variableName,\n                                                                                variable_value: variableValue,\n                                                                                is_dynamic: isDynamic ? 1 : 0,\n                                                                                doctype_field: doctypeField,\n                                                                            });\n                                                                        });\n\n                                                                    return data;\n                                                                }\n\n                                                                d1.show();\n                                                            }\n                                                        },\n                                                        error: (r) => {\n                                                            frappe.msgprint(\"something went wrong!\");\n                                                        },\n                                                    });\n                                                }\n                                            },\n                                            error: (r) => {\n                                                frappe.msgprint(\"something went wrong!\");\n                                            },\n                                        });\n                                        function extractDynamicVariables(templateSample) {\n                                            const regex = /{{([^{}]+)}}/g;\n                                            const matches = [];\n                                            let match;\n\n                                            while ((match = regex.exec(templateSample)) !== null) {\n                                                matches.push(match[1]);\n                                            }\n\n                                            return matches;\n                                        }\n                                    });\n                                    buttonElement.click(function () {\n                                        var message = inputElement.val();\n\n                                        if (message) {\n                                            var currentDateTime = frappe.datetime.now_datetime();\n                                            var formattedDateTime = moment(currentDateTime).format(\n                                                \"DD-MM-YYYY HH:mm:ss\"\n                                            );\n                                            frappe.call({\n                                                method:\n                                                    \"whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message\",\n                                                args: {\n                                                    number: phone,\n                                                    message: message,\n                                                    current_date: formattedDateTime,\n                                                },\n                                                callback: function (response) {\n                                                    console.log(response.message);\n                                                    inputElement.val(\"\");\n\n                                                    var textElement = $(\"<p>\")\n                                                        .css(\"padding-right\", \"10px\")\n                                                        .css(\"padding-left\", \"120px\")\n                                                        .css(\"text-align\", \"right\");\n                                                    var spanElement = $(\"<div>\")\n                                                        .css(\"background-color\", \"#dcf8c6\")\n                                                        .css(\"padding\", \"10px\")\n                                                        .css(\"padding-bottom\", \"20px\")\n                                                        .css(\"border-radius\", \"10px\");\n\n                                                    spanElement.text(message);\n                                                    spanElement.appendTo(textElement);\n                                                    textElement.appendTo(messagesDiv);\n                                                },\n                                            });\n                                        }\n                                    });\n                                }\n\n\n\n                            }\n                        });\n                    }\n                );\n            }\n        }\n\n        function adjustContainerStyles() {\n            if (window.innerWidth < 499) {\n                container.css({\n                    width: \"80%\",\n                    right: \"10%\",\n                });\n            } else if (window.innerWidth >= 499 && window.innerWidth < 530) {\n                container.css({\n                    width: \"40%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 530 && window.innerWidth < 800) {\n                container.css({\n                    width: \"40%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 800 && window.innerWidth < 798) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 798 && window.innerWidth < 838) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n            } else if (window.innerWidth >= 838 && window.innerWidth < 1300) {\n                container.css({\n                    width: \"30%\",\n                    right: \"5%\",\n                });\n                inputElement.css({\n                    width: \"40%\",\n                });\n            } else {\n                container.css({\n                    width: \"20%\",\n                    right: \"80px\",\n                    height: \"65%\",\n                });\n            }\n        }\n\n        $(window).resize(adjustContainerStyles);\n\n        adjustContainerStyles();\n    },\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-07-11 15:17:59.540316",
  "module": "Whatsapp App",
  "name": "Send Whatsapp Message From Equipments List",
  "script": "frappe.listview_settings['Item'].onload = function(listview) {\n    const currentUserRoles = frappe.user_roles;\n  const isAdmin = currentUserRoles.includes('Administrator');\n  const hasRequiredRole = !isAdmin && (currentUserRoles.includes('Vendor') || currentUserRoles.includes('Customer') || currentUserRoles.includes('Driver'));\n\n  if (!hasRequiredRole || isAdmin) {\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n      test(listview);\n    });\n  }\n};\n\n\n\nfunction test(listview) {\n  let names = [];\n  $.each(listview.get_checked_items(), function(key, value) {\n    names.push(value.name);\n  });\n  if (names.length === 0) {\n    frappe.throw(__(\"No rows selected.\"));\n  }\n\n  frappe.call({\n    method: 'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n    args: {\n      'doctype': doctype\n    },\n    callback: (r) => {\n      if (r.message) {\n        const template = r.message;\n\n        frappe.call({\n          method: 'frappe.client.get_list',\n          args: {\n            'doctype': 'Templates',\n            'filters': {\n              'name': ['in', template]\n            },\n            'fields': ['name', 'status','sample'],\n            'limit_start': 0,  \n            'limit_page_length': 0  \n          },\n\n          callback: function(response) {\n            if (response.message) {\n              const templateData = response.message;\n              const customerDoctype = doctype;\n              const customerFields = frappe.get_meta(customerDoctype).fields.filter(field => {\n                return field.fieldtype !== 'Column Break' && field.fieldtype !== 'Section Break';\n              }).map(field => {\n                return {\n                  fieldname: field.fieldname,\n                  label: field.label\n                };\n              });\n\n              const customerFieldLabels = customerFields.map(fieldname => {\n                const fieldMeta = frappe.get_meta(doctype).fields.find(field => field.fieldname === fieldname);\n                return fieldMeta ? fieldMeta.label : fieldname;\n              });\n\n\n              const d1 = new frappe.ui.Dialog({\n                title: 'Send Message',\n                fields: [\n                  {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    onchange: function() {\n                      const selectedValue = this.get_value();\n                      const previousValue = this.last_value;\n                      if (selectedValue && selectedValue !== previousValue) {\n                        this.last_value = selectedValue;\n                        const selectedTemplateData = templateData.find((template) => template.name === selectedValue);\n                        if (selectedTemplateData) {\n                          const dynamicVariables = extractDynamicVariables(selectedTemplateData.sample);\n\n                          const variableData = dynamicVariables.map(variable => ({\n                            variable_name: variable,\n                            variable_value: '',\n                            is_dynamic: 0,\n                            doctype_field: ''\n                          }));\n                          renderTable(variableData);\n                          } else {\n                            renderTable([]);\n                          }\n                      }\n                    }\n                  }\n                ],\n                primary_action_label: 'Send',\n\n                primary_action(values) {\n                  const selectTemplateValue = d1.get_value('select_template');\n\n                  if (!selectTemplateValue) {\n                    frappe.msgprint('Please select a template.');\n                    return;\n                  }\n                    \n                  const tableData = getTableData();\n                  const dataList = tableData.map(row => ({\n                    name: row.variable_name,\n                    is_dynamic: row.is_dynamic ? 1 : 0,\n                    value: row.is_dynamic ? row.doctype_field : row.variable_value\n                  }));\n                  \n                  if (dataList.length === 0) {\n                        frappe.msgprint('Nothing to send whatsapp message here!');\n                        return;\n                     }\n\n                  const hasEmptyValue = dataList.some(row => !row.value);\n                  if (hasEmptyValue) {\n                    frappe.msgprint('Please fill in the Variable Value fields.');\n                    return;\n                  }\n\n                  showConfirmDialog(listview);\n\n                  d1.hide();\n                }\n              });\n \n              const tableSection = $('<div>').appendTo(d1.body);\n\n              function renderTable(data) {\n                tableSection.empty();\n                \n                if (data.length === 0) {\n                        const noDataMessage = $('<p>').text('No dynamic variable is available in this template').appendTo(tableSection);\n                        return;\n                    }\n\n                const table = $('<table class=\"table table-bordered\" id=\"tabledata\">').appendTo(tableSection);\n                const thead = $('<thead>').appendTo(table);\n                const tbody = $('<tbody>').appendTo(table);\n\n                const headerRow = $('<tr>').appendTo(thead);\n                $('<th>').text('Variable Name').appendTo(headerRow);\n                $('<th>').text('Is Dynamic').appendTo(headerRow);\n                $('<th>').text('Variable Value').appendTo(headerRow);\n\n                data.forEach(row => {\n                  const variableName = row.variable_name;\n                  const variableValue = row.variable_value;\n                  const isDynamic = row.is_dynamic;\n                  const doctypeField = row.doctype_field;\n\n                  const rowElement = $('<tr>').appendTo(tbody);\n                  $('<td>').text(variableName).appendTo(rowElement);\n                  const dynamicCheckbox = $('<input type=\"checkbox\">').prop('checked', !!isDynamic).appendTo($('<td>').appendTo(rowElement));\n                  const variableValueInput = $('<td>').appendTo(rowElement);\n                  if (isDynamic) {\n                    const selectField = $('<select>').css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n\n                    customerFields.forEach(field => {\n                      $('<option>').text(field.label).val(field.fieldname).appendTo(selectField);\n                    });\n\n                    selectField.val(doctypeField);\n                  } else {\n                      $('<input type=\"text\">')\n                        .val(variableValue)\n                        .css({ width: '200px', height: '30px' })  // Set the desired width and height\n                        .appendTo(variableValueInput);\n                    }\n\n                  dynamicCheckbox.on('change', function() {\n                    const isChecked = $(this).is(':checked');\n                    row.is_dynamic = isChecked ? 1 : 0;\n                    if (isChecked) {\n                      variableValueInput.empty();\n                      const selectField = $('<select>').css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n\n                      customerFields.forEach(field => {\n                        $('<option>').text(field.label).val(field.fieldname).appendTo(selectField);\n                      });\n\n                      selectField.val(doctypeField);\n                      row.doctype_field = doctypeField; // Store the selected fieldname\n                    } else {\n                      variableValueInput.empty();\n                      $('<input type=\"text\">').val(row.variable_value).css({ width: '200px', height: '30px' }).appendTo(variableValueInput);\n                      row.doctype_field = ''; // Clear the stored fieldname\n                    }\n                  });\n\n                  variableValueInput.on('change', function() {\n                    const selectedValue = $(this).val();\n                    if (isDynamic) {\n                      row.doctype_field = selectedValue;\n                    } else {\n                      row.variable_value = selectedValue;\n                    }\n                  });\n                });\n              }\n\n           function showConfirmDialog(listview) {\n              const selectedCustomerNames = listview.get_checked_items().map(item => item.name);\n              const selectTemplateValue = d1.get_value('select_template');\n              const selectedTemplateData = templateData.find(template => template.name === selectTemplateValue);\n              const templateSample = selectedTemplateData ? selectedTemplateData.sample : '';\n              const tableData = getTableData();\n              const dataList = tableData.map(row => ({\n                              name: row.variable_name,\n                              is_dynamic: row.is_dynamic ? 1 : 0,\n                              value: row.is_dynamic ? row.doctype_field : row.variable_value\n              }));\n              \n             const updatedTemplateSample = selectedTemplateData.sample.replace(/{{([^{}]+)}}/g, (match, variable) => {\n             const variableRow = dataList.find(row => row.name === variable);\n             if (variableRow && variableRow.is_dynamic) {\n                   return `{{ ${variableRow.value} }}`;\n                 } else if (variableRow) {\n                   return variableRow.value;\n                 } else {\n                   return match;\n                 }\n               });\n               \n   \n              frappe.call({\n                method: 'frappe.client.get_list',\n                args: {\n                  doctype: 'Item',\n                  filters: { name: ['in', selectedCustomerNames] },\n                  fields: ['name', 'whatsapp_no', 'equipment_main_category','supplier_name'], // Include 'whatsapp_no' field\n                  limit_start: 0,\n                  limit_page_length: 0\n                },\n                callback: function(response) {                 \n                    \n                  if (response.message) {\n                    const selectedCustomers = response.message;\n                    const whatsappNos = selectedCustomers.map(customer => customer.whatsapp_no);\n            \n                    const confirmDialog = new frappe.ui.Dialog({\n                      title: 'Whatsapp Message',\n                      fields: [\n                        {\n                          fieldtype: 'HTML',\n                          options: `\n                            <div class=\"template-preview\">\n                              <h5>Template Sample</h5>\n                              <div class=\"sample-data\">${updatedTemplateSample.replace(/\\n/g, '<br>')}</div>\n                            </div>\n                            <table class=\"table table-bordered\">\n                              <thead>\n                                <tr>\n                                  <th><input type=\"checkbox\" id=\"select-all-checkbox\" style=\"vertical-align: middle;\"></th>\n                                  <th style=\"display: none;\">Names</th>\n                                  <th>Equipment main category</th>\n                                  <th>Supplier Name</th>\n                                  <th>Whatsapp Number</th>\n                                  <th></th> \n                                </tr>\n                              </thead>\n                              <tbody>\n                                ${selectedCustomers.map((customer, index) => `\n                                  <tr>\n                                    <td><input type=\"checkbox\" class=\"row-checkbox\" style=\"vertical-align: middle;\" ${whatsappNos[index] ? 'checked' : ''} ${whatsappNos[index] ? '' : 'disabled'}></td>\n                                    <td style=\"display: none;\">${customer.name}</td>\n                                    <td>${customer.equipment_main_category}</td>\n                                    <td>${customer.supplier_name}</td>\n                                    <td>${whatsappNos[index] ? whatsappNos[index] : 'Whatsapp number not found'}</td>\n                                    <td class=\"text-center\"><button class=\"btn btn-default delete-row-btn\" data-index=\"${index}\" style=\"background-color: #f4f5f6; color: #808080;\"><i class=\"fa fa-trash\" style=\"font-size: 16px;\"></i></button></td>\n                                  </tr>\n                                `).join('')}\n                              </tbody>\n                            </table>\n                          `,\n                        },\n                      ],\n                      primary_action_label: 'Confirm',\n                      primary_action() {\n                        const selectedCustomerName = Array.from(confirmDialog.body.querySelectorAll('input.row-checkbox:checked')).map(checkbox => {\n                          const row = checkbox.closest('tr');\n                          return row.querySelector('td:nth-child(2)').textContent.trim();\n                        });\n            \n                        if (selectedCustomerName.length === 0) {\n                          frappe.msgprint('Please select a Item to send the WhatsApp message.');\n                          return;\n                        }\n            \n                        const sendConfirmationDialog = new frappe.ui.Dialog({\n                          title: 'Confirmation',\n                          fields: [\n                            {\n                              fieldtype: 'HTML',\n                              options: `<div>Do you want to send the WhatsApp message?</div>`,\n                            },\n                          ],\n                          primary_action_label: 'Yes',\n                          secondary_action_label: 'No',\n                          primary_action() {\n                            const selectedCustomerNames = Array.from(confirmDialog.body.querySelectorAll('input.row-checkbox:checked')).map(checkbox => {\n                              const row = checkbox.closest('tr');\n                              return row.querySelector('td:nth-child(2)').textContent.trim();\n                            });\n            \n                            const tableData = getTableData();\n                            const dataList = tableData.map(row => ({\n                              name: row.variable_name,\n                              is_dynamic: row.is_dynamic ? 1 : 0,\n                              value: row.is_dynamic ? row.doctype_field : row.variable_value\n                            }));\n            \n                            frappe.call({\n                              method: 'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                              args: {\n                                'template_name': selectTemplateValue,\n                                'doctype': 'Item',\n                                'name': selectedCustomerNames,\n                                'data': dataList,\n                              },\n                              freeze: true,\n                              callback: (r) => {\n                                frappe.msgprint('Message sent');\n                              },\n                              error: (r) => {\n                                frappe.msgprint('Something went wrong!');\n                              }\n                            });\n            \n                            sendConfirmationDialog.hide();\n                            confirmDialog.hide();\n                          },\n                          secondary_action() {\n                            sendConfirmationDialog.hide();\n                          },\n                        });\n            \n                        sendConfirmationDialog.show();\n                      },\n                    });\n            \n            \n                    confirmDialog.body.querySelectorAll('.delete-row-btn').forEach(button => {\n                      button.addEventListener('click', function() {\n                        const row = this.closest('tr');\n                        const index = parseInt(this.dataset.index);\n                        row.remove();\n                      });\n                    });\n            \n                   const checkboxes = confirmDialog.body.querySelectorAll('.row-checkbox:not([disabled])');\n                    const selectAllCheckbox = confirmDialog.body.querySelector('#select-all-checkbox');\n                \n                    selectAllCheckbox.addEventListener('change', function() {\n                      checkboxes.forEach(checkbox => {\n                        if (!checkbox.disabled) {\n                          checkbox.checked = this.checked;\n                        }\n                      });\n                    });\n                    \n                    checkboxes.forEach(checkbox => {\n                      checkbox.addEventListener('change', function() {\n                        const allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);\n                        selectAllCheckbox.checked = allChecked;\n                      });\n                    });\n                    \n                    confirmDialog.body.querySelectorAll('.eye-icon-btn').forEach(button => {\n                      button.addEventListener('click', function() {\n                        const customerDetailsDialog = new frappe.ui.Dialog({\n                          title: 'Whatsapp Message Preview',\n                          fields: [\n                            {\n                              fieldtype: 'HTML',\n                              options: `\n                                <div class=\"sample-data\">${updatedTemplateSample.replace(/\\n/g, '<br>')}</div>\n                              `,\n                            },\n                          ],\n                          primary_action_label: 'OK',\n                          primary_action() {\n                            customerDetailsDialog.hide();\n                          },\n                        });\n                        \n                        customerDetailsDialog.show();\n    \n                      });\n                    });\n                         \n                    confirmDialog.show();\n                      }\n                    },\n              });\n            }\n\n              function getTableData() {\n                const table = tableSection.find('#tabledata');\n                const data = [];\n\n                table.find('tbody tr').each((index, element) => {\n                  const variableName = $(element).find('td:nth-child(1)').text();\n                  const isDynamic = $(element).find('input[type=\"checkbox\"]').is(':checked');\n                  const doctypeField = $(element).find('select').val();\n                  const variableValueInput = $(element).find('input[type=\"text\"]');\n                  const variableValue = isDynamic ? doctypeField : variableValueInput.val();\n\n                  data.push({\n                    variable_name: variableName,\n                    variable_value: variableValue,\n                    is_dynamic: isDynamic ? 1 : 0,\n                    doctype_field: doctypeField\n                  });\n                });\n\n                return data;\n              }\n\n\n              d1.show();\n            }\n          },\n          error: (r) => {\n            frappe.msgprint('something went wrong!');\n          }\n        });\n      }\n    },\n    error: (r) => {\n      frappe.msgprint('something went wrong!');\n    }\n  });\n}\n\nfunction extractDynamicVariables(templateSample) {\n  const regex = /{{([^{}]+)}}/g; \n  const matches = [];\n  let match;\n\n  while ((match = regex.exec(templateSample)) !== null) {\n    matches.push(match[1]);\n  }\n\n  return matches;\n}",
  "view": "List"
 }
]